<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて (cssについての文書)</title><link>https://32imuf.com/</link><description></description><atom:link href="https://32imuf.com/tags/css.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Sun, 01 Dec 2019 17:10:24 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>CSS のメモ</title><link>https://32imuf.com/html-css/css/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="masonry-css"&gt;
&lt;h2&gt;Masonry 風デザインの CSS がいろいろのっていておもしろい&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://coliss.com/articles/build-websites/operation/css/layout-for-responsive.html"&gt;https://coliss.com/articles/build-websites/operation/css/layout-for-responsive.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="css"&gt;
&lt;h2&gt;CSSの優先順位がわかりやすい&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.slideshare.net/yumi-uniq-ishizaki/css-13918388?ref=https://nelog.jp/specificity-calculator"&gt;https://www.slideshare.net/yumi-uniq-ishizaki/css-13918388?ref=https://nelog.jp/specificity-calculator&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="flexbox"&gt;
&lt;h2&gt;Flexbox がわかりやすい&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.webcreatorbox.com/tech/css-flexbox-cheat-sheet"&gt;https://www.webcreatorbox.com/tech/css-flexbox-cheat-sheet&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;生の CSS 書くのだるいとき&lt;/h2&gt;
&lt;p&gt;これを導入すると良さそうとのこと&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;stylus&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sass&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="css3-3"&gt;
&lt;h2&gt;CSS3 ベスト3&lt;/h2&gt;
&lt;p&gt;flex しか使ったことがない...&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;flex&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;object-fit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linear-gradient&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>css</category><guid>https://32imuf.com/html-css/css/note/</guid><pubDate>Mon, 05 Nov 2018 15:00:00 GMT</pubDate></item><item><title>PyCharm の File Watcher で、 Stylus の CSS ファイル生成先ディレクトリを指定する。</title><link>https://32imuf.com/html-css/configure-stylus-output-directory/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;リファレンス&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;PyCharm: &lt;a class="reference external" href="https://www.jetbrains.com/help/pycharm/using-file-watchers.html#ws_filewatcher_examples"&gt;https://www.jetbrains.com/help/pycharm/using-file-watchers.html#ws_filewatcher_examples&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stylus: &lt;a class="reference external" href="http://stylus-lang.com/docs/executable.html"&gt;http://stylus-lang.com/docs/executable.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;手順&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;PyCharm -&amp;gt; Preferences -&amp;gt; Tools -&amp;gt; File Watchers -&amp;gt; Stylus -&amp;gt; 編集ボタン (えんぴつみたいなマーク) 押下&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Edit Watcher ダイアログで、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Arguments: &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--out&lt;/span&gt; &lt;span class="pre"&gt;$FileParentDir$/files/static/css/&lt;/span&gt; $FileName$&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/html-css/configure-stylus-output-directory/edit-watcher.png" src="https://32imuf.com/images/html-css/configure-stylus-output-directory/edit-watcher.png"&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;Insert &lt;span class="pre"&gt;Macro...&lt;/span&gt;&lt;/code&gt; ボタンを押下すると、指定できるマクロのプレビューが見られるので、好きなものを選ぶと良い。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--out&lt;/span&gt; &lt;span class="pre"&gt;$FileParentDir$/files/static/css/&lt;/span&gt;&lt;/code&gt; の指定は、 Stylus の Options 指定形式に従うこと。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;$FileName$&lt;/code&gt; は、どうも PyCharm の File Watcher 側で必要らしく、指定しないと動かなくなるので、削除しないこと。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>css</category><guid>https://32imuf.com/html-css/configure-stylus-output-directory/</guid><pubDate>Fri, 02 Nov 2018 15:00:00 GMT</pubDate></item><item><title>Stylus を使う</title><link>https://32imuf.com/html-css/stylus/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/html-css/stylus/#id2" id="id5"&gt;リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/html-css/stylus/#id3" id="id6"&gt;インストール&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/html-css/stylus/#id4" id="id7"&gt;使い方&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/html-css/stylus/#id5"&gt;リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stylus-lang.com/"&gt;http://stylus-lang.com/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/html-css/stylus/#id6"&gt;インストール&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;インストールガイド&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stylus-lang.com/#get-styling-with-stylus"&gt;http://stylus-lang.com/#get-styling-with-stylus&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Node.js をインストールする&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://nodejs.org/en/"&gt;https://nodejs.org/en/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ガイドに書いてある通りにコマンドを実行する。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_eb72ae0642e94b9eb396106da5590777-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo npm install stylus -g
&lt;a name="rest_code_eb72ae0642e94b9eb396106da5590777-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;/usr/local/bin/stylus -&amp;gt; /usr/local/lib/node_modules/stylus/bin/stylus&lt;/span&gt;
&lt;a name="rest_code_eb72ae0642e94b9eb396106da5590777-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;+ stylus@0.54.5&lt;/span&gt;
&lt;a name="rest_code_eb72ae0642e94b9eb396106da5590777-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;added 20 packages from 46 contributors in 1.399s&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;インストールできたか確認する。&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_e97c211d910e4990b15d86ec463e7fb3-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; stylus -V
&lt;a name="rest_code_e97c211d910e4990b15d86ec463e7fb3-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;0.54.5&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/html-css/stylus/#id7"&gt;使い方&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ファイルの拡張子は、 &lt;code class="docutils literal"&gt;.styl&lt;/code&gt; もしくは &lt;code class="docutils literal"&gt;.stylus&lt;/code&gt; とする。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;初めて &lt;code class="docutils literal"&gt;styl&lt;/code&gt; ファイルを作成すると、 &lt;code class="docutils literal"&gt;File Watchers&lt;/code&gt; を有効にするか否か聞かれるので (PyCharm の上部に表示される) &lt;code class="docutils literal"&gt;OK&lt;/code&gt; を押下すると、自動ビルドされる。&lt;/p&gt;
&lt;p&gt;以降、変更を検知すると勝手にビルドされる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ログ&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_6d170ae861084680bc67a0c4b27a41ad-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;...&lt;/span&gt;
&lt;a name="rest_code_6d170ae861084680bc67a0c4b27a41ad-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;2018-10-18 22:14:19,451 INFO Building files/static/css/style-sp.css&lt;/span&gt;
&lt;a name="rest_code_6d170ae861084680bc67a0c4b27a41ad-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;2018-10-18 22:14:19,454 INFO Building files/static/css/style-sp.styl&lt;/span&gt;
&lt;a name="rest_code_6d170ae861084680bc67a0c4b27a41ad-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;File Watchers&lt;/code&gt; の設定変更は、こちらで行う。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/html-css/stylus/file-watchers.png" src="https://32imuf.com/images/html-css/stylus/file-watchers.png"&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyCharm 上ではこんな風に見える&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/html-css/stylus/stylus-image.png" src="https://32imuf.com/images/html-css/stylus/stylus-image.png"&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTML の &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/span&gt;&lt;/code&gt; には、こう書く&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_9d9e3a9ab76d4ff6baf2924cbc30f5ab-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/static/css/style-sp.css"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;style-sp.styl&lt;/span&gt;&lt;/code&gt; と書いても認識してくれない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;.styl&lt;/code&gt; ファイルに、Stylus の書き方とふつうの CSS の書き方を併記できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;style-sp.styl&lt;/span&gt;&lt;/code&gt; にこう書くと、&lt;/p&gt;
&lt;pre class="code css"&gt;&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;charset&lt;/span&gt; &lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-3"&gt;&lt;/a&gt;&lt;span class="c"&gt;/* --------------------------------&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-4"&gt;&lt;/a&gt;&lt;span class="c"&gt; * Stylus の書き方&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-5"&gt;&lt;/a&gt;&lt;span class="c"&gt; * -------------------------------- */&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-6"&gt;&lt;/a&gt;&lt;span class="nt"&gt;body&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-7"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;background-color&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;f8b500&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-9"&gt;&lt;/a&gt;&lt;span class="c"&gt;/* --------------------------------&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-10"&gt;&lt;/a&gt;&lt;span class="c"&gt; * CSS の書き方&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-11"&gt;&lt;/a&gt;&lt;span class="c"&gt; * -------------------------------- */&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-12"&gt;&lt;/a&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-13"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;background-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;ed6d3d&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;a name="rest_code_1ab174272570403fa15fb92220bc7ccb-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;style-sp.css&lt;/span&gt;&lt;/code&gt; にこう出力される&lt;/p&gt;
&lt;pre class="code css"&gt;&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;charset&lt;/span&gt; &lt;span class="s2"&gt;"UTF-8"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-2"&gt;&lt;/a&gt;&lt;span class="c"&gt;/* --------------------------------&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-3"&gt;&lt;/a&gt;&lt;span class="c"&gt; * Stylus の書き方&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-4"&gt;&lt;/a&gt;&lt;span class="c"&gt; * -------------------------------- */&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-5"&gt;&lt;/a&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-6"&gt;&lt;/a&gt;  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#f8b500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-8"&gt;&lt;/a&gt;&lt;span class="c"&gt;/* --------------------------------&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-9"&gt;&lt;/a&gt;&lt;span class="c"&gt; * CSS の書き方&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-10"&gt;&lt;/a&gt;&lt;span class="c"&gt; * -------------------------------- */&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-11"&gt;&lt;/a&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-12"&gt;&lt;/a&gt;  &lt;span class="k"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#ed6d3d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_820ed96104564528b78324ba486dc17a-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>css</category><guid>https://32imuf.com/html-css/stylus/</guid><pubDate>Wed, 17 Oct 2018 15:00:00 GMT</pubDate></item><item><title>『HTML5/CSS3モダンコーディング フロントエンドエンジニアが教える3つの本格レイアウト スタンダード・グリッド・シングルページレイアウトの作り方』を読んで気になったことメモ</title><link>https://32imuf.com/html-css/html5-css3-modern-coding/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;読んだ本&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.shoeisha.co.jp/book/detail/9784798141572"&gt;HTML5/CSS3モダンコーディング フロントエンドエンジニアが教える3つの本格レイアウト スタンダード・グリッド・シングルページレイアウトの作り方&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;気になったことめも&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;要素名ではなくクラスに対してスタイルを指定する&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ID は HTML 、 JavaScript からの特定に使用し、 CSS セレクタでは使用しないというようにルールを作ると、影響範囲を分離できるので、管理がしやくすくなるメリットがある。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="reset-css"&gt;
&lt;h3&gt;reset.css を設けるメリット&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ブラウザごとに UA スタイルシートがあるため、適用される値のずれにより、同じ HTML でもブラウザ間で表示が異なってしまう。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;これから自分で書いていくスタイルと UA スタイルシートの間に食い違いがあると、 UA スタイルシートの不要なスタイルをわざわざ打ち消さなければならない。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;(reset.css を設けることで、) UA スタイルシートによる装飾をある程度まで打ち消し、ブラウザ間の差異をなくすことができる。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;ブロックレベル要素とインライン要素&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;HTML5 ではその分類は廃止された&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CSS の display プロパティの値が要素の種類ごとにそれぞれ定められていることは変わらない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;inline の要素に高さを持たせたいときは、 display プロパティに inline-block か block の指定が必要&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="web"&gt;
&lt;h3&gt;レスポンシブWebデザイン&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;どのデバイスでも同じ HTML を表示しつつ画面幅によって動的に CSS を切り替えて常に最適な表示が行われるようにする方法。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;スマートフォン対応の第一歩は、 viewport の設定です。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;お礼&lt;/h2&gt;
&lt;p&gt;言われた通りに書いていくと、ちゃんとなる賢い本でした（すごい！）。&lt;/p&gt;
&lt;p&gt;グリッドデザインが楽しすぎたので、ブログの一覧ページにしました。ありがとうございました。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>css</category><guid>https://32imuf.com/html-css/html5-css3-modern-coding/</guid><pubDate>Sat, 30 Jun 2018 15:00:00 GMT</pubDate></item></channel></rss>