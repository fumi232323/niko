<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて</title><link>https://32imuf.com/</link><description></description><atom:link href="https://32imuf.com/atom.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Mon, 10 Jun 2019 15:10:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Django: Test</title><link>https://32imuf.com/django/test/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/test/#requestfactory" id="id2"&gt;RequestFactory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="requestfactory"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/test/#id2"&gt;RequestFactory&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/testing/advanced/#django.test.RequestFactory"&gt;Django documentation &amp;gt; Advanced testing topics &amp;gt; RequestFactory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/test/</guid><pubDate>Mon, 20 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: Form</title><link>https://32imuf.com/django/form/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id2" id="id5"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id3" id="id6"&gt;こんなのある&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id4" id="id7"&gt;インラインフォームセット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id5"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;TBD&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id6"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id7"&gt;インラインフォームセット&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使い方はよくわかっていない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/1.11/topics/forms/modelforms/#inline-formsets"&gt;https://docs.djangoproject.com/ja/1.11/topics/forms/modelforms/#inline-formsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/1.11/ref/forms/models/#inlineformset-factory"&gt;https://docs.djangoproject.com/ja/1.11/ref/forms/models/#inlineformset-factory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/form/</guid><pubDate>Sat, 11 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: django-admin.py, manage.py</title><link>https://32imuf.com/django/manage/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id2" id="id10"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-manage-py" id="id11"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-py-django-admin" id="id12"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#manage-py" id="id13"&gt;manage.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id3" id="id14"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id4" id="id15"&gt;プロジェクト作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id5" id="id16"&gt;アプリケーション作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id6" id="id17"&gt;マイグレーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id7" id="id18"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#runserver" id="id19"&gt;runserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id8" id="id20"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id9" id="id21"&gt;使用例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-dbdb" id="id22"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#system-check-framework-django" id="id23"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#python2" id="id24"&gt;使用例 (python2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id10"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/"&gt;Django documentation &amp;gt; django-admin と manage.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-admin-manage-py"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id11"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;通常、単体の Django プロジェクトを用いる場合、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; よりも &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; の方が簡単に利用できる&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; django&lt;/tt&gt; はすべて同じことができる ( &lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; 後は)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="django-admin-py-django-admin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id12"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;インストールすると使えるようになる&lt;/li&gt;
&lt;li&gt;基本的にどこからでも利用できる&lt;/li&gt;
&lt;li&gt;Django を &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; ユーティリティを通じてインストールした場合は &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; スクリプトはシステムのパスが通っている場所に配置されます。もしパスが通った箇所に存在しなければ、Python インストール先の &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;site-packages/django/bin&lt;/span&gt;&lt;/tt&gt; 内で見つける事ができます。そのスクリプトに対して、 &lt;tt class="docutils literal"&gt;/usr/local/bin&lt;/tt&gt; 等のパスが通っている場所からシンボリックリンクを張ることを検討してください。&lt;/li&gt;
&lt;li&gt;新しく Django プロジェクトを作成するときに利用する&lt;/li&gt;
&lt;li&gt;Django プロジェクトを作成してしまったら &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; が使えるようになるので出番がなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="manage-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id13"&gt;manage.py&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; でプロジェクトを作成すると自動で作成される&lt;/li&gt;
&lt;li&gt;Django が提供する便利な管理コマンドが使えるほか...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id14"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id15"&gt;プロジェクト作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_4c26cede36d54066a8ce7d9614018a2b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_4c26cede36d54066a8ce7d9614018a2b-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_4c26cede36d54066a8ce7d9614018a2b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django-admin.py startproject &amp;lt;設定ディレクトリ名&amp;gt; &amp;lt;つくる場所&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_4c26cede36d54066a8ce7d9614018a2b-4"&gt;&lt;/a&gt;$ django-admin.py startproject config .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id16"&gt;アプリケーション作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_2826ac6aba274f0489d5a0405198c0d7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_2826ac6aba274f0489d5a0405198c0d7-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_2826ac6aba274f0489d5a0405198c0d7-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py startapp &amp;lt;アプリケーション名&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2826ac6aba274f0489d5a0405198c0d7-4"&gt;&lt;/a&gt;$ python manage.py startapp account
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;作成後、 settings.py &amp;gt; &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt; に手動でアプリケーションを追加する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id17"&gt;マイグレーション&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションファイルを作成する&lt;/span&gt;
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py makemigrations [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-3"&gt;&lt;/a&gt;$ python manage.py makemigrations account
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションを実行する&lt;/span&gt;
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py migrate [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_0a9b94a3376948c4809479208f9c6a88-7"&gt;&lt;/a&gt;$ python manage.py migrate account
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id18"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_acff5d52dd4a41f78e9490c1afa2b65a-1"&gt;&lt;/a&gt;$ python manage.py cratesuperuser
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="runserver"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id19"&gt;runserver&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_501c039de6b6427587cef41863a910c6-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 開発用の Web サーバーを起動する&lt;/span&gt;
&lt;a name="rest_code_501c039de6b6427587cef41863a910c6-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py runserver [&amp;lt;IPアドレス&amp;gt;:&amp;lt;ポート番号&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_501c039de6b6427587cef41863a910c6-3"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;IPアドレスとポート番号を省略すると &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; で起動する&lt;/li&gt;
&lt;li&gt;Docker 上で runserver =&amp;gt; ホストOSのブラウザから &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; に接続できないときは、 &lt;tt class="docutils literal"&gt;0.0.0.0:8000&lt;/tt&gt; で起動してみる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id20"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-2"&gt;&lt;/a&gt;$ python manage.py shell
&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-4"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings._ python manage.py shell
&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こう&lt;/span&gt;
&lt;a name="rest_code_8ef835ce9fc84421999bf6c219234a28-6"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;/pre&gt;&lt;div class="section" id="id9"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id21"&gt;使用例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-1"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;20120313&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"copyright"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"credits"&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"license"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InteractiveConsole&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myapp.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target_entry_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;target_entry_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__isnull&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_94b7ca0e18c841b3a1bdc5c52e77de89-12"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-dbdb"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id22"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_5ab04742368d4000bef3caedbd9b31fe-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="system-check-framework-django"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id23"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/#check"&gt;Django documentation &amp;gt; django-admin と manage.py &amp;gt; Available commands &amp;gt; check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/checks/#system-check-framework"&gt;Django documentation &amp;gt; System check framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="python2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id24"&gt;使用例 (python2)&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3ecb031e47c54465af3f3a4d133c890c-1"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings.local python -Wd manage.py check
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w"&gt;https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Python 2.7 から、 DeprecationWarning とその子クラスはデフォルトで無視されます。 -Wd オプションを指定して有効にすることができます。
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/manage/</guid><pubDate>Sun, 05 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: Template</title><link>https://32imuf.com/django/template/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id2" id="id22"&gt;リファレンス/書籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id4" id="id23"&gt;なるほどめも&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id5" id="id24"&gt;変数表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id6" id="id25"&gt;フィルタ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id7" id="id26"&gt;デフォルト表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id8" id="id27"&gt;文字列長を表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id9" id="id28"&gt;エスケープの無効化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id10" id="id29"&gt;日時フォーマット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id11" id="id30"&gt;改行タグの変換&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id12" id="id31"&gt;リンク変換&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id13" id="id32"&gt;文字の切り詰め&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id14" id="id33"&gt;テンプレートタグ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#if" id="id34"&gt;if&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#for" id="id35"&gt;for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id15" id="id36"&gt;テンプレートの継承&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id16" id="id37"&gt;外部テンプレートの読み込み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#url" id="id38"&gt;静的ファイルの配信 URL 取得&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id17" id="id39"&gt;url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id18" id="id40"&gt;自動エスケープ制御&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id19" id="id41"&gt;ベーステンプレートを用意しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id20" id="id42"&gt;独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id22"&gt;リファレンス/書籍&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/templates/"&gt;Django documentation &amp;gt; テンプレート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/templates/builtins/"&gt;Django documentation &amp;gt; 組み込みタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id23"&gt;なるほどめも&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;変数定義できない&lt;/li&gt;
&lt;li&gt;Python モジュールを直接 import して使うことはできない&lt;ul&gt;
&lt;li&gt;独自の関数を使うにはテンプレートタグやフィルタを自作する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;フィルター: 変数の内容を表示する際の表示形式を変更する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id24"&gt;変数表示&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# __str__() の結果を表示してくれる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-4"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# このように書くと #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;comment&lt;/span&gt; &lt;span class="s2"&gt;"以下の順番に値を取得しようとして、一番先に取得できた値を表示してくれる"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-7"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user['username']  # 1. 辞書としての照合&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-8"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user.username     # 2. 属性値の照合&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-9"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user.username()   # 3. メソッド呼び出し&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-10"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user[username]    # 4. リストやタプルの添字指定&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-11"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endcomment&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;テンプレートには「コンテキスト」と呼ばれる変数と値がマッピングされたオブジェクトが渡される&lt;ul&gt;
&lt;li&gt;コンテキストに含まれるもの&lt;ul&gt;
&lt;li&gt;ビューから渡された変数&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;TEMPLATES.OPTIONS.context_processors&lt;/tt&gt; に定義された関数でセットされた変数&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;request&lt;/tt&gt;: リクエストオブジェクト&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;user&lt;/tt&gt;: ユーザー&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;perms&lt;/tt&gt;: ユーザーのパーミッション&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;messages&lt;/tt&gt;: フラッシュメッセージ&lt;/li&gt;
&lt;li&gt;e.t.c...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;何もしなくも XSS 対策として &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;'&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;"&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;amp;&lt;/tt&gt; を自動でエスケープしてくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id25"&gt;フィルタ&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# 変数名の直後に ``|`` (パイプ) を使って繋げる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-4"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタによっては引数もとれる、 ``:`` で繋げる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-7"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタは ``|`` で連結できる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id26"&gt;デフォルト表示&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_43e7c5ddf62640ccace02c317a69db02-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.first_name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt;&lt;span class="s2"&gt;:""&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.first_name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt;&lt;span class="s2"&gt;:""&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;変数が存在しない場合、あるいは変数の値が &lt;tt class="docutils literal"&gt;None&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;''&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;0&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;False&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;[]&lt;/tt&gt; などの場合に指定した文字列を表示する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id27"&gt;文字列長を表示&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_25cb42ef481741c79ff74fc12ca0ff18-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id28"&gt;エスケープの無効化&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_91d0b9e118974d2091c662ee24a253e1-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;safe&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;XSS 対策として自動でエスケープしてくれる &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;'&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;"&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;amp;&lt;/tt&gt; をエスケープしない&lt;/li&gt;
&lt;li&gt;変数の内容が安全だとわかっている場合のみ利用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id29"&gt;日時フォーマット&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_0e717e621ce9449a8c4dc9260ef1e65a-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.last_login&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="s2"&gt;:"Y-m-d H:i:s"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id30"&gt;改行タグの変換&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_d5dc67d12a0c46e8a4d3737f72f68dcb-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;linebreaksbr&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\n&lt;/tt&gt; を &lt;tt class="docutils literal"&gt;&amp;lt;br&amp;gt;&lt;/tt&gt; に変換してくれる&lt;/li&gt;
&lt;li&gt;便利だな...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id31"&gt;リンク変換&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_36ee3e7dc7c7459c93b43062c94ac7bb-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;urlize&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;URL と メールアドレスの部分だけをアンカータグで囲んでクリック可能なリンクに変換してくれる&lt;/li&gt;
&lt;li&gt;しゅごいな...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id32"&gt;文字の切り詰め&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_56f058479baa4a87a5becd7ccad5364f-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;truncatechars_html&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;指定した文字数まで切り詰めて &lt;tt class="docutils literal"&gt;...&lt;/tt&gt; をくっつけてくれる&lt;/li&gt;
&lt;li&gt;HTML タグを考慮して省略後の文字にきちんと閉じタグをつけてくれる&lt;/li&gt;
&lt;li&gt;うええ...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id33"&gt;テンプレートタグ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="if"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id34"&gt;if&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.is_superuser&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  システム管理者です。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;user.is_staff&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-4"&gt;&lt;/a&gt;&lt;span class="x"&gt;  スタッフです。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-6"&gt;&lt;/a&gt;&lt;span class="x"&gt;  一般ユーザーだよ。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code django"&gt;&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタと組み合わせることもできる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-3"&gt;&lt;/a&gt;&lt;span class="x"&gt;  ユーザー名が短かすぎます。&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="for"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id35"&gt;for&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;book&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;book_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-4"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# for ループ内で使える変数 #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-5"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.counter&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;     &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ番号 ( 1 から順にカウント ) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-6"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.counter0&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ番号 ( 0 から順にカウント ) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-7"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.revcounter&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ値 ( 1 から順に、末尾からカウント) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-8"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.revcounter0&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ値 ( 0 から順に、末尾からカウント) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-9"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.first&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;       &lt;/span&gt;&lt;span class="c"&gt;{# 最初のループであれば True #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-10"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.last&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="c"&gt;{# 最後のループであれば True #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-11"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.parentloop&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# 入れ子のループであるとき、現在のループを囲んでいる 1 つ上のループを表します。 #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-13"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;empty&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-14"&gt;&lt;/a&gt;&lt;span class="x"&gt;  本ない&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-15"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id36"&gt;テンプレートの継承&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;親テンプレート &lt;tt class="docutils literal"&gt;parent.html&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_bdb0e588b24d45e3b67c6c46c69f52e0-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;sample&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;Hello &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;子テンプレート &lt;tt class="docutils literal"&gt;child.html&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;"parent.html"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;sample&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="nv"&gt;.super&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;World&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt; &lt;span class="o"&gt;{%&lt;/span&gt; &lt;span class="nv"&gt;endblock&lt;/span&gt; &lt;span class="o"&gt;%}&lt;/span&gt;
&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="nv"&gt;.super&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;親テンプレートのブロック内部の値をそのまま保持した変数&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id37"&gt;外部テンプレートの読み込み&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_7b35e834391f4749b1de9b925d08216e-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s2"&gt;"_message.html"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;ヘッダーフッターなど部品化したテンプレートを別のテンプレートから読み込む場合など&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="url"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id38"&gt;静的ファイルの配信 URL 取得&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# 利用する前に機能をロードしておく #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="s2"&gt;"images/logo.png"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="s2"&gt;"shop/images/no-image.png"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;静的ファイルの配信 URL を取得するためのタグ&lt;/li&gt;
&lt;li&gt;Django デフォルトで使える組み込みタグではないのでロードが必要&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;extends&lt;/tt&gt; している場合、継承元で &lt;tt class="docutils literal"&gt;load&lt;/tt&gt; していても自身のテンプレートでは有効にならないので、
つど &lt;tt class="docutils literal"&gt;load&lt;/tt&gt; する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id39"&gt;url&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# URL 逆引き #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"index"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"accounts:login"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"shop:detail"&lt;/span&gt; &lt;span class="nv"&gt;book.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"shop:detail"&lt;/span&gt; &lt;span class="nv"&gt;book_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;book.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id40"&gt;自動エスケープ制御&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;autoescape&lt;/span&gt; &lt;span class="nv"&gt;off&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  自動エスケープがオフになる範囲&lt;/span&gt;
&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endautoescape&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id19"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id41"&gt;ベーステンプレートを用意しよう&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;現場で使える Django の教科書《基礎編》 P.79 参照のこと&lt;ul&gt;
&lt;li&gt;どのテンプレートにも書くような共通の内容は base.html テンプレートする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id20"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id42"&gt;独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;カスタムタグやカスタムフィルタをつくることができる。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/howto/custom-template-tags/"&gt;Django documentation &amp;gt; 独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/template/</guid><pubDate>Sun, 05 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: Model, Django ORM</title><link>https://32imuf.com/django/model/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id2" id="id14"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#model" id="id15"&gt;Model&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id3" id="id16"&gt;リレーションまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id4" id="id17"&gt;Model の実装例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#on-delete" id="id18"&gt;on_delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#usermanager" id="id19"&gt;UserManager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#django-orm" id="id20"&gt;Django ORM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id5" id="id21"&gt;1件だけ取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id6" id="id22"&gt;全件取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id7" id="id23"&gt;検索条件をつけて取得する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#filter" id="id24"&gt;filter をつなげる例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#and" id="id25"&gt;AND 条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#or" id="id26"&gt;OR 条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id8" id="id27"&gt;&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#in" id="id28"&gt;IN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#like" id="id29"&gt;LIKE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#exists" id="id30"&gt;EXISTS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#order-by" id="id31"&gt;ORDER BY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#q-object" id="id32"&gt;Q Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id9" id="id33"&gt;リレーション先のモデルを使った条件検索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#set" id="id34"&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values-values-list" id="id35"&gt;values() と values_list()&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values" id="id36"&gt;values()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values-list" id="id37"&gt;values_list()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#aggregate-annotate" id="id38"&gt;aggregate と annotate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#left-outer-join" id="id39"&gt;LEFT OUTER JOIN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#select-related-prefetch-related" id="id40"&gt;select_related, prefetch_related&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id11" id="id41"&gt;遅延評価&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id12" id="id42"&gt;トランザクション&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#user" id="id43"&gt;User モデルを拡張したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id13" id="id44"&gt;発行されるクエリを見たい&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id14"&gt;リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/fields/"&gt;Django documentation &amp;gt; モデルフィールドリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/querysets/"&gt;Django documentation &amp;gt; QuerySet API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id15"&gt;Model&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;複合キーは主キーにできない&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id16"&gt;リレーションまとめ&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-auto docutils"&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head stub"&gt;リレーション&lt;/th&gt;
&lt;th class="head"&gt;使うフィールド&lt;/th&gt;
&lt;th class="head"&gt;使い方&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="stub"&gt;一対一&lt;/th&gt;
&lt;td&gt;OneToOneField&lt;/td&gt;
&lt;td&gt;どちらか一方のモデルに OneToOneField をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;多対一&lt;/th&gt;
&lt;td&gt;ForeignKey&lt;/td&gt;
&lt;td&gt;多側に ForeignKey をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;多対多&lt;/th&gt;
&lt;td&gt;ManyToManyField&lt;/td&gt;
&lt;td&gt;どちらか一方のモデルに ManyToManyField をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id17"&gt;Model の実装例&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""出版社モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'publisher'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版社名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-12"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-15"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-16"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""著者モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-18"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'著者名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-22"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-23"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-26"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-27"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""本モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-28"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-29"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-30"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        対応するテーブルや、複数カラムに対するインデックスやユニーク制約などの&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-31"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        モデル全体に対する付加情報を記述する&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-32"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        """&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-33"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テーブル名を定義&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-34"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 定義しないと、 `アプリケーション名_モデルのクラス名をスネークケースにした文字列` がテーブル名になる&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-35"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'book'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-36"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-38"&gt;&lt;/a&gt;        &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'タイトル'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# フィールド名&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-39"&gt;&lt;/a&gt;        &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# 文字列の最大文字数&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-40"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# choices: フォーム利用時にセレクトボックスに表示する選択肢&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-41"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# validators: 文字種チェックなどのバリデーションを指定&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-42"&gt;&lt;/a&gt;        &lt;span class="n"&gt;error_messages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'invalid'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'title ちがうよー'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;# バリデーションNGの場合のエラーメッセージ&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-43"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-44"&gt;&lt;/a&gt;    &lt;span class="n"&gt;publisher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-45"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 多対一のリレーション: 多側に ForeignKey をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-46"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版社'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-47"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ForeignKey と OneToOneField には on_delete をつける癖をつけよう&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-48"&gt;&lt;/a&gt;        &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROTECT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# 自身のレコードは削除されない&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-49"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-50"&gt;&lt;/a&gt;    &lt;span class="n"&gt;authors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-51"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 多対多のリレーション: 一方のモデルに ManyToManyField をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-52"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * マイグレーション実行すると Django が自動的に中間テーブルを作成してくれる&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-53"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'著者'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-54"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-55"&gt;&lt;/a&gt;    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-56"&gt;&lt;/a&gt;        &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'価格'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-57"&gt;&lt;/a&gt;        &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="c1"&gt;# NULL制約&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-58"&gt;&lt;/a&gt;        &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;# ユニーク制約&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-59"&gt;&lt;/a&gt;        &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;# フォーム利用時に入力必須にするかどうか&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-60"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# DB のインデックスを設定するかどうか&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-61"&gt;&lt;/a&gt;        &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="c1"&gt;# レコード登録時に値が指定されなかったときのデフォルト値&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-62"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'概要'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-64"&gt;&lt;/a&gt;    &lt;span class="n"&gt;publisher_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版日'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-65"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-66"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-67"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 管理サイトに表示されるよ&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-68"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-69"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-70"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-71"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-72"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""本の在庫モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-73"&gt;&lt;/a&gt;    &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OneToOneField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-74"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 一対一のリレーション: どちらか一方のテーブルに OneToOneField をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-75"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'本'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-76"&gt;&lt;/a&gt;        &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CASCADE&lt;/span&gt;  &lt;span class="c1"&gt;# 自身のレコードも削除される&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-77"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-78"&gt;&lt;/a&gt;    &lt;span class="n"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'在庫数'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="on-delete"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id18"&gt;on_delete&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/fields/#django.db.models.ForeignKey.on_delete"&gt;ForeignKey.on_delete&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;6種類くらいあって、用途に応じて選べる&lt;/li&gt;
&lt;li&gt;Django 2.0 から、必須の引数となる&lt;/li&gt;
&lt;li&gt;それ以前のバージョンでは、デフォルトで &lt;tt class="docutils literal"&gt;CASCADE&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usermanager"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id19"&gt;UserManager&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/contrib/auth/#manager-methods"&gt;Django documentation &amp;gt; django.contrib.auth &amp;gt; マネージャメソッド&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/auth/customizing/#a-full-example"&gt;Django documentation &amp;gt; Django の認証方法のカスタマイズ &amp;gt; 完全な具体例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/django/django/blob/master/django/contrib/auth/models.py#L131"&gt;https://github.com/django/django/blob/master/django/contrib/auth/models.py#L131&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;こうすると登録できる&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9a92d65f52b84a99b470b0b5df7d1db3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyUserManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;TODO: これは Model のところじゃなくて、認証のところかもしれない。いったんここに置いておく。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-orm"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id20"&gt;Django ORM&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;単体のオブジェクトを保存・更新するような行レベルのクエリ操作: モデルオブジェクトのメソッドを利用する&lt;/li&gt;
&lt;li&gt;データベースのテーブルレベルのクエリ操作: モデルの「モデルマネージャー」 ( &lt;tt class="docutils literal"&gt;objects&lt;/tt&gt; ) を経由してクエリセットAPI のメソッドを利用する&lt;ul&gt;
&lt;li&gt;モデルマネージャーは通常、モデルクラスに &lt;tt class="docutils literal"&gt;objects&lt;/tt&gt; という名前で保存されている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id21"&gt;1件だけ取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7d60fe2674c440f1bc66e90c55fa2321-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# この `objects` がモデルマネージャー&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;モデルが返る&lt;/li&gt;
&lt;li&gt;1件も見つからないと &lt;tt class="docutils literal"&gt;DoesNotExist&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;2件以上見つかると &lt;tt class="docutils literal"&gt;MultipleObjectsReturn&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id22"&gt;全件取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_043ed9623ca74854b5fe3166daf206f1-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;即座にデータベースにはアクセスせず、クエリセットオブジェクトを返す&lt;/li&gt;
&lt;li&gt;しかるべきタイミングでデータベースアクセスする = 遅延評価&lt;/li&gt;
&lt;li&gt;1件も見つからなくても例外発生しない、空のリストを返す&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id23"&gt;検索条件をつけて取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_34267efbacba4787b0de7c7ddf6dee42-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;即座にデータベースにはアクセスせず、クエリセットオブジェクトを返す&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt; を何度も繋げて書ける&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="filter"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id24"&gt;filter をつなげる例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'keyword'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ここでクエリが発行される (print すると発行される)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;この例の場合、発行されるクエリの総数は1本&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="and"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id25"&gt;AND 条件&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5d64d4ab53b54b9d9b616886f2369b2a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django Book'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;検索条件を列挙すれば AND 条件&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="or"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id26"&gt;OR 条件&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_4cbd2d18519948aabf856707ed0e25ea-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_4cbd2d18519948aabf856707ed0e25ea-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django Book'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Q&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;|&lt;/tt&gt; (パイプ) を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id27"&gt;&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;gt;1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__lt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;gt;=1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__lte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;=1000&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;gt&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lt&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;gte&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lte&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="in"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id28"&gt;IN&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6930d2c1b0034f359f1e233f07a78d47-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# IN(900, 1000)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;in&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;li&gt;IN 句の中身はリストで書く&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="like"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id29"&gt;LIKE&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f784625f330049eda9e05e5b2630a8f5-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# ILIKE '%Django%'&lt;/span&gt;
&lt;a name="rest_code_f784625f330049eda9e05e5b2630a8f5-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__contains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# LIKE '%Django%'&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;icontains&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;contains&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;li&gt;大文字と小文字を区別しない: &lt;tt class="docutils literal"&gt;icontains&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;大文字と小文字を区別する: &lt;tt class="docutils literal"&gt;contains&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="exists"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id30"&gt;EXISTS&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;exists: レコードが存在するか否か True/False で返す&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7760e8112b6644a59c7d1e11faba628f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7760e8112b6644a59c7d1e11faba628f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="order-by"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id31"&gt;ORDER BY&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;order_by:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 降順はフィールド名の前に ``-`` つける&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 複数フィールドでソートするときはカンマ区切り&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'publish_date'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="q-object"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id32"&gt;Q Object&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/db/queries/#complex-lookups-with-q"&gt;Q オブジェクトを用いた複雑な検索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id33"&gt;リレーション先のモデルを使った条件検索&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a5b7425693ac4f9e98e66e2934da2cea-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;publisher__name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'自費出版社'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;OneToOneField&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ForeignKey&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ManyToManyField&lt;/tt&gt; でリレーションしていると、
&lt;tt class="docutils literal"&gt;リレーションつけたフィールド名__リレーション先モデルのフィールド名&lt;/tt&gt; で JOIN できる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="set"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id34"&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/1.11/ref/models/relations/"&gt;Related objects reference&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; というのは子テーブルのデータを参照する django の機能&lt;/li&gt;
&lt;li&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="values-values-list"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id35"&gt;values() と values_list()&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="values"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id36"&gt;values()&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;辞書のクエリセットで取得できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values"&gt;https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_77f3e76f91a04211be4ac8e7f17d43b9-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__startswith&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Beatles'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_77f3e76f91a04211be4ac8e7f17d43b9-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Beatles Blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tagline'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'All the latest Beatles news.'&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="values-list"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id37"&gt;values_list()&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;タプルのリストのクエリセットで取得できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values-list"&gt;https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values-list&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d472a69691854066b8a92cff69c656d0-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'headline'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d472a69691854066b8a92cff69c656d0-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'First entry'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;1カラムしか取得しない場合は、 &lt;tt class="docutils literal"&gt;flat=True&lt;/tt&gt; をつけると、リストのクエリセットで取得できる。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f1e9f9c8fb50453f9ac40139496de0ac-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f1e9f9c8fb50453f9ac40139496de0ac-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="aggregate-annotate"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id38"&gt;aggregate と annotate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;aggregate&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;annotate&lt;/tt&gt; の違いがわかりやすい&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2014/django-aggregate/"&gt;Djangoの集計について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="left-outer-join"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id39"&gt;LEFT OUTER JOIN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Django のクエリセットは LEFT OUTER JOIN を表現できない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SQLAlchemy でやろう&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="select-related-prefetch-related"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id40"&gt;select_related, prefetch_related&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="50%"&gt;
&lt;col width="50%"&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;select_related&lt;/th&gt;
&lt;th class="head"&gt;prefetch_related&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;一&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; 側から &lt;tt class="docutils literal"&gt;一&lt;/tt&gt; のリレーションのモデルオブジェクトをJOINで取得&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;一&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; 側から &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; のリレーションのモデルオブジェクトを取得してキャッシュに保持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;リレーション先のオブジェクトを取得するために JOIN を使ったクエリを発行できる&lt;/td&gt;
&lt;td&gt;取得したオブジェクト群をオブジェクト内部のキャッシュに保持し、それを使い回すことで同じクエリが何度も発行されないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_a33425a96fe54426b10da16493072376-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_related&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'publisher'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;&lt;div class="first last"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_bbb0a5a77859471d819b372095dbdfa5-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prefetch_related&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'authors'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;クエリの本数を減らそう!&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;N+1問題&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;特にリレーションを持ったモデルの検索結果 (クエリセットオブジェクト) をループ処理する場合に起こりがち&lt;/li&gt;
&lt;li&gt;後続の処理で何度もアクセスされそうなオブジェクトに対して前もって処理を施しておくことでクエリの本数を減らそう&lt;/li&gt;
&lt;li&gt;その他参考: &lt;a class="reference external" href="http://tokibito.hatenablog.com/entry/20140718/1405691738"&gt;偏った言語信者の垂れ流し &amp;gt; Djangoでprefetch_relatedを使ってクエリ数を減らす&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id41"&gt;遅延評価&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;クエリセットを返す &lt;tt class="docutils literal"&gt;all()&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt; がクエリを発行するタイミング (データベースアクセスするタイミング) はこれら&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;for&lt;/tt&gt; ループなどイテレーションが開始されたタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;[]&lt;/tt&gt; を使ってスライスしたタイミング&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;[0:5]&lt;/tt&gt; のように範囲指定するとクエリは即時発行されない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;オブジェクトを直列化したタイミング&lt;/li&gt;
&lt;li&gt;オブジェクトを &lt;tt class="docutils literal"&gt;REPL&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; で表示したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; でサイズを取得したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;list()&lt;/tt&gt; で強制的にリストに変換したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;bool()&lt;/tt&gt; で強制的に &lt;tt class="docutils literal"&gt;Boolean&lt;/tt&gt; に変換したタイミング&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id42"&gt;トランザクション&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;デフォルト設定では、オブジェクトの保存・更新・削除は即時反映 (実行した時点でデータベースに反映される)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;トランザクションの範囲指定する場合は、&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atomic&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;トランザクションのデフォルト設定を変更できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;settings.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-2"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-3"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リクエストの開始から終了までに設定&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-4"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'ATOMIC_REQUESTS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-5"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="user"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id43"&gt;User モデルを拡張したい&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;現場で使える Django の教科書《基礎編》 P.63 参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id44"&gt;発行されるクエリを見たい&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Django シェル&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_e17e5dd86a804d4d8ee2c79ea7227348-1"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;a name="rest_code_e17e5dd86a804d4d8ee2c79ea7227348-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;Book.objects.filter&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.query&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;ロギング&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;django-debug-toolbar&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/model/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: URL ディスパッチャ, URLconf</title><link>https://32imuf.com/django/urlconf/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#id2" id="id4"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#url" id="id5"&gt;URL ディスパッチャ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#urlconf" id="id6"&gt;URLconf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#id3" id="id7"&gt;書き方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id4"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/http/urls/"&gt;Django documentation &amp;gt; URL ディスパッチャ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="url"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id5"&gt;URL ディスパッチャ&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;例外のハンドリングもしてくれる&lt;ul&gt;
&lt;li&gt;マッチするURLが見つからなかった場合は &lt;tt class="docutils literal"&gt;handler404&lt;/tt&gt; -&amp;gt; &lt;tt class="docutils literal"&gt;404.html&lt;/tt&gt; を返してくれたりする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="urlconf"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id6"&gt;URLconf&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;urlpatterns&lt;/tt&gt; にリストで書く&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id7"&gt;書き方&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;config/urls.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Django2.0 から path になった&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 後ろには / つける、前にはつけないのが慣習&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# アプリケーションディレクトリごとに１つずつ urls.py を配置するのがベストプラクティス&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'accounts/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'accounts.urls'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;  &lt;span class="c1"&gt;# /accounts/ で始まるURLパターンは accounts.urls 見てね&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop.urls'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;          &lt;span class="c1"&gt;# /shop/ で始まるURLパターンは shop.urls 見てね&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# GenericView: 短いので、URLconf に直接書くこともある&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'^$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# TemplateView&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'^$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RedirectView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# RedirectView&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;shop/urls.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# app_name:&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-2"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# * 必ず設定する、アプリケーション名と同じにする&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# * reverse メソッドや url タグから `名前空間名.名前空間内の name&amp;gt;` で逆引きできるようにするため&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'shop'&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-7"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# パスコンバーター:&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-8"&gt;&lt;/a&gt;      &lt;span class="c1"&gt;# * ビュー関数を呼び出すときのキーワード引数として使われる&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-9"&gt;&lt;/a&gt;      &lt;span class="c1"&gt;# * int, str, path, slug, uuid の 5種類がある、自作も可&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;int:book_id&amp;gt;/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/urlconf/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: View</title><link>https://32imuf.com/django/view/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id2" id="id7"&gt;リファレンス/書籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id4" id="id8"&gt;関数ベースのビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#class-based-views" id="id9"&gt;クラスベースのビュー (Class-based views)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#as-view" id="id10"&gt;as_view&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#base-views" id="id11"&gt;Base views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#view" id="id12"&gt;View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#templateview" id="id13"&gt;TemplateView&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#get-context-data" id="id14"&gt;get_context_data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#redirectview" id="id15"&gt;RedirectView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#generic-views" id="id16"&gt;いろいろな Generic views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#listview" id="id17"&gt;ListView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#formview" id="id18"&gt;FormView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id5" id="id19"&gt;ログイン・ログアウト&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#loginview-logoutview" id="id20"&gt;LoginView, LogoutView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#loginrequiredmixin" id="id21"&gt;LoginRequiredMixin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id7"&gt;リファレンス/書籍&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/class-based-views/"&gt;Django documentation &amp;gt; クラスベースビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/class-based-views/"&gt;Django documentation &amp;gt; ビルトインのクラスベースビュー API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2015/django-genericview/"&gt;くろのて &amp;gt; [Django]ジェネリックビューってなんなんだよ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;crohaco さん、 shimizukawa さん、 tell-k さん&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id8"&gt;関数ベースのビュー&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;第一引数に django.http.request.HttpRequest を受け取る&lt;/li&gt;
&lt;li&gt;戻り値に django.http.response.HttpResponse を返す&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;HelloView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""関数ベースのビュー"""&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-8"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# render:&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-11"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * HttpResponse を作ってくれる&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * テンプレートをレンダリングするとき使う&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="class-based-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id9"&gt;クラスベースのビュー (Class-based views)&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;関数形式の view はコンテキスト、テンプレート、フォーム、全部変えしてあげないといけなかった。つまり全部関数内に書く必要があった。
必要なものを切り離して属性として定義できるようにしたのが genericview (class based view)。&lt;/li&gt;
&lt;li&gt;akiyoko さんは断然、クラスベースビューをお勧めするとのこと&lt;ul&gt;
&lt;li&gt;汎用ビュー (Generic View) としてさまざまな用途のクラスが提供されているのでその恩恵を受けられる&lt;/li&gt;
&lt;li&gt;すべての基本となる基本汎用ビュー &lt;tt class="docutils literal"&gt;django.views.generic.base.View&lt;/tt&gt; を利用すれば見通しのよいビューが書けるし、応用も効く&lt;/li&gt;
&lt;li&gt;汎用ビューのほかにも便利な Mixin クラスを多重継承してお決まりの処理を再利用できる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# from django.views.generic import View と同義↑&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-7"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""クラスベースのビュー"""&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-11"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-12"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HelloView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;auth_login&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-9"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""GET リクエスト"""&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-12"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-13"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ログイン画面用のテンプレートに値が空のフォームをレンダリング&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-14"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# render: テンプレートをレンダリングするとき使う&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-15"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-18"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""POST リクエスト"""&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リクエストからフォームを作成&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーション (ユーザーの認証も併せて実施)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-23"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# バリデーション NG の場合はログイン画面のテンプレートを再表示&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-24"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-26"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# User オブジェクトをフォームから取得&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-27"&gt;&lt;/a&gt;        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-29"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ログイン処理 (取得した User オブジェクトをセッションに保存 &amp;amp; User データを更新)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-30"&gt;&lt;/a&gt;        &lt;span class="n"&gt;auth_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-32"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ショップ画面にリダイレクト&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-33"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# redirect: リダイレクトするとき使う&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-34"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * リダイレクト先のURLは reverse を使って取得する&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-35"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * ハードコーディングするなかれ&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-36"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop:index'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="as-view"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id10"&gt;as_view&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/django/django/blob/master/django/views/generic/base.py#L49"&gt;https://github.com/django/django/blob/master/django/views/generic/base.py#L49&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;クラスベースのビューをビュー関数化してくれるメソッド&lt;ul&gt;
&lt;li&gt;as_view は view 関数を生成して返している&lt;/li&gt;
&lt;li&gt;これをしておくと、URL ディスパッチャだけでなく他のビューからも呼び出せるようになる&lt;/li&gt;
&lt;li&gt;実際の処理は self.dispatch で クラスベースビューに処理を委譲してるんだと思います&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;urls.py で as_view せずに、 views.py で as_view した Class-based view をグローバル変数に代入するとうれしいタイミング&lt;ul&gt;
&lt;li&gt;同じ view を複数の url に設定したい&lt;ul&gt;
&lt;li&gt;モジュールの import が1回しか発生しないのはモジュール毎の話じゃなくプロセス全体 ( Django で言うと &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;runserver...&lt;/span&gt;&lt;/tt&gt; した単位) の話&lt;/li&gt;
&lt;li&gt;url ごとに同じ View を何回も生成するんだったら、同じでよい (シングルトン)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="base-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id11"&gt;Base views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="view"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id12"&gt;View&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;django.views.generic.base.View&lt;/li&gt;
&lt;li&gt;すべての元となるクラスベースビューです。他の全てのクラスベースビューは、この基本クラスを継承しています。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="templateview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id13"&gt;TemplateView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;テンプレートを表示することに特化した Generic View&lt;/li&gt;
&lt;li&gt;トップ画面やヘルプ画面などの単純なテンプレートを表示するのによく使う&lt;/li&gt;
&lt;li&gt;オーバーライドできる変数やメソッドがいくつか用意されていて、デフォルトの挙動をある程度自由に変更できる&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'index.html'&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_context_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# get_context_data をオーバーライドした例&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプレートに渡すコンテキストに任意の変数を追加できる&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_context_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプレートに渡すコンテキストに `user_count` という変数を追加&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'user_count'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="get-context-data"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id14"&gt;get_context_data&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;大抵の場合、ビューというのはレンダリングに必要なコンテキストを組み立てるものなので 大体の処理は &lt;tt class="docutils literal"&gt;get_context_data&lt;/tt&gt; というメソッドに書く。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="redirectview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id15"&gt;RedirectView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;リダイレクトに特化した Generic View&lt;/li&gt;
&lt;li&gt;任意の URL にリダイレクトすることに特化したやつ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RedirectView&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RedirectView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/accounts/login/'&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# pattern_name = 'accounts:login'  # パターンで URL を指定する場合&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リダイレクトする URL を動的に組み立てるためのやつをオーバーライドできる&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-10"&gt;&lt;/a&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="generic-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id16"&gt;いろいろな Generic views&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;これが便利とのこと: &lt;a class="reference external" href="https://ccbv.co.uk/"&gt;https://ccbv.co.uk/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="listview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id17"&gt;ListView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;モデルオブジェクトの一覧を表示するための View&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookListView1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# リストしたいモデルを指定する&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-7"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# これだけで、 `shop/book_list.html` という名前のテンプレートに、&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-8"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# object_list (or book_list) という変数名で、&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Book モデルの全てのレコードの一覧を渡してくれる&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ほかにもいろいろある...&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 利用するテンプレートを指定する&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'husky.html'&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# オブジェクトの一覧を取得するためのクエリセットを指定する&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="formview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id18"&gt;FormView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;何らかの登録・更新処理で &lt;tt class="docutils literal"&gt;form&lt;/tt&gt; を使ったバリデーションが必要なら 大体 &lt;tt class="docutils literal"&gt;FormView&lt;/tt&gt; を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id19"&gt;ログイン・ログアウト&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt; P.43 によく書いてあるのでそちらを参照のこと&lt;ul&gt;
&lt;li&gt;request.user:&lt;ul&gt;
&lt;li&gt;ログイン済: User オブジェクト&lt;/li&gt;
&lt;li&gt;未ログイン: AnonymousUser オブジェクト&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ログイン済みか否か: request.user.is_authenticated&lt;/li&gt;
&lt;li&gt;ログアウトすると、&lt;ul&gt;
&lt;li&gt;サーバーのセッションクリア&lt;/li&gt;
&lt;li&gt;request.user に AnonymousUser をセット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="loginview-logoutview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id20"&gt;LoginView, LogoutView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ログインに特化した View: django.contrib.auth.views.LoginView&lt;/li&gt;
&lt;li&gt;ログアウトに特化した View: django.contrib.auth.views.LogoutView&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LoginView&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;AuthLoginView&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AuthLoginView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    ログインビューの実装例&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    * 設定値の調整が必要になることもあるよ&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-10"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGIN_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-11"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGIN_REDIRECT_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-12"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGOUT_REDIRECT_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-13"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    """&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="loginrequiredmixin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id21"&gt;LoginRequiredMixin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;LoginRequiredMixin: 未ログインのユーザーがアクセスしようとしたときに何らかのペナルティを課すための Mixin&lt;ul&gt;
&lt;li&gt;Django1.9 から導入された&lt;/li&gt;
&lt;li&gt;継承すると、未ログインユーザーがアクセスしたらば LOGIN_URL で定義した URL にリダイレクトしてくれるよ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.mixins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LoginRequiredMixin&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookListView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LoginRequiredMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 403 エラー画面を表示する場合は次のコメントアウトを外す&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-10"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# raise_exception = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/view/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item><item><title>Docker Compose で Django/PostgreSQL/MySQL 環境をつくろう</title><link>https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id2" id="id11"&gt;リファレンス・参考サイト書籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id3" id="id12"&gt;つくりかた&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id4" id="id13"&gt;構成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id5" id="id14"&gt;設定ファイル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id6" id="id15"&gt;起動&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id7" id="id16"&gt;つかいかた&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#app" id="id17"&gt;app コンテナ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#mysql-postgresql" id="id18"&gt;MySQL, PostgreSQL コンテナ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id8" id="id19"&gt;感想&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id9" id="id20"&gt;その他&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id10" id="id21"&gt;Python 公式イメージのルーツ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#docker-hub" id="id22"&gt;Docker Hub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id11"&gt;リファレンス・参考サイト書籍&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ありがとうございました&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Python プロフェッショナルプログラミング第３版 &amp;gt; 01-01 Python のセットアップ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://hub.docker.com/_/ubuntu"&gt;ubuntu Docker Official Images&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;en_US.utf8&lt;/tt&gt; を &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; するくだりを参考にした&lt;ul&gt;
&lt;li&gt;Ubuntu イメージにはデフォルトで &lt;tt class="docutils literal"&gt;C&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;C.UTF-8&lt;/span&gt;&lt;/tt&gt;, and &lt;tt class="docutils literal"&gt;POSIX&lt;/tt&gt; locales が含まれている、これで UTF-8 locale を使うほとんどのひとには十分なはずだけれども、&lt;/li&gt;
&lt;li&gt;足りない場合は、&lt;tt class="docutils literal"&gt;locales&lt;/tt&gt; package からインストールしてね&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.docker.com/develop/develop-images/dockerfile_best-practices/"&gt;Best practices for writing Dockerfiles&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;RUN&lt;/tt&gt; で &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; するときはこうすると良さそう&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; upgrade&lt;/tt&gt; , &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;dist-upgrade&lt;/span&gt;&lt;/tt&gt; するのは避けよう&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt; update &amp;amp;&amp;amp; &lt;span class="pre"&gt;apt-get&lt;/span&gt; install &lt;span class="pre"&gt;-y&lt;/span&gt;&lt;/tt&gt; はセットでやろう&lt;ul&gt;
&lt;li&gt;こうすると、 latest package versions が install できる&lt;/li&gt;
&lt;li&gt;このテクニックは、 &lt;tt class="docutils literal"&gt;cache busting&lt;/tt&gt; として知られているらしい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;packages はアルファベット順に並べる&lt;ul&gt;
&lt;li&gt;重複に気づけるし、後から足したり減らしたりするのが容易になるから&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;最後に &lt;tt class="docutils literal"&gt;rm &lt;span class="pre"&gt;-rf&lt;/span&gt; /var/lib/apt/lists/*&lt;/tt&gt; して apt キャッシュを clean up すると、 image size を減らせる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;良い見本&lt;/p&gt;
&lt;pre class="code docker"&gt;&lt;a name="rest_code_590568c537c8423da668051bde0aad83-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-2"&gt;&lt;/a&gt;    aufs-tools &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-3"&gt;&lt;/a&gt;    automake &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-4"&gt;&lt;/a&gt;    build-essential &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-5"&gt;&lt;/a&gt;    curl &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-6"&gt;&lt;/a&gt;    dpkg-sig &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-7"&gt;&lt;/a&gt;    libcap-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-8"&gt;&lt;/a&gt;    libsqlite3-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-9"&gt;&lt;/a&gt;    mercurial &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-10"&gt;&lt;/a&gt;    reprepro &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-11"&gt;&lt;/a&gt;    ruby1.9.1 &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-12"&gt;&lt;/a&gt;    ruby1.9.1-dev &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-13"&gt;&lt;/a&gt;    &lt;span class="nv"&gt;s3cmd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.1.* &lt;span class="se"&gt;\&lt;/span&gt;
&lt;a name="rest_code_590568c537c8423da668051bde0aad83-14"&gt;&lt;/a&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.docker.com/develop/dev-best-practices/"&gt;Docker development best practices&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;RUN&lt;/tt&gt; で &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;apt-get&lt;/span&gt;&lt;/tt&gt; するときはこうすると良さそう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;2行で書くより、1行で書く&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;1行で書くと、イメージを小さくできる ( &lt;tt class="docutils literal"&gt;layers&lt;/tt&gt; がなんのことなのかはよくわからない)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;cite&gt;The first creates two layers in the image, while the second only creates one.&lt;/cite&gt;&lt;/p&gt;
&lt;pre class="code docker"&gt;&lt;a name="rest_code_ad5aa4be14b3457c9f0a6f9ae93aecfd-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get -y update
&lt;a name="rest_code_ad5aa4be14b3457c9f0a6f9ae93aecfd-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get install -y python
&lt;/pre&gt;&lt;pre class="code docker"&gt;&lt;a name="rest_code_539ce1ec02a1469bbb5e3a41ef8cfe77-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get -y update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y python
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/righ/djample/"&gt;くろのて勉強会 &amp;gt; DRF勉強会 (全6回) &amp;gt; djample&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;現場で使える Django の教科書 &amp;gt; D: Docker でラクラク開発&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://qiita.com/yagince/items/deba267f789604643bab"&gt;Docker Ubuntu18.04でtzdataをinstallするときにtimezoneの選択をしないでinstallする&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;途中で何も尋ねてほしくないときは、 &lt;tt class="docutils literal"&gt;ENV DEBIAN_FRONTEND=noninteractive&lt;/tt&gt; すると良さそう&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/27022373/python3-importerror-no-module-named-ctypes-when-using-value-from-module-mul/48045929"&gt;ModuleNotFoundError: No module named '_ctypes' の解決方法&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;事前に &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;libffi-dev&lt;/span&gt;&lt;/tt&gt; パッケージのインストールが必要&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://www.t3a.jp/blog/infrastructure/set-timezone/"&gt;[Linux]タイムゾーン(Timezone)をUTCから日本標準時(JST)に変更する&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;シンボリックリンクを張り替える&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;ln &lt;span class="pre"&gt;-sf&lt;/span&gt; /usr/share/zoneinfo/Asia/Tokyo /etc/localtime&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/using/unix.html#building-python"&gt;2.2. Python のビルド&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;make install&lt;/tt&gt; の代わりに &lt;tt class="docutils literal"&gt;make altinstall&lt;/tt&gt; 推奨&lt;/li&gt;
&lt;li&gt;&lt;cite&gt;警告 make install は python3 バイナリを上書きまたはリンクを破壊してしまうかもしれません。そのため、make install の代わりに exec_prefix/bin/pythonversion のみインストールする make altinstall が推奨されています。&lt;/cite&gt; だそうです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id12"&gt;つくりかた&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;実際には、 PostgreSQL か MySQL かどちらか使うほうのみを生きとする。&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id13"&gt;構成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-1"&gt;&lt;/a&gt;$ tree fufufu
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-2"&gt;&lt;/a&gt;fufufu
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-3"&gt;&lt;/a&gt;├── Dockerfile-app        &lt;span class="c1"&gt;# 1. Django プロジェクト作るよう Dockerfile&lt;/span&gt;
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-4"&gt;&lt;/a&gt;├── Dockerfile-mysql      &lt;span class="c1"&gt;# 2. MySQL よう Dockerfile&lt;/span&gt;
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-5"&gt;&lt;/a&gt;├── Dockerfile-postgres   &lt;span class="c1"&gt;# 3. PostgreSQL よう Dockerfile&lt;/span&gt;
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-6"&gt;&lt;/a&gt;├── docker-compose.yml    &lt;span class="c1"&gt;# 4. Composeファイル&lt;/span&gt;
&lt;a name="rest_code_cc27236ddc0842729704af81841c3d64-7"&gt;&lt;/a&gt;└── requirements.txt      &lt;span class="c1"&gt;# 5. requirements.txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id14"&gt;設定ファイル&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Dockerfile-app&lt;/span&gt;&lt;/tt&gt; : Django プロジェクトを入れるコンテナ&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="code-block "&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; ubuntu:18.04&lt;/span&gt;

&lt;span class="c"&gt;# インストール中に何も尋ねてくるな&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt; &lt;span class="nv"&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;noninteractive

&lt;span class="c"&gt;# Python の環境変数を設定&lt;/span&gt;
&lt;span class="c"&gt;# stdout, stderr のバッファを無効に&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt; PYTHONUNBUFFERED &lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="c"&gt;# ソースモジュールのインポート時に .pyc ファイルを作成しない&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt; PYTHONDONTWRITEBYTECODE &lt;span class="m"&gt;1&lt;/span&gt;

&lt;span class="c"&gt;# locales をインストールして設定する&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get clean &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y locales &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/* &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
&lt;span class="k"&gt;ENV&lt;/span&gt; LANG en_US.UTF-8
&lt;span class="k"&gt;ENV&lt;/span&gt; LANGUAGE en_US:en
&lt;span class="k"&gt;ENV&lt;/span&gt; LC_ALL en_US.UTF-8

&lt;span class="c"&gt;# タイムゾーンに JST を設定&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime

&lt;span class="c"&gt;# Python ビルドに必要な deb パッケージのインストール&lt;/span&gt;
&lt;span class="c"&gt;# `libffi-dev`: 3.6 では不要 (?) 、3.7 では必要&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get clean &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y &lt;span class="se"&gt;\&lt;/span&gt;
    build-essential &lt;span class="se"&gt;\&lt;/span&gt;
    python3-dev &lt;span class="se"&gt;\&lt;/span&gt;
    libsqlite3-dev &lt;span class="se"&gt;\&lt;/span&gt;
    libreadline6-dev &lt;span class="se"&gt;\&lt;/span&gt;
    libgdbm-dev &lt;span class="se"&gt;\&lt;/span&gt;
    zlib1g-dev &lt;span class="se"&gt;\&lt;/span&gt;
    libbz2-dev &lt;span class="se"&gt;\&lt;/span&gt;
    sqlite3 &lt;span class="se"&gt;\&lt;/span&gt;
    tk-dev &lt;span class="se"&gt;\&lt;/span&gt;
    zip &lt;span class="se"&gt;\&lt;/span&gt;
    libssl-dev &lt;span class="se"&gt;\&lt;/span&gt;
    libffi-dev &lt;span class="se"&gt;\&lt;/span&gt;
    wget &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*

&lt;span class="c"&gt;# Python をソースファイルからビルドしてインストール&lt;/span&gt;
&lt;span class="c"&gt;# `make altinstall`: `make install` の代わりに推奨&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; wget https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; tar xf Python-3.7.3.tgz &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; Python-3.7.3 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/opt/python3.7.3 &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; make altinstall

&lt;span class="c"&gt;# Python のシンボリックリンクを作成&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; ln -s /opt/python3.7.3/bin/python3.7 /usr/local/bin/python

&lt;span class="c"&gt;# pip のシンボリックリンクを作成&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; ln -s /opt/python3.7.3/bin/pip3.7 /usr/local/bin/pip

&lt;span class="c"&gt;# pip をアップグレード&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; pip install -U pip

&lt;span class="c"&gt;# mysqlclient のインストールに必要なので、インストールしておく&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get clean &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y &lt;span class="se"&gt;\&lt;/span&gt;
    default-libmysqlclient-dev &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/*
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Dockerfile-mysql&lt;/span&gt;&lt;/tt&gt; : MySQL を入れるコンテナ&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="code-block "&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; mysql:latest&lt;/span&gt;

&lt;span class="c"&gt;# locales をインストールして設定する&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; apt-get update &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get install -y locales &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf /var/lib/apt/lists/* &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
&lt;span class="k"&gt;ENV&lt;/span&gt; LANG en_US.UTF-8
&lt;span class="k"&gt;ENV&lt;/span&gt; LANGUAGE en_US:en
&lt;span class="k"&gt;ENV&lt;/span&gt; LC_ALL en_US.UTF-8

&lt;span class="c"&gt;# タイムゾーンに JST を設定&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Dockerfile-postgres&lt;/span&gt;&lt;/tt&gt; : PostgreSQL を入れるコンテナ&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="code-block "&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; postgres:latest&lt;/span&gt;

&lt;span class="c"&gt;## locales をインストールして設定する (postgres の場合は、公式イメージで実行済み)&lt;/span&gt;
&lt;span class="c"&gt;## https://github.com/docker-library/postgres/blob/85aadc08c347cd20f199902c4b8b4f736341c3b8/11/Dockerfile&lt;/span&gt;
&lt;span class="c"&gt;#RUN apt-get update &amp;amp;&amp;amp; apt-get install -y locales &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/* \&lt;/span&gt;
&lt;span class="c"&gt;#  &amp;amp;&amp;amp; localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8&lt;/span&gt;
&lt;span class="c"&gt;#ENV LANG en_US.UTF-8&lt;/span&gt;
&lt;span class="k"&gt;ENV&lt;/span&gt; LANGUAGE en_US:en
&lt;span class="k"&gt;ENV&lt;/span&gt; LC_ALL en_US.UTF-8

&lt;span class="c"&gt;# タイムゾーンに JST を設定&lt;/span&gt;
&lt;span class="k"&gt;RUN&lt;/span&gt; ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;docker-compose.yml&lt;/span&gt;&lt;/tt&gt; : Composeファイル&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="code-block "&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'3'&lt;/span&gt;

&lt;span class="nt"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;app&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu_app&lt;/span&gt;
    &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;.&lt;/span&gt;
      &lt;span class="nt"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Dockerfile-app&lt;/span&gt;
    &lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;.:/fufufu&lt;/span&gt;
    &lt;span class="nt"&gt;working_dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;/fufufu&lt;/span&gt;
    &lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;bash -c "pip install -r requirements.txt &amp;amp;&amp;amp; bash"&lt;/span&gt;
    &lt;span class="nt"&gt;ports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"8000:8000"&lt;/span&gt;
    &lt;span class="nt"&gt;tty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;true&lt;/span&gt;  &lt;span class="c1"&gt;# 起動し続ける&lt;/span&gt;
    &lt;span class="nt"&gt;depends_on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;mysql&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;postgres&lt;/span&gt;

  &lt;span class="nt"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu_mysql&lt;/span&gt;
    &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;.&lt;/span&gt;
      &lt;span class="nt"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Dockerfile-mysql&lt;/span&gt;
    &lt;span class="nt"&gt;command&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;--character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci&lt;/span&gt;
    &lt;span class="nt"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
    &lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"mysql-data:/var/lib/mysql"&lt;/span&gt;
    &lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;
      &lt;span class="nt"&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;
      &lt;span class="nt"&gt;MYSQL_USER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;
      &lt;span class="nt"&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;

  &lt;span class="nt"&gt;postgres&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nt"&gt;container_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu_postgres&lt;/span&gt;
    &lt;span class="nt"&gt;build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;.&lt;/span&gt;
      &lt;span class="nt"&gt;dockerfile&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;Dockerfile-postgres&lt;/span&gt;
    &lt;span class="nt"&gt;restart&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;always&lt;/span&gt;
    &lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p p-Indicator"&gt;-&lt;/span&gt; &lt;span class="s"&gt;"postgres-data:/var/lib/postgresql/data"&lt;/span&gt;
    &lt;span class="nt"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nt"&gt;POSTGRES_DB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;
      &lt;span class="nt"&gt;POSTGRES_USER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;
      &lt;span class="nt"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="l l-Scalar l-Scalar-Plain"&gt;fufufu&lt;/span&gt;

&lt;span class="nt"&gt;volumes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;mysql-data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nt"&gt;postgres-data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;requirements.txt&lt;/tt&gt; : requirements.txt&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="code-block "&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="na"&gt;Django&amp;gt;&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;2.1&lt;/span&gt;
&lt;span class="na"&gt;mysqlclient&lt;/span&gt;
&lt;span class="na"&gt;psycopg2-binary&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id15"&gt;起動&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_5eceb9e9d46f420eb89a44a1e0e3df00-1"&gt;&lt;/a&gt;$ docker-compose up
&lt;a name="rest_code_5eceb9e9d46f420eb89a44a1e0e3df00-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 再度 image ビルドからやり直したい&lt;/span&gt;
&lt;a name="rest_code_5eceb9e9d46f420eb89a44a1e0e3df00-3"&gt;&lt;/a&gt;$ docker-compose up --build
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id16"&gt;つかいかた&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="app"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id17"&gt;app コンテナ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Django プロジェクトのコンテナに入る&lt;/span&gt;
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-2"&gt;&lt;/a&gt;$ docker container &lt;span class="nb"&gt;exec&lt;/span&gt; -it fufufu_app bash
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Django プロジェクトを作成する&lt;/span&gt;
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-4"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /fufufu
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-5"&gt;&lt;/a&gt;$ /opt/python3.7.3/lib/python3.7/site-packages/django/bin/django-admin.py startproject config .
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# runserver する ( settings.py の ``ALLOWED_HOSTS`` に ``'0.0.0.0'`` を書いておかないと ``DisallowedHost`` になります)&lt;/span&gt;
&lt;a name="rest_code_c01c7344029b432fae598a5275510ca6-7"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="mysql-postgresql"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id18"&gt;MySQL, PostgreSQL コンテナ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# MySQL のコンテナに入る&lt;/span&gt;
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-2"&gt;&lt;/a&gt;$ docker container &lt;span class="nb"&gt;exec&lt;/span&gt; -it fufufu_mysql bash
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# MySQL に入る&lt;/span&gt;
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-4"&gt;&lt;/a&gt;$ mysql -u fufufu -D fufufu -p
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# PostgreSQL のコンテナに入る&lt;/span&gt;
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-7"&gt;&lt;/a&gt;$ docker container &lt;span class="nb"&gt;exec&lt;/span&gt; -it fufufu_postgres bash
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# PostgreSQL に入る&lt;/span&gt;
&lt;a name="rest_code_19714d589ae04e5bbfde05a1f2997435-9"&gt;&lt;/a&gt;$ psql -U fufufu fufufu
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id19"&gt;感想&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Python をソースファイルからビルドしてインストール&lt;/tt&gt; するのは時間がかかる&lt;/li&gt;
&lt;li&gt;Django プロジェクトを作成するのに、venv を作らず、&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/opt/python3.7.3/lib/python3.7/site-packages/django/bin/django-admin.py&lt;/span&gt; startproject config .&lt;/tt&gt; じゃなくて、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin.py&lt;/span&gt; startproject config .&lt;/tt&gt; できる方法ないのだろうか...&lt;/li&gt;
&lt;li&gt;手動で &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/opt/python3.7.3/lib/python3.7/site-packages/django/bin/&lt;/span&gt;&lt;/tt&gt; に PATH を通せばできるけどそうじゃなくて自動でやってくれないのかな...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id20"&gt;その他&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id21"&gt;Python 公式イメージのルーツ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;python:latest, python:3 =&amp;gt; buildpack-deps:stretch =&amp;gt; debian:stretch&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ubuntu は Debian-based ということだけれど、 Debian と ubuntu はどんな風に違うんだろうなあ&lt;/li&gt;
&lt;li&gt;MySQL, PostgreSQL の公式イメージも Debian (debian:stretch-slim) だった&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="docker-hub"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/#id22"&gt;Docker Hub&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hub.docker.com/_/python"&gt;python Docker Official Images&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hub.docker.com/_/buildpack-deps"&gt;buildpack-deps Docker Official Images&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;cite&gt;A collection of common build dependencies used for installing various modules, e.g., gems.&lt;/cite&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://hub.docker.com/_/debian"&gt;Debian Docker Official Images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>docker</category><guid>https://32imuf.com/docker/create-django-env-with-docker-compose-psql-mysql/</guid><pubDate>Tue, 30 Apr 2019 15:00:00 GMT</pubDate></item><item><title>MySQL のメモ</title><link>https://32imuf.com/mysql/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id2" id="id8"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id3" id="id9"&gt;ログイン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id4" id="id10"&gt;便利&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id5" id="id11"&gt;データベース&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id6" id="id12"&gt;テーブル&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#dump" id="id13"&gt;dump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/mysql/note/#id7" id="id14"&gt;おぼえがき&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id8"&gt;リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dev.mysql.com/doc/refman/8.0/en/"&gt;MySQL 8.0 Reference Manual&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dev.mysql.com/doc/refman/8.0/en/information-schema.html"&gt;Chapter 25 INFORMATION_SCHEMA Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html"&gt;4.5.4 mysqldump&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://dev.mysql.com/doc/refman/8.0/en/window-functions.html"&gt;12.21 Window Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id9"&gt;ログイン&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f386887a75454364aab0d343bcaf7c0c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ログイン&lt;/span&gt;
&lt;a name="rest_code_f386887a75454364aab0d343bcaf7c0c-2"&gt;&lt;/a&gt;$ mysql -u user_name -D db_mame -p
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id10"&gt;便利&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_4a819aabeaa34828803d11bbece1391c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- 拡張表示&lt;/span&gt;
&lt;a name="rest_code_4a819aabeaa34828803d11bbece1391c-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;users&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'fumi23'&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id11"&gt;データベース&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_b3ea8089dcf445c1b7524f0874d33dd2-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- データベース一覧&lt;/span&gt;
&lt;a name="rest_code_b3ea8089dcf445c1b7524f0874d33dd2-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;DATABASES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b3ea8089dcf445c1b7524f0874d33dd2-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_b3ea8089dcf445c1b7524f0874d33dd2-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- データベースの切り替え&lt;/span&gt;
&lt;a name="rest_code_b3ea8089dcf445c1b7524f0874d33dd2-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;db_mame&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code mysql"&gt;&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- 現在の Character Sets 設定を表示する&lt;/span&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;VARIABLES&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s2"&gt;"char%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- 現在のタイムゾーン設定を表示する&lt;/span&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;VARIABLES&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="s1"&gt;'%time_zone%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- 現在の状態を表示する&lt;/span&gt;
&lt;a name="rest_code_58ffeb064b744260b2ab5205a336cf3e-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;STATUS&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code mysql"&gt;&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- データサイズを確認する&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- https://dev.mysql.com/doc/refman/8.0/en/tables-table.html&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-4"&gt;&lt;/a&gt;  &lt;span class="nf"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;db_size_gb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-5"&gt;&lt;/a&gt;  &lt;span class="nf"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;db_size_mb&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-6"&gt;&lt;/a&gt;  &lt;span class="nf"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data_length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;1024&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;db_size_kb&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-8"&gt;&lt;/a&gt;  &lt;span class="n"&gt;information_schema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kp"&gt;tables&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-10"&gt;&lt;/a&gt;  &lt;span class="n"&gt;table_schema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mmm'&lt;/span&gt;
&lt;a name="rest_code_0f81b5c67a494bedb35f6d4a36e21317-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id12"&gt;テーブル&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- テーブル一覧&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="kp"&gt;tables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- テーブルの列一覧&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;COLUMNS&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- テーブル定義を確認する&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;DESC&lt;/span&gt; &lt;span class="n"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;FULL&lt;/span&gt; &lt;span class="n"&gt;COLUMNS&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_cafd7fd02f914c98afee1ad04fc3bcb4-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="dump"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id13"&gt;dump&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8aaabe3d9e3d4dfbb99f76e98616dddc-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# dump を作る&lt;/span&gt;
&lt;a name="rest_code_8aaabe3d9e3d4dfbb99f76e98616dddc-2"&gt;&lt;/a&gt;$ mysqldump -u root -p db_mame &amp;gt; dump_filename.sql
&lt;a name="rest_code_8aaabe3d9e3d4dfbb99f76e98616dddc-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_8aaabe3d9e3d4dfbb99f76e98616dddc-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# dump を入れる&lt;/span&gt;
&lt;a name="rest_code_8aaabe3d9e3d4dfbb99f76e98616dddc-5"&gt;&lt;/a&gt;$ mysql -h localhost -u root -p db_mame &amp;lt; dump_filename.sql
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/mysql/note/#id14"&gt;おぼえがき&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Window 関数は 8.0.2 から利用可能&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://mysqlserverteam.com/mysql-8-0-2-introducing-window-functions/"&gt;MySQL 8.0.2: Introducing Window Functions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>mysql</category><guid>https://32imuf.com/mysql/note/</guid><pubDate>Mon, 29 Apr 2019 15:00:00 GMT</pubDate></item><item><title>Python のメモ</title><link>https://32imuf.com/python/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id2" id="id27"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#http" id="id28"&gt;ローカルに HTTP サーバーを立てる&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id6" id="id29"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id7" id="id30"&gt;ユーザー定義例外&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id8" id="id31"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#re-matchobject-groupdict" id="id32"&gt;re.MatchObject.groupdict&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id10" id="id33"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id11" id="id34"&gt;どんどん足してくやつ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#coding-utf-8" id="id35"&gt;coding: utf-8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#yield-dict-zip-columns-data" id="id36"&gt;yield dict(zip(columns, data))&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#defaultdict" id="id37"&gt;defaultdict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id14" id="id38"&gt;組み込み型と名前が被った場合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#sorted" id="id39"&gt;sorted&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id15" id="id40"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#all" id="id41"&gt;all()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#property" id="id42"&gt;@property&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id17" id="id43"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id18" id="id44"&gt;シーケンスのアンパッキング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#stringio-seek-0" id="id45"&gt;StringIO().seek(0)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#if-name-main" id="id46"&gt;if __name__ == "__main__"&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#unicode-str" id="id47"&gt;unicode と str&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id20" id="id48"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id21" id="id49"&gt;バックスラッシュ感染症&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id22" id="id50"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id24" id="id51"&gt;正規表現のグループ化機能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/note/#id26" id="id52"&gt;長い正規表現を記述する方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id27"&gt;リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/genindex.html"&gt;頭文字別索引:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/py-modindex.html"&gt;Pythonモジュール索引&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/functions.html#built-in-functions"&gt;組み込み関数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/index.html"&gt;Python 標準ライブラリ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="http"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id28"&gt;ローカルに HTTP サーバーを立てる&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ポートを指定 (現在のディレクトリのファイルを提供)&lt;/span&gt;
&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-2"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;
&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# バインドするアドレスを指定 (現在のディレクトリのファイルを提供)&lt;/span&gt;
&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-4"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt; &lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;
&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ファイルを提供するディレクトリを指定&lt;/span&gt;
&lt;a name="rest_code_f424904617264dbd984fff1f48e430a7-6"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id29"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/http.server.html"&gt;http.server --- HTTP サーバ&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id30"&gt;ユーザー定義例外&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Exception クラスを、直接または間接的に継承する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/exceptions.html#BaseException"&gt;https://docs.python.org/ja/3/library/exceptions.html#BaseException&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
全ての組み込み例外の基底クラスです。ユーザ定義の例外に直接継承されることは意図されていません (継承には Exception を使ってください)。
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;大抵は、いくつかの属性だけを提供し、例外が発生したときにハンドラがエラーに関する情報を取り出せるようにする程度にとどめる&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;だいたいは、標準の例外の名前付けと同様に、 "Error" で終わる名前で定義する&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;複数の別個の例外を送出するようなモジュールを作成する際には、そのモジュールで定義されている例外の基底クラスを作成するのが一般的なプラクティス&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id31"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3.7/tutorial/errors.html#user-defined-exceptions"&gt;8.5. ユーザー定義例外&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="re-matchobject-groupdict"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id32"&gt;re.MatchObject.groupdict&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;マッチの、すべての 名前つきの サブグループを含む、サブグループ名でキー付けされた辞書を返す&lt;/li&gt;
&lt;li&gt;リファレンスのサンプルコードを見ると一目瞭然なので、そちらを見てください&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id33"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/library/re.html#re.MatchObject.groupdict"&gt;https://docs.python.org/ja/2.7/library/re.html#re.MatchObject.groupdict&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id34"&gt;どんどん足してくやつ&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/functools.html#functools.reduce"&gt;functools.reduce&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="coding-utf-8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id35"&gt;coding: utf-8&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ソースコードの文字エンコーディングを指定する&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_3ed395f99a964378b18e43b01c0cd6e1-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;ファイルの先頭に記述する&lt;/li&gt;
&lt;li&gt;記述しないと、 Python2 環境かつファイルにマルチバイトが含まれていると &lt;tt class="docutils literal"&gt;SyntaxError&lt;/tt&gt; が発生する。&lt;/li&gt;
&lt;li&gt;Python3 環境では不要&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="yield-dict-zip-columns-data"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id36"&gt;yield dict(zip(columns, data))&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;これは、&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_05182536daf14d0f8f01a574d2b1e7c1-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_05182536daf14d0f8f01a574d2b1e7c1-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;row_dict&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
&lt;a name="rest_code_05182536daf14d0f8f01a574d2b1e7c1-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;row_dict&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;こう書ける。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a182196372444049a482569c5e70d05f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;zip&lt;/tt&gt; はタプルのイテレータを返す -&amp;gt; タプルから辞書を作れる&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;dict(iterable, **kwarg)&lt;/tt&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/stdtypes.html#dict"&gt;https://docs.python.org/ja/3/library/stdtypes.html#dict&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
それ以外の場合、位置引数は iterable オブジェクトでなければなりません。iterable のそれぞれの要素自身は、ちょうど 2 個のオブジェクトを持つイテラブルでなければなりません。それぞれの要素の最初のオブジェクトは新しい辞書のキーになり、2 番目のオブジェクトはそれに対応する値になります。同一のキーが 2 回以上現れた場合は、そのキーの最後の値が新しい辞書での対応する値になります。
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="defaultdict"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id37"&gt;defaultdict&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;リストの初期化が不要になる！&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/collections.html#defaultdict-objects"&gt;defaultdict オブジェクト&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/collections.html#defaultdict-examples"&gt;defaultdict の使用例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id38"&gt;組み込み型と名前が被った場合&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;in&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;int&lt;/tt&gt; など、キーワード・組み込み型と同じ名前を変数名にしたい場合は、末尾に &lt;tt class="docutils literal"&gt;_&lt;/tt&gt; を付ける。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="sorted"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id39"&gt;sorted&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;これは、&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6855065c14f3446cbe6ed2f43d5ef674-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;summary_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summary_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_6855065c14f3446cbe6ed2f43d5ef674-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;summary_list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sort_key'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;sorted&lt;/tt&gt; という関数を使って以下のように書ける。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fad0fecd1d474760af25d6bd7e7b3810-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;summary_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summary_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'sort_key'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;さらに、for文をこんなふうに書くと &lt;tt class="docutils literal"&gt;summary_list&lt;/tt&gt; を作る工程が不要。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_651a8c5a2c124482a59bae9502c24672-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summary_dict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
&lt;a name="rest_code_651a8c5a2c124482a59bae9502c24672-2"&gt;&lt;/a&gt;    &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id40"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;タプルはイミュータブルなシーケンス&lt;/cite&gt; なので、 ソートできる。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/functions.html#sorted"&gt;sorted&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/stdtypes.html#tuples"&gt;タプル型 (tuple)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="all"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id41"&gt;all()&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/functions.html#all"&gt;all(iterable)&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;iterable の全ての要素が真ならば (もしくは iterable が空ならば) True を返す。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="property"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id42"&gt;@property&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;@property&lt;/tt&gt; デコレータ を付けると、プロパティのように呼び出せる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;付け方&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ff8afc7b63284bcfb44a1580c08a4baf-1"&gt;&lt;/a&gt;&lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nb"&gt;property&lt;/span&gt;
&lt;a name="rest_code_ff8afc7b63284bcfb44a1580c08a4baf-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;access_datehour&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_ff8afc7b63284bcfb44a1580c08a4baf-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y/%m/&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;呼び出すとき&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f07f6be6caa4476aa049dbaa00daafce-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;xxx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;access_datehour&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id43"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/functions.html#property"&gt;https://docs.python.org/ja/3/library/functions.html#property&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;同じ名前のまま 読み出し専用属性の &lt;tt class="docutils literal"&gt;getter&lt;/tt&gt; にしてくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id44"&gt;シーケンスのアンパッキング&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/tutorial/datastructures.html#tuples-and-sequences"&gt;タプルとシーケンス&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="stringio-seek-0"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id45"&gt;StringIO().seek(0)&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/io.html#io.IOBase.seek"&gt;https://docs.python.org/ja/3/library/io.html#io.IOBase.seek&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;先頭にもどす、 (カーソルを先頭に戻すみたいなイメージ)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="if-name-main"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id46"&gt;if __name__ == "__main__"&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blog.pyq.jp/entry/Python_kaiketsu_180207"&gt;http://blog.pyq.jp/entry/Python_kaiketsu_180207&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pythonでは、インポートされたファイルの中身は実行される&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="unicode-str"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id47"&gt;unicode と str&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'ふみ'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;'ふみ'&lt;/span&gt;
&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-3"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'fumi23'&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;'fumi23'&lt;/span&gt;
&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-5"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_f74f6f36c55140199e5bc29e54adc12a-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;python2 の場合、マルチバイトを含むと &lt;tt class="docutils literal"&gt;u&lt;/tt&gt; の有無で違うオブジェクトとして判定される。&lt;/li&gt;
&lt;li&gt;python2の文字には &lt;tt class="docutils literal"&gt;unicode&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;str&lt;/tt&gt; がある。 ascii 文字しか含まない場合は 同じ値と判断されるけど基本的に別物として考えたほうがいい。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id20"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id48"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/tutorial/introduction.html#unicode-strings"&gt;3.1.3. Unicode 文字列&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id21"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id49"&gt;バックスラッシュ感染症&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;こんなふうに書く&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7b97f865cefc415188f37d9378b86dc9-1"&gt;&lt;/a&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s2"&gt;"ab*"&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="id22"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id50"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3.7/howto/regex.html#the-backslash-plague"&gt;バックスラッシュ感染症&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;r&lt;/tt&gt; を文字列リテラルの先頭に書くことでバックスラッシュは特別扱いされなくなる&lt;/li&gt;
&lt;li&gt;多くの場合 Python コードの中の正規表現はこの raw string 記法を使って書かれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id24"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id51"&gt;正規表現のグループ化機能&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;このあたりから&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3.7/howto/regex.html#non-capturing-and-named-groups"&gt;取り出さないグループと名前つきグループ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id26"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/note/#id52"&gt;長い正規表現を記述する方法&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;カンマ区切り無しで文字列リテラルを複数に分ける&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.python-guide.org/en/latest/writing/style/#line-continuations"&gt;http://docs.python-guide.org/en/latest/writing/style/#line-continuations&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;re.VERBOSE オプションを使う&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.python.org/ja/3/library/re.html#re.VERBOSE"&gt;https://docs.python.org/ja/3/library/re.html#re.VERBOSE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://32imuf.com/python/note/</guid><pubDate>Fri, 19 Apr 2019 15:00:00 GMT</pubDate></item></channel></rss>