<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて</title><link>https://32imuf.com/</link><description>のてのて</description><atom:link href="https://32imuf.com/atom.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Sun, 24 Nov 2019 16:11:41 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Django: settings.py</title><link>https://32imuf.com/django/settings/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id2" id="id17"&gt;書籍/リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id3" id="id18"&gt;概要&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id4" id="id19"&gt;インストールするアプリケーション一覧&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id5" id="id20"&gt;デバッグ設定&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id6" id="id21"&gt;静的ファイル/メディアファイル&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id7" id="id22"&gt;静的ファイル関連の設定&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id8" id="id23"&gt;メディアファイル関連設定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#runserver" id="id24"&gt;runserver でメディアファイルを配信してくれる仕組みがある&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id9" id="id25"&gt;データベース設定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id10" id="id26"&gt;組み込みでサポートしているデータベースエンジン:&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id11" id="id27"&gt;設定できる項目一覧:&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#mysql" id="id28"&gt;MySQL で注意する点:&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id12" id="id29"&gt;ロギングの設定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#logging" id="id30"&gt;本番稼働時の LOGGING 設定例&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id13" id="id31"&gt;開発時の LOGGING 設定例&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id14" id="id32"&gt;ロガーを取得する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id15" id="id33"&gt;その他の重要な設定&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/settings/#id16" id="id34"&gt;ベストプラクティス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id17"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Djangoの設定: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/settings/"&gt;https://docs.djangoproject.com/ja/2.2/topics/settings/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;設定: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt; 第10章&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id18"&gt;概要&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;設定オブジェクト: &lt;code class="docutils literal"&gt;django.conf.settings&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Django 起動時に次のようにインスタンス化されるシングルトンなグローバルオブジェクト&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7b3f200a739443dc93c88de98383f784-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django/conf/__init__.py&lt;/span&gt;
&lt;a name="rest_code_7b3f200a739443dc93c88de98383f784-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LazySettings&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;↑ は、Django のデフォルト設定ファイル ( &lt;code class="docutils literal"&gt;django.conf.global__settings.py&lt;/code&gt; ) を読み込んだ後&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;プロジェクト作成時に生成される設定ファイル ( &lt;code class="docutils literal"&gt;settings.py&lt;/code&gt; ) を読み込んで設定を上書きされる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;設定ファイル: プロジェクト生成時に生成される &lt;code class="docutils literal"&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Django のデフォルト設定とは異なるプロジェクト固有の設定値や&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自作のアプリケーションで利用する独自の変数を記述しておく&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django で利用できる設定変数とそのデフォルト値の一覧 =&amp;gt; &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;View や models からアクセスするときは、オブジェクトなので、&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_91146bf423964593b58f90ac75d59cee-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こんな風に参照しましょう&lt;/span&gt;
&lt;a name="rest_code_91146bf423964593b58f90ac75d59cee-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;a name="rest_code_91146bf423964593b58f90ac75d59cee-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LOGIN_URL&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;LazySettings ??&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;その設定値にアクセスされてから初めてその属性が読み込まれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最初にその属性値にアクセスされるまでは設定を変え放題&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;settings の属性に一度でもアクセスされてしまうと、変更しようとしてもエラーになるので、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基本的には、設定ファイルの中で初期設定を済ませよう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id19"&gt;インストールするアプリケーション一覧&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 略&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Install するアプリケーションをリスト形式で列挙&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 各アプリディレクトリ.apps.py の AppConfig クラスのサブクラスを指定する&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-5"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'accounts.apps.AccountsConfig'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-6"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'shop.apps.ShopConfig'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1ac8fa56b31f4458895abe117fc92bcd-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;パッケージ名を書くのは少し古い書き方&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上に書いた方が優先順位が高い&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id20"&gt;デバッグ設定&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_aea0a6ba7c434324a069fb73e64cc3ca-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;開発時は True にしておくと、いろいろ便利&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;エラー発生時に画面にデバッグ情報が出力される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-debug-toolbar, SQL 文のロギングは True じゃないと使えない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id21"&gt;静的ファイル/メディアファイル&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;The staticfiles app: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/contrib/staticfiles/"&gt;https://docs.djangoproject.com/ja/2.2/ref/contrib/staticfiles/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;静的ファイルのデプロイ: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/howto/static-files/deployment/"&gt;https://docs.djangoproject.com/ja/2.2/howto/static-files/deployment/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ファイルのアップロード: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/file-uploads/"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/file-uploads/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Djangoで静的ファイルとうまくやる: &lt;a class="reference external" href="https://tell-k.github.io/djangocongressjp2019/#1"&gt;https://tell-k.github.io/djangocongressjp2019/#1&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id22"&gt;静的ファイル関連の設定&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;静的ファイル (static ファイル)&lt;/code&gt;: リクエストに応じて中身を変更せずそのまま配信するファイル&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;CSS ファイル&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript ファイル&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;画像ファイルに&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;単に静的ファイルをブラウザへ返すだけの処理をアプリケーションサーバーで捌くと、無駄が多くなってしまう&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;=&amp;gt; アプリケーションサーバーの前段に Nginx に代表される &lt;code class="docutils literal"&gt;リバースプロキシ&lt;/code&gt; と呼ばれるサーバーを配置し、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;=&amp;gt; 静的ファイルを返すだけの処理はリバースプロキシが担当し、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;=&amp;gt; Web application の処理が必要なリクエストだけをアプリケーションサーバーへ振り分けることで、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;=&amp;gt; 効率よくリクエストを捌けるようにする&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;セキュリティの観点から、↓は別々にするケースが多い&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;静的ファイルの配信元&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;プロジェクトで静的ファイルをバージョン管理する際のプロジェクト内での置き場所&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最低限↓の３つの設定必要&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# これしておくと便利&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;PROJECT_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 静的ファイル配信用のディレクトリ、URL の一部になる&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 設定値はデフォルトの `/static/` のままでよい&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;STATIC_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/'&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# アプリケーションに紐づかない静的ファイルの置き場&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-10"&gt;&lt;/a&gt;&lt;span class="n"&gt;STATICFILES_DIRS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'static'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 静的ファイルの配信元&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-13"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# collectstatic コマンドで静的ファイルを集約する際のコピー先でもある&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-14"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# `STATICFILES_DIRS` とは別のディレクトリを指定する必要がある&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-15"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# DEBUG = False のときに必要&lt;/span&gt;
&lt;a name="rest_code_6b94d060edde42a5ba8f39df46be49ef-16"&gt;&lt;/a&gt;&lt;span class="n"&gt;STATIC_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/var/www/{}/static'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;静的ファイル集約のための管理コマンド: &lt;code class="docutils literal"&gt;collectstatic&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_239bcbd24ba549288ccbfe160f4b94dc-1"&gt;&lt;/a&gt;$ python3 manage.py collectstatic
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;DEBUG = True&lt;/code&gt; のときは、 runserver がやってくれるので自分で &lt;code class="docutils literal"&gt;collectstatic&lt;/code&gt; する必要ない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;STATIC_URL&lt;/code&gt; を使って画像を表示するテンプレート実装例&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_292b2efc82ab4032bcca917cea15b1df-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_292b2efc82ab4032bcca917cea15b1df-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="si"&gt;% s&lt;/span&gt;&lt;span class="s2"&gt;tatic 'shop/images/no-image.png' %}"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_292b2efc82ab4032bcca917cea15b1df-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="si"&gt;% s&lt;/span&gt;&lt;span class="s2"&gt;tatic 'images/logo.png' %}"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id23"&gt;メディアファイル関連設定&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;メディアファイル&lt;/code&gt;: 静的ファイルのうち、 (システム管理者を含めた) ユーザーがサイトを利用してアップロードするファイル&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本番環境では、メディアファイルもAPサーバーで裁かずにリバースプロキシなどで捌くことで負荷を減らす&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# メディアファイルの設定例 (config/settings.py)&lt;/span&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# DEBUG =  False 時&lt;/span&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/media/'&lt;/span&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/var/www/{}/media'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユニットテスト時 or PaaS ? WhiteNoise 時&lt;/span&gt;
&lt;a name="rest_code_1c7a4013294043abadb047f50f1353ea-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'media_root'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;アップロードを実装するときのコツは P.114 付近に詳しく書いてあるので、実装するときはよく見ること&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="runserver"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id24"&gt;runserver でメディアファイルを配信してくれる仕組みがある&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;動作確認に便利&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# config/urls.py&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf.urls.static&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# static 関数の内部で DEBUG = True でないと動作しないようにチェックしているよ&lt;/span&gt;
&lt;a name="rest_code_fca2bfdc863f4b9a99907acb724604a7-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;document_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MEDIA_ROOT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id25"&gt;データベース設定&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id26"&gt;組み込みでサポートしているデータベースエンジン:&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;django.db.backends.postgresql (PostgreSQL)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django.db.backends.mysql (MySQL)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django.db.backends.sqlite3 (SQLite)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django.db.backends.oracle (Oracle)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id27"&gt;設定できる項目一覧:&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#databases"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#databases&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;ATOMIC_REQUESTS&lt;/code&gt;:  トランザクションの有効範囲をリクエストの開始から終了までにするかどうかを指定できる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;OPTIONS&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;いろんなオプションを設定できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;トランザクションの分離レベル &lt;code class="docutils literal"&gt;isolation_level&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL の SQL モード &lt;code class="docutils literal"&gt;sql_mode&lt;/code&gt; など&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;デフォルトから変更したら、Django 側だけでなくデータベース側にも同じ設定をしておくのが望ましい&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="mysql"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id28"&gt;MySQL で注意する点:&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SQLモードを「厳密モード」にしておかないと振る舞いが微妙なので、設定しておいたほうがよい&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_54399ce2f2914870afe279613e9ac28f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 最も厳しく設定するとこうなる&lt;/span&gt;
&lt;a name="rest_code_54399ce2f2914870afe279613e9ac28f-2"&gt;&lt;/a&gt;&lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_54399ce2f2914870afe279613e9ac28f-3"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'sql_mode'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'TRADITIONAL,NO_AUTO_VALUE_ON_ZERO'&lt;/span&gt;
&lt;a name="rest_code_54399ce2f2914870afe279613e9ac28f-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MySQL を利用する際はドライバーが必要: Django 推奨は &lt;code class="docutils literal"&gt;mysqlclient&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id29"&gt;ロギングの設定&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/logging/"&gt;https://docs.djangoproject.com/ja/2.2/topics/logging/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;プロジェクト作成時にはロギング設定は書かれていない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django の起動時に django.utils.log.py の &lt;code class="docutils literal"&gt;DEFAUT_LOGGING&lt;/code&gt; の設定が読み込まれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="logging"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id30"&gt;本番稼働時の LOGGING 設定例&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;LOGGING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# バージョンは「1」固定&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-3"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'version'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 既存のログ設定を無効化しない&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-5"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'disable_existing_loggers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ログフォーマット&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-7"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'formatters'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 本番用&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-9"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'production'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt;] &lt;/span&gt;&lt;span class="si"&gt;%(name)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(process)d&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(thread)d&lt;/span&gt;&lt;span class="s1"&gt; '&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(pathname)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(lineno)d&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-12"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-13"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-14"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ハンドラ&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-15"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-16"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ファイル出力用ハンドラ&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-17"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-18"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'INFO'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-19"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# logging.handlers.RotatingFileHandler, logging.handlers.TimeRotatingFileHandler&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-20"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# を使うとログファイルをローテーションできて便利&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-21"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'logging.FileHandler'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-22"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'filename'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'var/log/{}.log'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-23"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'formatter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-24"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-25"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-26"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ロガー&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-27"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'loggers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-28"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 自作アプリケーション全般のログを拾うロガー&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-29"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# '' と書くと、独自に追加したアプリケーションのログを拾うことができる&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-30"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-31"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-32"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'INFO'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-33"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'propagate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-34"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-35"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# Django 本体が出すログ全般を拾うロガー&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-36"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'django'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-37"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-38"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'INFO'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-39"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'propagate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-40"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-41"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_873ab88da5884d66a24279c00cca0ec2-42"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id31"&gt;開発時の LOGGING 設定例&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;LOGGING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# バージョンは「1」固定&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-3"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'version'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 既存のログ設定を無効化しない&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-5"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'disable_existing_loggers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ログフォーマット&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-7"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'formatters'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 開発用&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-9"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'develop'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(asctime)s&lt;/span&gt;&lt;span class="s1"&gt; [&lt;/span&gt;&lt;span class="si"&gt;%(levelname)s&lt;/span&gt;&lt;span class="s1"&gt;] &lt;/span&gt;&lt;span class="si"&gt;%(pathname)s&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(lineno)d&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="si"&gt;%(message)s&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-11"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-12"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-13"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ハンドラ&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-14"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-15"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# コンソール出力用ハンドラ&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-16"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'console'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-17"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'DEBUG'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-18"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# logging.handlers.RotatingFileHandler, logging.handlers.TimeRotatingFileHandler&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-19"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# を使うとログファイルをローテーションできて便利&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-20"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'class'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'logging.StreamHandler'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-21"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'filename'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'var/log/{}.log'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-22"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'formatter'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'develop'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-23"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-24"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-25"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ロガー&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-26"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'loggers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-27"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 自作アプリケーション全般のログを拾うロガー&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-28"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-29"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'console'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-30"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'DEBUG'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-31"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'propagate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-32"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-33"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# Django 本体が出すログ全般を拾うロガー&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-34"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'django'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-35"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'console'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-36"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'INFO'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-37"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'propagate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-38"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-39"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 発行される SQL 文を出力するための設定&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-40"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# パフォーマンスの観点から DEBUG = True でないと出力されないようになっている&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-41"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'django.db.backends'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-42"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'handlers'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'console'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-43"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'level'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'DEBUG'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-44"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'propagate'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-45"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-46"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_b857e9aadcaf463e8c3b0e228cf1a61e-47"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id32"&gt;ロガーを取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ffbf8d82a9034d4aa9b9e7424eb45431-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;logger&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getLogger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id33"&gt;その他の重要な設定&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;TEMPLATES&lt;/code&gt; テンプレートに関する設定: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-TEMPLATES"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-TEMPLATES&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;TEMPLATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-2"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-3"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプレートエンジン&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-4"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'BACKEND'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'django.template.backends.django.DjangoTemplates'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-5"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ビューから指定されるテンプレート名に対してどのディレクトリを優先してテンプレートを探しに行くかの順番を指定する&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-6"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'DIRS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BASE_DIR&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'templates'&lt;/span&gt;&lt;span class="p"&gt;)],&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプートを探す際に、各アプリケーションディレクトリ直下の templates を優先する場合 True&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-8"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'APP_DIRS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-9"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-10"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# テンプレートから参照できる変数を渡すための context_processors&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'context_processors'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-12"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'django.template.context_processors.debug'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-13"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'django.template.context_processors.request'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-14"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'django.contrib.auth.context_processors.auth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-15"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'django.contrib.messages.context_processors.messages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-16"&gt;&lt;/a&gt;            &lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-17"&gt;&lt;/a&gt;        &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-18"&gt;&lt;/a&gt;    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;a name="rest_code_87e34f3c99054fe2bcaa685291fdefed-19"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;LANGUAGE_CODE&lt;/code&gt; 言語コード: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#language-code"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#language-code&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_73557f5c05434eaab7e3d3ebfa964ccd-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# デフォルトは 'en-us'&lt;/span&gt;
&lt;a name="rest_code_73557f5c05434eaab7e3d3ebfa964ccd-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 管理サイトの表示もここで指定した言語に&lt;/span&gt;
&lt;a name="rest_code_73557f5c05434eaab7e3d3ebfa964ccd-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;LANGUAGE_CODE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'ja'&lt;/span&gt;  &lt;span class="c1"&gt;# 日本語&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;TIME_ZONE&lt;/code&gt; タイムゾーン: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-TIME_ZONE"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-TIME_ZONE&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0197fafeda9c4d26bcbf8d8d85e4e314-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 時刻を表示する際のタイムゾーンを指定&lt;/span&gt;
&lt;a name="rest_code_0197fafeda9c4d26bcbf8d8d85e4e314-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# デフォルトは 'UTC'&lt;/span&gt;
&lt;a name="rest_code_0197fafeda9c4d26bcbf8d8d85e4e314-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;TIME_ZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt;  &lt;span class="c1"&gt;# 日本&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;MIDDLEWARE&lt;/code&gt; ミドルウェアの設定: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#middleware"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#middleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;ALLOWED_HOSTS&lt;/code&gt; 許可するホスト : &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#allowed-hosts"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#allowed-hosts&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;SECRET_KEY&lt;/code&gt; シークレットキー: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-SECRET_KEY"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#std:setting-SECRET_KEY&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Django 内部で暗号署名やハッシュ生成に利用されるシークレットな文字列&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SECRET_KEY が設定されていない場合、Django は起動しない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-admin startproject コマンドを実行すると、新しいプロジェクトを作成するたびに、ランダムに生成された SECRET_KEY を自動的に設定してくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;環境ごとに固有であることが望ましい&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;SITE_ID&lt;/code&gt; サイトID: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/settings/#sites"&gt;https://docs.djangoproject.com/ja/2.2/ref/settings/#sites&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/settings/#id34"&gt;ベストプラクティス&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;個人の開発環境の設定は &lt;code class="docutils literal"&gt;local_settings.py&lt;/code&gt; に書く&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d6d738b2cef84f16832b20087496827d-1"&gt;&lt;/a&gt;$ python3 manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000 --settings config.local_settings
&lt;a name="rest_code_d6d738b2cef84f16832b20087496827d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_d6d738b2cef84f16832b20087496827d-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# もしくは&lt;/span&gt;
&lt;a name="rest_code_d6d738b2cef84f16832b20087496827d-4"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;config.local_settings
&lt;a name="rest_code_d6d738b2cef84f16832b20087496827d-5"&gt;&lt;/a&gt;$ python3 manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シークレットな変数は &lt;code class="docutils literal"&gt;.env&lt;/code&gt; に書く&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;バージョン管理下に置かない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;settings.py には書かない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-environ 便利&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/settings/</guid><pubDate>Sat, 23 Nov 2019 15:00:00 GMT</pubDate></item><item><title>Django: Middleware</title><link>https://32imuf.com/django/middleware/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id2" id="id8"&gt;書籍/リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id3" id="id9"&gt;概要&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id4" id="id10"&gt;主なミドルウェア&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#securitymiddleware" id="id11"&gt;SecurityMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#sessionmiddleware" id="id12"&gt;SessionMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#commonmiddleware" id="id13"&gt;CommonMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#csrfviewmiddleware" id="id14"&gt;CsrfViewMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#authenticationmiddleware" id="id15"&gt;AuthenticationMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#messagemiddleware" id="id16"&gt;MessageMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#xframeoptionsmiddleware" id="id17"&gt;XFrameOptionsMiddleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id6" id="id18"&gt;ミドルウェアの書き方&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id8"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/middleware/"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/middleware/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id9"&gt;概要&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Django の主要な機能 (モデル・テンプレート・ビュー) と Web サーバー/アプリケーションの中間に位置&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ビューを出入りするすべてのリクエストとレスポンスをフックできる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;さまざまなミドルウェアが組み込みで用意されている&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自作して追加することも可能&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;必要なものを settings に加えると利用できる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サイト全体にリクエストやレスポンスを使用して一律に何らかの機能を加えたい場合などに利用する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;settings の &lt;code class="docutils literal"&gt;MIDDLEWARE&lt;/code&gt; にリスト形式で列挙&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;書いた順番に実行される。順番大事。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;書いたミドルウェアはリクエストの度に全部実行されるので、あまり重い処理は書かないようにすること。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;できるかぎりデータベースアクセスしない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;必要なら &lt;code class="docutils literal"&gt;django.utils.functional.SimpleLazyObject&lt;/code&gt; を使うようにする&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id10"&gt;主なミドルウェア&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;以下は、 Django プロジェクト作成時にデフォルトで設定される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;デフォルトで設定されるミドルウェアはとりあえずそのまま使うのが吉とのこと&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="securitymiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id11"&gt;SecurityMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;リクエスト/レスポンスのセキュリティ強化&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HTTP =&amp;gt; HTTPS リダイレクト (デフォルトはOFF)&lt;/p&gt;
&lt;pre class="code Python"&gt;&lt;a name="rest_code_1a2ef5bebaa3437cad3741de60a5e727-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;SECURE_SSL_REDIRECT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;入れておいて損はないので何も考えずに入れておくとよい&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sessionmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id12"&gt;SessionMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;セッションを有効にする&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;有効にする場合は、 &lt;code class="docutils literal"&gt;INSTALLED_APPS&lt;/code&gt; に &lt;code class="docutils literal"&gt;django.contrib.sessions&lt;/code&gt; を入れるのを忘れずに&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使い方はここを見よ: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/sessions/"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/sessions/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;迷ったら有効化しておく&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="commonmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id13"&gt;CommonMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ユーザーエージェントによるアクセス制限&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;URL リライティング&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;公式でも使用を強くお勧め&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;必須では&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;APPEND_SLASH&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;PREPEND_WWW&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="csrfviewmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id14"&gt;CsrfViewMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;CSRF トークン検証&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="authenticationmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id15"&gt;AuthenticationMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;リクエストの度に、リクエストオブジェクトの &lt;code class="docutils literal"&gt;user&lt;/code&gt; 属性にユーザー情報をセットしてくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ログイン済みの場合: セッション.Userインスタンス&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;未ログインの場合: AnonymousUser (匿名ユーザー)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;セッションが必要なので、 SessionMiddleware より後ろに書く&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="messagemiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id16"&gt;MessageMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;フラッシュメッセージ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;メッセージフレームワーク&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt; P.103&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="xframeoptionsmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id17"&gt;XFrameOptionsMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;クリックジャッキング対策&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;X-Frame-Options&lt;/span&gt;&lt;/code&gt; ヘッダーを全てのレスポンスに設定&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id18"&gt;ミドルウェアの書き方&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ここを見よ&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/middleware/#writing-your-own-middleware"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/middleware/#writing-your-own-middleware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt; P.101&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/middleware/</guid><pubDate>Sun, 13 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Pycharm の Tox support を使う</title><link>https://32imuf.com/pycharm/tox-support/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id2" id="id6"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id3" id="id7"&gt;設定&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id4" id="id8"&gt;良いところ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id5" id="id9"&gt;イマイチなところ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#pytest" id="id10"&gt;注意: pytest のバージョンは以下なら動く&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id6"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://pleiades.io/help/pycharm/tox-support.html"&gt;https://pleiades.io/help/pycharm/tox-support.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/19236745/pycharm-pytestrunner-pluginmanager-unexpected-keyword-argument"&gt;https://stackoverflow.com/questions/19236745/pycharm-pytestrunner-pluginmanager-unexpected-keyword-argument&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id7"&gt;設定&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;Run/Debug Configurations&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;+&lt;/code&gt; ボタン&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Templates から &lt;code class="docutils literal"&gt;tox&lt;/code&gt; を選ぶ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;必要事項を記入して &lt;code class="docutils literal"&gt;Apply&lt;/code&gt; =&amp;gt; &lt;code class="docutils literal"&gt;OK&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Name: 好きな名前&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Argument: tox に渡す引数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例) &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;--&lt;/span&gt; &lt;span class="pre"&gt;--reuse-db&lt;/span&gt; &lt;span class="pre"&gt;tests/test_views/test_entries.py::TestEntries::test_it&lt;/span&gt; &lt;span class="pre"&gt;-x&lt;/span&gt; &lt;span class="pre"&gt;-vv&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run only environment: 実行したい環境&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例) py37, flake8&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python interpreter: Project Innterpreter を選択&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;例) &lt;code class="docutils literal"&gt;Remote Python 3.7.3 Docker Compose (app at &lt;span class="pre"&gt;[/Users/fumi23/docker-work/fufufu/docker-compose.yml])&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Workinng directory: なしでもローカルpathでもリモートpathでも動いた&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Path mapping: 設定してもしなくても動いた =&amp;gt; 設定したほうが良さそう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/pycharm/tox-support/RunDebugConfigTox.png" src="https://32imuf.com/images/pycharm/tox-support/RunDebugConfigTox.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id8"&gt;良いところ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;各テストケースのログにパッとアクセスできる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;テストメソッド名を押すと、横にそのテストケースだけのログが出る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;たくさんスクロールしなくて良い&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;失敗したテストケースだけサクッと再実行できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;左側の▶︎丸びっくりボタンを押すだけ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/pycharm/tox-support/Run.png" src="https://32imuf.com/images/pycharm/tox-support/Run.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id9"&gt;イマイチなところ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;BreakPoint で止まらない (いろいろ試したけれど解消できなかった)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ほかにもできないひとがいるみたい? &lt;a class="reference external" href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000140764-Pycharm-debugger-doesn-t-stop-at-any-breakpoint"&gt;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000140764-Pycharm-debugger-doesn-t-stop-at-any-breakpoint&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;たぶん、本来はできるんだと思う&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pytest"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id10"&gt;注意: pytest のバージョンは以下なら動く&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;pytest 5.0.1 (2019-07-04)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;これより新しいバージョンは動かなかった&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PyCharm 2019.2.3 (Professional Edition)
Build #PY-192.6817.19, built on September 25, 2019&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>pycharm</category><guid>https://32imuf.com/pycharm/tox-support/</guid><pubDate>Sun, 13 Oct 2019 15:00:00 GMT</pubDate></item><item><title>SQL アンチパターンまとめ</title><link>https://32imuf.com/sql/sql-antipatterns/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;書籍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.oreilly.co.jp/books/9784873115894/"&gt;SQL アンチパターン SQL Antipatterns (2013年, オライリー・ジャパン)&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Bill Karwin 著&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和田 卓人, 和田 省二 監訳&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;小島 修 訳&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="i"&gt;
&lt;h2&gt;I部 データベース論理設計のアンチパターン&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;1章 ジェイウォーク (信号無視)&lt;/h3&gt;
&lt;p&gt;１つの製品に複数ユーザーを連絡先として登録できるようにしたい&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;複数の値を持つ属性を格納する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;カンマ区切りフォーマットのリストを格納する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;交差テーブルを作成する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;ひとつひとつの値は個別の行と列に格納しましょう&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;多対多は交差テーブルだな&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;2章 ナイーブツリー (素朴な木)&lt;/h3&gt;
&lt;p&gt;スレッド形式のコメント欄&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;階層構造を格納し、クエリを実行する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;常に親のみに依存する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;代替ツリーモデルを使用する (各設計の比較はP.30を見よ)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;経路列挙 (Path Enumeration)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;入れ子集合 (Nested Set)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;閉包テーブル (Closure Table)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;再帰クエリ ※&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;階層構造はエントリと関連 (リレーションシップ) から成り立ちます。これを念頭に、行う作業に合わせて最適な設計手法を選択しましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;再帰クエリめちゃくちゃ便利だな&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- ※ 再帰クエリの例&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="nf"&gt;CommentTree&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="no"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-7"&gt;&lt;/a&gt;  &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_28480ffe171946b1b8dddfb6b9046b9f-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;MySQL 8.0 ~ , PostgreSQL 8.4 ~ ... はサポートしている&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id-id"&gt;
&lt;h3&gt;3章 ID リクワイアド (とりあえずID)&lt;/h3&gt;
&lt;p&gt;「行の重複を避けるにはどうすればよいか」と質問された&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;主キーの規約を確立する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;すべてのテーブルに「id」列を用いる&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;状況に応じて適切に調整する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;わかりやすい列名にしよう&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;規約に縛られない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自然キーと複合キーの活用&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;規約は、役立つと思える場合のみ従いましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;ずっと気になっていたので腹落ち&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;4章 キーレスエントリー (外部キー嫌い)&lt;/h3&gt;
&lt;p&gt;研究所の設備がダブルブッキングされた&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;データベースのアーキテクチャを単純化する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;外部キー制約を使用しない&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;外部キー制約を宣言する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;複数テーブルの変更をサポートする (カスケード更新)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;オーバーヘッド、……にはなりません&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;データベースでのミスの発生を未然に防ぐために、外部キー制約を用いましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;やっぱりつけたほうが良かったんだな!&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="eav"&gt;
&lt;h3&gt;5章 EAV (エンティティ・アトリビュート・バリュー)&lt;/h3&gt;
&lt;p&gt;Issue と Bug と FeatureRequest (機能要望) のはなし&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;可変属性をサポートする&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;汎用的な属性テーブルを使用する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;サブタイプのモデリングを行う&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;シングルテーブル継承 (Single Table Inheritance)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bug と FeatureRequest を同じテーブル (Issues) に入れる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;issue_type 列を持つ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Bug のみが使う列/FeatureRequest のみが使う列、がある&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;具象テーブル継承 (Concrete Table Inheritance)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bugs テーブルと FeatureRequests テーブルを作る (サブタイプごとにテーブル作成)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;issue_type 列不要&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サブタイプに存在しない属性列を格納せずにすむ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;クラステーブル継承 (Class Table Inheritance)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;サブタイプに共通する属性を含む基底型のテーブル (Issues) を１つ作る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サブタイプごとに追加のテーブルを作る (Bugs/FeatureRequests)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Issues.id を外部キーに持つ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;それぞれに固有の属性のみを持つ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;半構造化データ (シリアライズLOB: Serialized LOB)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;issue_type 列を持つ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サブタイプに固有の属性は LOB列に持つ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;サブタイプの数が多い、頻繁に新しい属性を追加しなければならない、場合など&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;メタデータは、メタデータのために用いましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;ありそう。ある。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;6章 ポリモーフィック関連&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ユーザーがバグについてのコメントを書き込める =&amp;gt; Bugs と Comments が １対多&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ユーザーが機能要望についてのコメントを書き込める =&amp;gt; FeatureRequests と Comments が １対多&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;バグについてのコメントも、機能要望についてのコメントも、同じ Comments テーブルに格納したい&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;複数の親テーブルを参照する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;二重目的の外部キーを使用する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;関連 (リレーションシップ) を単純化する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;参照を逆にする&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交差テーブルの作成 (Bugs/FeatureRequests が具象テーブル継承)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;共通の親テーブルの作成 (Bugs/FeatureRequests がクラステーブル継承)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;テーブル間の関連 (リレーションシップ) には、参照元テーブルと参照先テーブルが常にそれぞれ１つしかないことを忘れないようにしましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;5章と関連してる。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;7章 マルチカラムアトリビュート (複数列属性)&lt;/h3&gt;
&lt;p&gt;バグデータベースに、バグを分類するための「タグ付機能」を追加したい&lt;/p&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;目的&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;複数の値を持つ属性を格納する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;アンチパターン&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;複数の列を定義する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;解決策&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;従属テーブル (Tags テーブル) を作成する&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;まとめ&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;同じ意味を持つ値は、１つの列に格納するようにしましょう。&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;わたしの感想&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;すんなり。&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>sql</category><guid>https://32imuf.com/sql/sql-antipatterns/</guid><pubDate>Sat, 05 Oct 2019 15:00:00 GMT</pubDate></item><item><title>wheel</title><link>https://32imuf.com/python/wheel/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#wheel" id="id5"&gt;wheel&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id2" id="id6"&gt;インストール&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id3" id="id7"&gt;wheel の作り方&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#pypi-sdist-wheel" id="id8"&gt;PyPI で sdist で配布されているパッケージを wheel 形式のパッケージに変換してローカルに保存する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#setuptools-wheel" id="id9"&gt;setuptools ベースのプロジェクトから wheel を作成する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id4" id="id10"&gt;ガイド/リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="wheel"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id5"&gt;wheel&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;wheel: ビルド済みの C 拡張や Python パッケージのみを含み、ファイルを展開するだけでインストールが完了する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python の公式バイナリパッケージは wheel 形式 (PEP491)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pip コマンドは、 wheel 形式を優先して利用する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;pip は、 PyPI にアップロードされている wheel 形式のパッケージを直接インストールできる&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_b116d7b1645e4462aca92aa15f05ce12-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install &lt;span class="nv"&gt;django&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.11.15
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://pythonwheels.com/"&gt;https://pythonwheels.com/&lt;/a&gt; : 定番パッケージの wheel 配布状況を確認できる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sdist : パッケージのソース、メタデータ、ビルド方法などをアーカイブしたソース配布形式&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;インストールのたびに各環境でアーカイブに同梱される setup スクリプトを読み込み、 C 拡張があればビルドし、必要があれば
Python パッケージを確認して、 site-packages へコピーする&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id6"&gt;インストール&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9db56055cdf2485e8e329bdb885b9bf2-1"&gt;&lt;/a&gt;$ pip install wheel
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id7"&gt;wheel の作り方&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="pypi-sdist-wheel"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id8"&gt;PyPI で sdist で配布されているパッケージを wheel 形式のパッケージに変換してローカルに保存する&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_e2ca6e7d45fc433e9c7e592951fa40fa-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# wheelhouse ディレクトリに wheel 形式パッケージを作成する&lt;/span&gt;
&lt;a name="rest_code_e2ca6e7d45fc433e9c7e592951fa40fa-2"&gt;&lt;/a&gt;$ pip wheel markupsafe -w wheelhouse
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;wheelhouse&lt;/code&gt; ディレクトリがなくても、 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-w&lt;/span&gt; wheelhouse&lt;/code&gt; を指定すると勝手に作ってくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;wheel 形式のパッケージの保存ディレクトリ名は何でもよいが、慣習的に &lt;code class="docutils literal"&gt;wheelhouse&lt;/code&gt; という名前を使う&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="setuptools-wheel"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id9"&gt;setuptools ベースのプロジェクトから wheel を作成する&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_48051fe1855941488e310ebf9b656148-1"&gt;&lt;/a&gt;$ python setup.py bdist_wheel
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python のパッケージングには setup スクリプトが必要 (PyPro3 P.66)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;setup.py というファイル名で用意する (Python の仕様で決められている)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setup.py には Python パッケージ情報 (メタデータ: パッケージ名やバージョン, 依存パッケージなど) を書く&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setuptools は pip が使える環境には必ずインストールされているライブラリ&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;一般的には setuptools が提供する機能拡張された setup 関数を使う&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 詳しくは PyPro P.70 を見よ&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"hey"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1.2.3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;include_package_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Django&amp;gt;=2.1'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_a660d50bb3644eaa8ec3243e650d5544-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id10"&gt;ガイド/リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.66, P.70&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.256 - P.259&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://wheel.readthedocs.io/en/latest/user_guide.html"&gt;https://wheel.readthedocs.io/en/latest/user_guide.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://setuptools.readthedocs.io/en/latest/"&gt;https://setuptools.readthedocs.io/en/latest/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://32imuf.com/python/wheel/</guid><pubDate>Sat, 05 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Django: django-admin.py, manage.py</title><link>https://32imuf.com/django/manage/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id2" id="id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-manage-py" id="id13"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-py-django-admin" id="id14"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#manage-py" id="id15"&gt;manage.py&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id3" id="id16"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id4" id="id17"&gt;プロジェクト作成&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id5" id="id18"&gt;アプリケーション作成&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id6" id="id19"&gt;マイグレーション&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id7" id="id20"&gt;くろのて&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id8" id="id21"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#runserver" id="id22"&gt;runserver&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id9" id="id23"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id10" id="id24"&gt;使用例&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-dbdb" id="id25"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id11" id="id26"&gt;静的ファイルを公開用ディレクトリに収集する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#system-check-framework-django" id="id27"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#python2" id="id28"&gt;使用例 (python2)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/"&gt;Django documentation &amp;gt; django-admin と manage.py&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-admin-manage-py"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id13"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;通常、単体の Django プロジェクトを用いる場合、 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/code&gt; よりも &lt;code class="docutils literal"&gt;manage.py&lt;/code&gt; の方が簡単に利用できる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/code&gt;, &lt;code class="docutils literal"&gt;manage.py&lt;/code&gt;, &lt;code class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; django&lt;/code&gt; はすべて同じことができる ( &lt;code class="docutils literal"&gt;startproject&lt;/code&gt; 後は)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="django-admin-py-django-admin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id14"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;インストールすると使えるようになる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基本的にどこからでも利用できる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django を &lt;code class="docutils literal"&gt;setup.py&lt;/code&gt; ユーティリティを通じてインストールした場合は &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/code&gt; スクリプトはシステムのパスが通っている場所に配置されます。もしパスが通った箇所に存在しなければ、Python インストール先の &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;site-packages/django/bin&lt;/span&gt;&lt;/code&gt; 内で見つける事ができます。そのスクリプトに対して、 &lt;code class="docutils literal"&gt;/usr/local/bin&lt;/code&gt; 等のパスが通っている場所からシンボリックリンクを張ることを検討してください。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新しく Django プロジェクトを作成するときに利用する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django プロジェクトを作成してしまったら &lt;code class="docutils literal"&gt;manage.py&lt;/code&gt; が使えるようになるので出番がなくなる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="manage-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id15"&gt;manage.py&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;startproject&lt;/code&gt; でプロジェクトを作成すると自動で作成される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Django が提供する便利な管理コマンドが使えるほか...&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id16"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id17"&gt;プロジェクト作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_e3cc34b30a93489a809a56568d7a1682-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_e3cc34b30a93489a809a56568d7a1682-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_e3cc34b30a93489a809a56568d7a1682-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django-admin.py startproject &amp;lt;設定ディレクトリ名&amp;gt; &amp;lt;つくる場所&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_e3cc34b30a93489a809a56568d7a1682-4"&gt;&lt;/a&gt;$ django-admin.py startproject config .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id18"&gt;アプリケーション作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3a335433c9784109847d102e962850bf-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_3a335433c9784109847d102e962850bf-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_3a335433c9784109847d102e962850bf-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py startapp &amp;lt;アプリケーション名&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_3a335433c9784109847d102e962850bf-4"&gt;&lt;/a&gt;$ python manage.py startapp account
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;作成後、 settings.py &amp;gt; &lt;code class="docutils literal"&gt;INSTALLED_APPS&lt;/code&gt; に手動でアプリケーションを追加する&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id19"&gt;マイグレーション&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/migrations/"&gt;https://docs.djangoproject.com/en/2.2/topics/migrations/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションファイルを作成する&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py makemigrations [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-3"&gt;&lt;/a&gt;$ python manage.py makemigrations account
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 作成される予定のマイグレーションを表示する。実際のマイグレーションファイルは作成されない。&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-6"&gt;&lt;/a&gt;$ python manage.py makemigrations --dry-run
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションを実行する&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py migrate [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-10"&gt;&lt;/a&gt;$ python manage.py migrate account
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレートするデータベースを指定する。デフォルトは default 。&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-13"&gt;&lt;/a&gt;$ python manage.py migrate --database &amp;lt;DATABASE&amp;gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-14"&gt;&lt;/a&gt;$ python manage.py migrate --database hey
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-16"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 適用済みとして django_migrations にレコードは INSERT されるけれど、データベーススキーマを変更するために実際にSQLを実行することはありません。&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-17"&gt;&lt;/a&gt;$ python manage.py migrate --fake
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-19"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 自動生成されるマイグレーション名を任意の名前に変更したい&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-20"&gt;&lt;/a&gt;$ python3 manage.py makemigrations book --name add_field_to_book
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-22"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションファイルがどこまで migrate されているか確認する&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-23"&gt;&lt;/a&gt;$ python3 manage.py showmigrations
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-25"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# shop アプリケーション関連のテーブルを 0001_initial 適用直後の状態に戻したい&lt;/span&gt;
&lt;a name="rest_code_917c4d43370f4bf489b311f61c3ac338-26"&gt;&lt;/a&gt;$ python3 manage.py migrate shop 0001_initial
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;django_migrations&lt;/code&gt; テーブル: Django がマイグレーション履歴を管理しているテーブル&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id7"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id20"&gt;くろのて&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://note.crohaco.net/2018/django-migration/"&gt;https://note.crohaco.net/2018/django-migration/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://note.crohaco.net/2018/django-migration-case-study/"&gt;https://note.crohaco.net/2018/django-migration-case-study/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id21"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3ed562706df5462a9cfc393e4639815e-1"&gt;&lt;/a&gt;$ python manage.py createsuperuser
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;管理サイト (Django Admin) を使えるユーザー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;superuser (システム管理者)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;is_staff = True&lt;/code&gt; かつ &lt;code class="docutils literal"&gt;is_active = True&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="runserver"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id22"&gt;runserver&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 開発用の Web サーバーを起動する&lt;/span&gt;
&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py runserver [&amp;lt;IPアドレス&amp;gt;:&amp;lt;ポート番号&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-3"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 自動リロード機能を OFF で起動&lt;/span&gt;
&lt;a name="rest_code_c2c26046c72541018edddd2dc4369918-6"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000 --noreload
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;runserver&lt;/code&gt;: Django に同梱されている軽量の Web サーバー&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;開発時 (基本は DEBUG = True) のみに使われることを想定した WebServer&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本番環境では絶対使わない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自動リロード機能&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;静的ファイルの自動配信機能&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;IPアドレスとポート番号を省略すると &lt;code class="docutils literal"&gt;127.0.0.1:8000&lt;/code&gt; で起動する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docker 上で runserver =&amp;gt; ホストOSのブラウザから &lt;code class="docutils literal"&gt;127.0.0.1:8000&lt;/code&gt; に接続できないときは、 &lt;code class="docutils literal"&gt;0.0.0.0:8000&lt;/code&gt; で起動してみる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id23"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-2"&gt;&lt;/a&gt;$ python manage.py shell
&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-4"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings._ python manage.py shell
&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こう&lt;/span&gt;
&lt;a name="rest_code_8adf2dba06524a7f9f1ff8221b8a0890-6"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Django のプロジェクト設定を読み込んだ REPL を起動してくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id24"&gt;使用例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-1"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;20120313&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"copyright"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"credits"&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"license"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InteractiveConsole&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myapp.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target_entry_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;target_entry_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__isnull&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_57506c3a8a7847af837c413b611de21f-12"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-dbdb"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id25"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_e9c5fbc0b00443e59dd7d9d9e70cf8b3-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id26"&gt;静的ファイルを公開用ディレクトリに収集する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a659cd89232841d9aaa85fb1dc82d5fb-1"&gt;&lt;/a&gt;$ python3 manage.py collectstatic
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;runserver には静的ファイル自動配置機能が備わっているので runserver 時には事前実行不要&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="system-check-framework-django"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id27"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/#check"&gt;Django documentation &amp;gt; django-admin と manage.py &amp;gt; Available commands &amp;gt; check&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/checks/#system-check-framework"&gt;Django documentation &amp;gt; System check framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="python2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id28"&gt;使用例 (python2)&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6da77c58fb054378853a795c9f645ded-1"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings.local python -Wd manage.py check
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w"&gt;https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;Python 2.7 から、 DeprecationWarning とその子クラスはデフォルトで無視されます。 -Wd オプションを指定して有効にすることができます。&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/manage/</guid><pubDate>Fri, 04 Oct 2019 15:00:00 GMT</pubDate></item><item><title>pip</title><link>https://32imuf.com/python/pip/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip" id="id5"&gt;pip&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id2" id="id6"&gt;pip のリファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip-install-r" id="id7"&gt;pip install -r&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id3" id="id8"&gt;参考&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip-install-u" id="id9"&gt;pip install -U&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id4" id="id10"&gt;参考&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pipdeptree" id="id11"&gt;pipdeptree&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="pip"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id5"&gt;pip&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id6"&gt;pip のリファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pip.pypa.io/en/stable/reference/"&gt;https://pip.pypa.io/en/stable/reference/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pip-install-r"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id7"&gt;pip install -r&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;requirements.txt に指定したライブラリをインストールする&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_ebae8d9846914af18a093158f108f04f-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install -r requirements.txt
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;すでにインストール済みのものはスキップしてくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;requirements.txt にインストールオプションを書いておくことができる&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_39569418154342969f8fe4bea9e5a429-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;--no-index           # PyPI に問い合わせない (Index サーバーを使わない)&lt;/span&gt;
&lt;a name="rest_code_39569418154342969f8fe4bea9e5a429-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;-f wheelhouse        # ライブラリの取得元を wheelhouse に限定する&lt;/span&gt;
&lt;a name="rest_code_39569418154342969f8fe4bea9e5a429-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;-r run-requires.txt  # インストールしたいライブラリはこっちに書いたから見てね&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;-f(--find-links)&lt;/span&gt; &amp;lt;url&amp;gt;&lt;/code&gt; : 参照したいパッケージがあるページのリンクを指定する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;url に存在するパッケージは、 Index サーバーよりも優先的に使用される&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;url に見つからないパッケージは、 Index サーバーからインストールする&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id8"&gt;参考&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.272 - P.274, P.255&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pip-install-u"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id9"&gt;pip install -U&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最新のバージョンに更新する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_4cd9efdbdf794bbc8dd49c14a8dffef5-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install -U requests
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;pip は、指定されたパッケージがすでにインストール済みの場合、新しいバージョンが公開されていても自動的に最新版に更新したりしない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id10"&gt;参考&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.63&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pipdeptree"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id11"&gt;pipdeptree&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ライブラリの依存関係を調べられる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/naiquevin/pipdeptree"&gt;https://github.com/naiquevin/pipdeptree&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_520c814d36734db7af4d9849df94948c-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install pipdeptree
&lt;a name="rest_code_520c814d36734db7af4d9849df94948c-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pipdeptree -p django
&lt;a name="rest_code_520c814d36734db7af4d9849df94948c-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;Django==1.11.15&lt;/span&gt;
&lt;a name="rest_code_520c814d36734db7af4d9849df94948c-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - pytz [required: Any, installed: 2018.3]&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code console"&gt;&lt;a name="rest_code_8ffcc9ff7f6749c989e6f3c2bceb69b3-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pipdeptree -r -p django
&lt;a name="rest_code_8ffcc9ff7f6749c989e6f3c2bceb69b3-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;django==1.11.15&lt;/span&gt;
&lt;a name="rest_code_8ffcc9ff7f6749c989e6f3c2bceb69b3-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - dj-inmemorystorage==1.4.1 [requires: Django&amp;gt;=1.4]&lt;/span&gt;
&lt;a name="rest_code_8ffcc9ff7f6749c989e6f3c2bceb69b3-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - model-mommy==1.5.1 [requires: django&amp;gt;=1.8.0]&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;オプションの意味&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;-r, --reverse         Shows the dependency tree in the reverse fashion ie.&lt;/span&gt;
&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      the sub-dependencies are listed with the list of&lt;/span&gt;
&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      packages that need them under them.&lt;/span&gt;
&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;-p PACKAGES, --packages PACKAGES&lt;/span&gt;
&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      Comma separated list of select packages to show in the&lt;/span&gt;
&lt;a name="rest_code_e58051b67efd4ef798e925fcc1e56717-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      output. If set, --all will be ignored.&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://32imuf.com/python/pip/</guid><pubDate>Fri, 04 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Django REST framework のメモ</title><link>https://32imuf.com/django-rest-framework/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id2" id="id8"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializers" id="id9"&gt;Serializers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id3" id="id10"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializer-fields-required" id="id11"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#deserialize" id="id12"&gt;deserialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serialize" id="id13"&gt;serialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#modelserializer" id="id14"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id4" id="id15"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id5" id="id16"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api" id="id17"&gt;Browsable API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api-html-form" id="id18"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id6" id="id19"&gt;便利なライブラリ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-rest-framework-json-camelcase" id="id20"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-cors-headers" id="id21"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#cors" id="id22"&gt;CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#requests-responses" id="id23"&gt;Requests/Responses&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-request" id="id24"&gt;DRF の Request&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-response" id="id25"&gt;DRF の Response&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#routers" id="id26"&gt;Routers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#router" id="id27"&gt;Router&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#views" id="id28"&gt;Views&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#api" id="id29"&gt;API ビュー&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#apiview" id="id30"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id8"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-view/"&gt;くろのて &amp;gt; [Django REST Framework] View の使い方をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-serializer/"&gt;くろのて &amp;gt; [Django REST Framework] Serializer の 使い方 をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8"&gt;Django REST Frameworkを使って爆速でAPIを実装する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id9"&gt;Serializers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id10"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;デシリアライズ (入って来るほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0a372d804d8e4f86908bfa2a9dde02fe-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_0a372d804d8e4f86908bfa2a9dde02fe-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライズ (出て行くほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_88d563e3ea7748d7b9ebf69bab2ee529-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_88d563e3ea7748d7b9ebf69bab2ee529-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializer-fields-required"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id11"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/api-guide/fields/#required"&gt;https://www.django-rest-framework.org/api-guide/fields/#required&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;デフォルトは &lt;code class="docutils literal"&gt;required=True&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="deserialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id12"&gt;deserialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=True&lt;/code&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;キーなしは当然エラー&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーがないとだめ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;キーなしは OK&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーあると、 &lt;code class="docutils literal"&gt;None&lt;/code&gt; はエラー (必須エラー)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーある、かつ、 Datetime フィールドとか int フィールドだと &lt;code class="docutils literal"&gt;''&lt;/code&gt; はエラー (たぶん型違いエラー)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id13"&gt;serialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目は渡すが中身が &lt;code class="docutils literal"&gt;None&lt;/code&gt; (or &lt;code class="docutils literal"&gt;''&lt;/code&gt; とか) の場合 =&amp;gt; キーはあるが中身は &lt;code class="docutils literal"&gt;None&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7a937fada6c2477aa70a111ad5a3cd2a-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'updatedAt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt = None で渡した&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目ごと渡さない場合 =&amp;gt; キーが消える&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_39ecd586d396472784f2861d48d1687f-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt を渡さなかったので、キーがない&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modelserializer"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id14"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntrySerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""エントリー"""&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-5"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 除外したいフィールド&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 読み取り専用指定 https://www.django-rest-framework.org/api-guide/serializers/#specifying-read-only-fields&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# AutoField はデフォルトで読み取り専用&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;read_only_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-12"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-13"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-14"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-15"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;extra_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-18"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# モデル上は必須フィールドだけれど、シリアライザでは Not必須にしたい場合は、required を上書きする&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-19"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'display_order'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bd554bb852fc44168d9eb3d9b7c57b36-20"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id15"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id16"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# curl の場合&lt;/span&gt;
&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-2"&gt;&lt;/a&gt;$ curl -H &lt;span class="s1"&gt;'Accept: application/json; indent=4'&lt;/span&gt; -u &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:xxxx/users/
&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# HTTPie の場合&lt;/span&gt;
&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# https://httpie.org/doc&lt;/span&gt;
&lt;a name="rest_code_91f3f91e965340039f770e12de96fd74-6"&gt;&lt;/a&gt;$ http -a &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:8989/users/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="browsable-api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id17"&gt;Browsable API&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;rest_framework.response.Response を返すと Browsable API で見られるようだ!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browsable-api-html-form"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id18"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;viewsets.ModelViewSet&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;継承するだけで出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;APIView&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;Generic view&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;というか、指定しないとどの serializer と対応してるかわからないからどのみち指定することになる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;see: &lt;a class="reference external" href="https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api"&gt;https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id19"&gt;便利なライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="django-rest-framework-json-camelcase"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id20"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/djangorestframework-camel-case/"&gt;https://pypi.org/project/djangorestframework-camel-case/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Camel case JSON support for Django REST framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;render と parser があって、キャメルケース &amp;lt;=&amp;gt; スネークケース 変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-cors-headers"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id21"&gt;django-cors-headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/django-cors-headers/"&gt;https://pypi.org/project/django-cors-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ottoyiu/django-cors-headers"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;A Django App that adds Cross-Origin Resource Sharing (CORS) headers to responses. This allows in-browser requests to your Django application from other origins.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスヘッダーに CORS に必要なヘッダーを足してくれる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;allow の origin からのアクセスだったら、 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt;  ヘッダーには origin が設定されて返る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow じゃない origin からのアクセスだったら &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt; ヘッダー自体が返らない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;そういう実装になっている&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;理由は、「これは OK だよ」と教えちゃうと、悪いひとが偽装したりするから (きっと)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="cors"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id22"&gt;CORS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;オリジン間リソース共有 (Cross-Origin Resource Sharing)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;くわしくはここを見よ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/adamchainz/django-cors-headers#about-cors"&gt;https://github.com/adamchainz/django-cors-headers#about-cors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2019/http-cors-preflight/"&gt;くろのて &amp;gt; CORS とか Preflight とかよくわかんないよな&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="requests-responses"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id23"&gt;Requests/Responses&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="drf-request"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id24"&gt;DRF の Request&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;request.POST&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Only handles form data. Only works for 'POST' method.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;request.data&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Handles arbitrary data. Works for 'POST', 'PUT' and 'PATCH' methods.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;json request をはじめとして他の形式も処理できる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="drf-response"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id25"&gt;DRF の Response&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;return Response(data)&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;Renders to content type as requested by the client.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;RESTフレームワークがレスポンスを正しいコンテンツタイプに変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスが単一のコンテンツタイプに固定されていない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="routers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id26"&gt;Routers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="router"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id27"&gt;Router&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Router で登録できるのは ViewSet だけ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DefaultRouter: Router のルート画面にアクセスしたときに API のリンク一覧を見せてくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id28"&gt;Views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id29"&gt;API ビュー&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RESTフレームワークには、APIビューを書くために使用できる2つのラッパーがあります。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;@api_view&lt;/code&gt;: 関数ベースのビューを扱うためのデコレータ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;APIView&lt;/code&gt;: クラスベースのビューを操作するためのクラス。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apiview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id30"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;特定のモデルに紐付かないような処理は クラスベースで記述するのがおすすめと言えるでしょう。 (くろのて)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;クエリが複雑すぎて queryset じゃ処理しきれないとかで SQLAlchemy で処理した結果を返したい という場合などに APIView を使っています。 (くろのて)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django-rest-framework</category><guid>https://32imuf.com/django-rest-framework/</guid><pubDate>Mon, 15 Jul 2019 15:00:00 GMT</pubDate></item><item><title>Django: Form</title><link>https://32imuf.com/django/form/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id2" id="id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id3" id="id13"&gt;役割&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id4" id="id14"&gt;入力フィールド&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id5" id="id15"&gt;バリデーション&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id6" id="id16"&gt;実行される順番&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#clean" id="id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id7" id="id18"&gt;clean()&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#view" id="id19"&gt;View からの利用&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#template" id="id20"&gt;Template からの利用&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#csrf" id="id21"&gt;CSRF&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform" id="id22"&gt;ModelForm&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id8" id="id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-field" id="id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-p-94" id="id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id9" id="id26"&gt;View からの利用&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id10" id="id27"&gt;こんなのある&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id11" id="id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/api/"&gt;Django documentation &amp;gt; フォーム API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id13"&gt;役割&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;入力データの保持&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;バリデーション&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;OK の場合: &lt;code class="docutils literal"&gt;cleaned_data&lt;/code&gt; (辞書) に入る&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ユーザー入力データを Python 型へ変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;NG の場合: エラーメッセージ (list)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id14"&gt;入力フィールド&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# この変数名が画面の入力フィールドの name 属性になる&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="c1"&gt;# django.forms.fields.Field クラスのサブクラスを指定&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget でどんな部品で画面に表示するか指定できる。 Field ごとにデフォルトもある。&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;render_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# そのほかにも、いろいろ指定できる。指定できるものは Field により異なる。&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_106c28f6883e4de3900b0e975bcbaafd-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id15"&gt;バリデーション&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id16"&gt;実行される順番&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;Form.is_valid()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;Form.フィールド&lt;/code&gt; に定義されたバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;文字種チェックなど&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;フォームクラスに定義した順に実行される&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Form.clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;単項目。フィールド単体のバリデーション。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;妥当性チェック&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;フォームクラスに定義した順に実行される&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;Form.clean()&lt;/code&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;複数項目&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相関チェック&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;データベースとの整合性チェック&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;バリデーション OK の場合、 &lt;code class="docutils literal"&gt;Form.cleaned_data&lt;/code&gt; に検証済みデータがセットされる&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;is_valid()&lt;/code&gt; 未実行の場合は &lt;code class="docutils literal"&gt;cleaned_data&lt;/code&gt; 属性自体が存在しない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="clean"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UsernameField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ``clean_&amp;lt;フィールド名&amp;gt;`` というメソッド名にする&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_username&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-11"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-14"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# バリデーション NG の場合&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-15"&gt;&lt;/a&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-16"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError を raise すると Form 内部の変数にエラーメッセージを追加できる&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-17"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError には↓のように、メッセージを設定できる&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-18"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(min_length)s&lt;/span&gt;&lt;span class="s1"&gt; 文字以上で入力してください'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'min_length'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-19"&gt;&lt;/a&gt;            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-20"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーションOK の場合は、 検証済み値を return することで cleaned_data に値を再セットできる&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ``return 値`` しないと cleaned_data から値が消えてしまう!!&lt;/span&gt;
&lt;a name="rest_code_506a920b20024e1abfbe232c17bb5d22-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id18"&gt;clean()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;ObjectDoesNotExist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーション NG の場合 `ValidationError` を raise することで&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# エラーメッセージを Form 内部の変数に追加できる&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-11"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"正しいユーザー名を入力してください"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_34b9cee16fef4d57812b228a71b38853-13"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# バリデーションOK の場合、 検証済み値を return する必要はない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id19"&gt;View からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;リクエストオブジェクトから入力データを取得して型変換&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;入力データをバリデーション&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Form に request.POST をあげる&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# request から入力データを取り出して =&amp;gt; 型変換して =&amp;gt; バリデーションをする&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-7"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# ヴァリデーションNGの場合、遷移元画面のテンプレートにフォームオブジェクトを 'form' という名前で渡している&lt;/span&gt;
&lt;a name="rest_code_877a152f8a864c1da4f11eea855319f7-8"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'account/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id20"&gt;Template からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;テンプレート内でフォームの入力データやエラーメッセージを表示する&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fed96d46f7434a73abe9096eb9df2164-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# これだけで入力データがセットされた入力フィールドを全て出力できる&lt;/span&gt;
&lt;a name="rest_code_fed96d46f7434a73abe9096eb9df2164-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * フィールドの出力順は、フォームクラスにフィールドを定義した順&lt;/span&gt;
&lt;a name="rest_code_fed96d46f7434a73abe9096eb9df2164-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * 順番を変更したい =&amp;gt; Form に `field_order`&lt;/span&gt;
&lt;a name="rest_code_fed96d46f7434a73abe9096eb9df2164-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# form オブジェクトをイテレートすると form に定義した fields が順番に取り出せるよ! #}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-5"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-6"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# field に関連する error messages は errors 属性にリスト形式で入っている #}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-8"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-9"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# 全体エラーメッセージ #}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# Form.clean() で追加したエラーメッセージは、 form オブジェクトの non_field_errors 属性にリストで入っている #}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-15"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ui red message"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-16"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"list"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-17"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-18"&gt;&lt;/a&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-19"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-20"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-21"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_152dc8f20a39423e9c735046b66383a3-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="csrf"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id21"&gt;CSRF&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;シーサーフ、クロスサイトリクエストフォージェリーと呼ばれるセキュリティ攻撃の一種&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;POST リクエストに CSRF 対策のトークン &lt;code class="docutils literal"&gt;csrfmiddlewaretoken&lt;/code&gt; を加えられる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_3a22cf91fce841868dda6da643aadf10-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# template の form 内にこれを書くよ&lt;/span&gt;
&lt;a name="rest_code_3a22cf91fce841868dda6da643aadf10-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id22"&gt;ModelForm&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;モデルに定義したフィールドのうちのいくつかが画面の入力フィールドと合致する&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;モデルの登録や変更を伴う&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django.forms.models.ModelForm を継承する&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-6"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルクラスを指定&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルのフィールドを指定&lt;/span&gt;
&lt;a name="rest_code_efcfb40d00184737a5167b6cf2d3f706-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform-field"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ModelForm は、モデルの django.db.models.fields.Field のサブクラスを自動判別してそれに対応するフォームの django.forms.fields.Field のサブクラスに変換してくれる&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;対応表は P.92&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;変換されたフォームの Field をそのまま使えない場合は、いろいろカスタマイズできる。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget を TextInput から PasswordInput に変更&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-9"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-12"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# User モデルにはない「確認用パスワード」フィールドを追加&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-18"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-21"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-22"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-23"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-24"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# email に必須を設定&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-25"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-26"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_b7e991e36e814b0884f55c638af1e2f0-27"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'メールアドレス'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="modelform-p-94"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;フィールドのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;文字種などの形式チェック&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;フォームのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;値の妥当性チェック&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/code&gt; =&amp;gt; &lt;code class="docutils literal"&gt;clean()&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;モデルのバリデーション&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ユニーク制約などのデータベースとの整合性チェック&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;モデルの各フィールドに定義された &lt;code class="docutils literal"&gt;unique=True&lt;/code&gt; の制約にしたがって、レコードがユニークになっているか否かチェックしてくれる! ので、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;モデルの登録変更を伴うフォームでは、親クラスの &lt;code class="docutils literal"&gt;clean()&lt;/code&gt; を明示的に呼び出すとよい&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 明示的に親クラスの clean() を呼び出すことで、&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Form を `_validate_unique = True` に更新する&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# そうすると、 validate_unique() が実行されるようになる&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password2'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;password2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ff01832ab8aa45b49b8be59766e29362-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"パスワードと確認用パスワードが合致しません"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id26"&gt;View からの利用&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;登録の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d99a278b06ef4774aca66423218a4e81-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# GET や POST オブジェクトをあげる&lt;/span&gt;
&lt;a name="rest_code_d99a278b06ef4774aca66423218a4e81-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d99a278b06ef4774aca66423218a4e81-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 対象のモデルをデータベースに保存&lt;/span&gt;
&lt;a name="rest_code_d99a278b06ef4774aca66423218a4e81-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;request からもらったものだけでは足りない場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# モデルにセットするけれど、データベースには登録していない&lt;/span&gt;
&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 補完してあげる&lt;/span&gt;
&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_password&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# データベースに登録する&lt;/span&gt;
&lt;a name="rest_code_25c6a2d37d45413da14ffbabacbfedca-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d2efe6db1085465eb78ab3732d97a23f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新したい model オブジェクトを DB から取得&lt;/span&gt;
&lt;a name="rest_code_d2efe6db1085465eb78ab3732d97a23f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2efe6db1085465eb78ab3732d97a23f-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# `instance` キーワード引数にあげる&lt;/span&gt;
&lt;a name="rest_code_d2efe6db1085465eb78ab3732d97a23f-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProfileForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d2efe6db1085465eb78ab3732d97a23f-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新前のデータをベースにして request で上書きしてくれる&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id27"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使い方はよくわかっていない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets"&gt;https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory"&gt;https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/form/</guid><pubDate>Sat, 13 Jul 2019 15:00:00 GMT</pubDate></item><item><title>Django なんでもメモ</title><link>https://32imuf.com/django/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#django" id="id11"&gt;Djangoで静的ファイルとうまくやる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#time-zones" id="id12"&gt;Time zones&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id2" id="id13"&gt;リファレンス&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id3" id="id14"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-aware" id="id15"&gt;naive と aware&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id4" id="id16"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id5" id="id17"&gt;現在日時の取得&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id6" id="id18"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-django" id="id19"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#s3" id="id20"&gt;S3 アップロード&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id7" id="id21"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id8" id="id22"&gt;こんなのある&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#multivaluedict" id="id23"&gt;MultiValueDict&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#querydict" id="id24"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id10" id="id25"&gt;便利さん&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="django"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id11"&gt;Djangoで静的ファイルとうまくやる&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;tell-k さんの Django Con での発表&lt;/p&gt;
&lt;p&gt;すごく良かった&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://tell-k.github.io/djangocongressjp2019/#1"&gt;https://tell-k.github.io/djangocongressjp2019/#1&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="time-zones"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id12"&gt;Time zones&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id13"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/"&gt;https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/utils/#module-django.utils.timezone"&gt;https://docs.djangoproject.com/ja/2.2/ref/utils/#module-django.utils.timezone&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id14"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;settings.py&lt;/code&gt; で設定する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;USE_TZ = True&lt;/code&gt;: タイムゾーンサポートが有効&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;USE_TZ = False&lt;/code&gt;: タイムゾーンサポートが無効 (default)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt; startproject&lt;/code&gt; によって生成されるデフォルトの &lt;code class="docutils literal"&gt;settings.py&lt;/code&gt; ファイル は、 &lt;code class="docutils literal"&gt;USE_TZ = True&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;タイムゾーンのサポートは &lt;code class="docutils literal"&gt;pytz&lt;/code&gt; を使用する。Django をインストールしたときに一緒にインストールされている。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-aware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id15"&gt;naive と aware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;aware: タイムゾーンあり&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Python の &lt;code class="docutils literal"&gt;datetime.datetime&lt;/code&gt; のオブジェクトには、タイムゾーン情報を保持するために使える tzinfo 属性があり、これは &lt;code class="docutils literal"&gt;datetime.tzinfo&lt;/code&gt; のサブクラスのインスタンスで表されます。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;この属性がセットされオフセットを示すとき、datetime オブジェクトは aware となります。それ以外の場合は naive となります。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;naive: タイムゾーンなし&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id16"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;データベース&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;内部的に aware なタイムゾーンオブジェクトを使用して、 UTC で保持&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;フォーム&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;入力された日時をカレントタイムゾーンで変換し、 cleaned_data 内で aware な datetime オブジェクトを返す&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;テンプレート&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;レンダリングする際に aware な datetime オブジェクトをカレントタイムゾーンに変換する&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id17"&gt;現在日時の取得&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;タイムゾーンサポートが有効&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# USE_TZ = True&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# TIME_ZONE = 'Asia/Tokyo'&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;903697&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;152275&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-14"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_aware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;39144&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-17"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-18"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36991&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-20"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_c1ddf9b5aa254ee083bbd561dd96c20c-21"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;258210&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;タイムゾーンサポートが無効&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# USE_TZ = False&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;147660&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;569008&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-13"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_aware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;973598&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-16"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-18"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;console&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-19"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/var/www/usonar/.tox/py37/lib/python3.7/site-packages/django/utils/timezone.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;207&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;localtime&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"localtime() cannot be applied to a naive datetime"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-21"&gt;&lt;/a&gt;&lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;applied&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;naive&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-23"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_efa79c86004a4f929e6034d65531e341-24"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;566142&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id18"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;デフォルトタイムゾーン: &lt;code class="docutils literal"&gt;settings.TIME_ZONE&lt;/code&gt; に定義されたタイムゾーン&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;カレントタイムゾーン: レンダリングに使われるタイムゾーン&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-django"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id19"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_40e655ef8c7d475fbe2cafc6ef2a2b8b-1"&gt;&lt;/a&gt;&lt;span class="ne"&gt;RuntimeWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateTimeField&lt;/span&gt; &lt;span class="n"&gt;ModelName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;naive&lt;/span&gt;
&lt;a name="rest_code_40e655ef8c7d475fbe2cafc6ef2a2b8b-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;zone&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="s3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id20"&gt;S3 アップロード&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;体感だけど、パターン1 のほうが速いような感じがした&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_065e088f3ff5418b9bd3171b95c4dcd5-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# settings.py&lt;/span&gt;
&lt;a name="rest_code_065e088f3ff5418b9bd3171b95c4dcd5-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;DEFAULT_FILE_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'storages.backends.s3boto3.S3Boto3Storage'&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# upload.py&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.files.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ContentFile&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.files.storage&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パターン1&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ContentFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パターン2&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_59abf7eb3d97438bb60dad903fcc475c-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;file_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html"&gt;https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/ref/files/storage/#the-storage-class"&gt;https://docs.djangoproject.com/en/2.2/ref/files/storage/#the-storage-class&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/files/#storage-objects"&gt;https://docs.djangoproject.com/en/2.2/topics/files/#storage-objects&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id21"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;DjangoのDBシェルでローカルDBにつなぐ&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_50cda9ac7e4646389be7cca8a860a42e-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django_migrations テーブルから該当アプリのレコードを削除する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_9063e0ddae0f4cc1b3e33125a0fbb79d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="s1"&gt;'%{application_name}%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_9063e0ddae0f4cc1b3e33125a0fbb79d-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;{該当の&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;該当テーブルやカラムも DROP する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_50fecbedfcff42fb9c5d6838c924892f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_50fecbedfcff42fb9c5d6838c924892f-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;該当のマイグレーションファイルも削除しておく&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;もう一回最初からマイグレーションする&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_2d12f5079d344be18dc26fd5a95e938f-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py makemigrations &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;a name="rest_code_2d12f5079d344be18dc26fd5a95e938f-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py migrate &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id22"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="multivaluedict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id23"&gt;MultiValueDict&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;なにがうれしいのかさっぱりわからない =&amp;gt; &lt;cite&gt;MultiValueDict を継承してる QueryDict とか見るとユースケースはなんとなく想像つくと思います&lt;/cite&gt; と教えて頂いた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/"&gt;https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;A subclass of dictionary customized to handle multiple values for the same key.&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;よく見たら、こういうところが便利だと思った ↓&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.datastructures&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;
&lt;a name="rest_code_fc6daf4ef36b4f1a9a58dad037652a4c-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="querydict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id24"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict&lt;/cite&gt; だそうです。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/request-response/#querydict-objects"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &amp;lt;select multiple&amp;gt;, pass multiple values for the same key.&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id25"&gt;便利さん&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;django に便利コマンド追加してくれるさん &lt;a class="reference external" href="https://django-extensions.readthedocs.io/en/latest/"&gt;django-extensions&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://djangopackages.org/"&gt;https://djangopackages.org/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://django.awesome-programming.com/"&gt;https://django.awesome-programming.com/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-allauth: 認証系機能の拡充&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;メールアドレスベースのログイン&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ログインまわり&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google, Twitter, GitHub などのソーシャルアカウントを利用したサードパーティ認証機能&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-tables2: テーブル表示とページネーション&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-environ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;django-debug-toolbar: GUI によるデバッグ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/note/</guid><pubDate>Mon, 17 Jun 2019 15:00:00 GMT</pubDate></item></channel></rss>