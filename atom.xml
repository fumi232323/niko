<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて</title><link>https://32imuf.com/</link><description>のてのて</description><atom:link href="https://32imuf.com/atom.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Thu, 07 Nov 2019 14:01:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Django: Middleware</title><link>https://32imuf.com/django/middleware/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id2" id="id8"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id3" id="id9"&gt;概要&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id4" id="id10"&gt;主なミドルウェア&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#securitymiddleware" id="id11"&gt;SecurityMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#sessionmiddleware" id="id12"&gt;SessionMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#commonmiddleware" id="id13"&gt;CommonMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#csrfviewmiddleware" id="id14"&gt;CsrfViewMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#authenticationmiddleware" id="id15"&gt;AuthenticationMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#messagemiddleware" id="id16"&gt;MessageMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#xframeoptionsmiddleware" id="id17"&gt;XFrameOptionsMiddleware&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/middleware/#id6" id="id18"&gt;ミドルウェアの書き方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id8"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/middleware/"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/middleware/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id9"&gt;概要&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Django の主要な機能 (モデル・テンプレート・ビュー) と Web サーバー/アプリケーションの中間に位置&lt;/li&gt;
&lt;li&gt;ビューを出入りするすべてのリクエストとレスポンスをフックできる&lt;/li&gt;
&lt;li&gt;さまざまなミドルウェアが組み込みで用意されている&lt;/li&gt;
&lt;li&gt;自作して追加することも可能&lt;/li&gt;
&lt;li&gt;必要なものを settings に加えると利用できる&lt;/li&gt;
&lt;li&gt;サイト全体にリクエストやレスポンスを使用して一律に何らかの機能を加えたい場合などに利用する&lt;/li&gt;
&lt;li&gt;settings の &lt;tt class="docutils literal"&gt;MIDDLEWARE&lt;/tt&gt; にリスト形式で列挙&lt;/li&gt;
&lt;li&gt;書いた順番に実行される。順番大事。&lt;/li&gt;
&lt;li&gt;書いたミドルウェアはリクエストの度に全部実行されるので、あまり重い処理は書かないようにすること。&lt;ul&gt;
&lt;li&gt;できるかぎりデータベースアクセスしない&lt;/li&gt;
&lt;li&gt;必要なら &lt;tt class="docutils literal"&gt;django.utils.functional.SimpleLazyObject&lt;/tt&gt; を使うようにする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id10"&gt;主なミドルウェア&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;以下は、 Django プロジェクト作成時にデフォルトで設定される&lt;/li&gt;
&lt;li&gt;デフォルトで設定されるミドルウェアはとりあえずそのまま使うのが吉とのこと&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="securitymiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id11"&gt;SecurityMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;リクエスト/レスポンスのセキュリティ強化&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;HTTP =&amp;gt; HTTPS リダイレクト (デフォルトはOFF)&lt;/p&gt;
&lt;pre class="code Python"&gt;&lt;a name="rest_code_9d0193c1b7cc4d34ae4fe9e932497aad-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;SECURE_SSL_REDIRECT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;入れておいて損はないので何も考えずに入れておくとよい&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="sessionmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id12"&gt;SessionMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;セッションを有効にする&lt;/li&gt;
&lt;li&gt;有効にする場合は、 &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt; に &lt;tt class="docutils literal"&gt;django.contrib.sessions&lt;/tt&gt; を入れるのを忘れずに&lt;/li&gt;
&lt;li&gt;使い方はここを見よ: &lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/sessions/"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/sessions/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;迷ったら有効化しておく&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="commonmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id13"&gt;CommonMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ユーザーエージェントによるアクセス制限&lt;/li&gt;
&lt;li&gt;URL リライティング&lt;/li&gt;
&lt;li&gt;公式でも使用を強くお勧め&lt;/li&gt;
&lt;li&gt;必須では&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;APPEND_SLASH&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;PREPEND_WWW&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="csrfviewmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id14"&gt;CsrfViewMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CSRF トークン検証&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="authenticationmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id15"&gt;AuthenticationMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;リクエストの度に、リクエストオブジェクトの &lt;tt class="docutils literal"&gt;user&lt;/tt&gt; 属性にユーザー情報をセットしてくれる&lt;/li&gt;
&lt;li&gt;ログイン済みの場合: セッション.Userインスタンス&lt;/li&gt;
&lt;li&gt;未ログインの場合: AnonymousUser (匿名ユーザー)&lt;/li&gt;
&lt;li&gt;セッションが必要なので、 SessionMiddleware より後ろに書く&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="messagemiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id16"&gt;MessageMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;フラッシュメッセージ&lt;/li&gt;
&lt;li&gt;メッセージフレームワーク&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt; P.103&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="xframeoptionsmiddleware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id17"&gt;XFrameOptionsMiddleware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;クリックジャッキング対策&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;X-Frame-Options&lt;/span&gt;&lt;/tt&gt; ヘッダーを全てのレスポンスに設定&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/middleware/#id18"&gt;ミドルウェアの書き方&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ここを見よ&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/http/middleware/#writing-your-own-middleware"&gt;https://docs.djangoproject.com/ja/2.2/topics/http/middleware/#writing-your-own-middleware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt; P.101&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/middleware/</guid><pubDate>Sun, 13 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Pycharm の Tox support を使う</title><link>https://32imuf.com/pycharm/tox-support/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id2" id="id6"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id3" id="id7"&gt;設定&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id4" id="id8"&gt;良いところ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#id5" id="id9"&gt;イマイチなところ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/pycharm/tox-support/#pytest" id="id10"&gt;注意: pytest のバージョンは以下なら動く&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id6"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://pleiades.io/help/pycharm/tox-support.html"&gt;https://pleiades.io/help/pycharm/tox-support.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://stackoverflow.com/questions/19236745/pycharm-pytestrunner-pluginmanager-unexpected-keyword-argument"&gt;https://stackoverflow.com/questions/19236745/pycharm-pytestrunner-pluginmanager-unexpected-keyword-argument&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id7"&gt;設定&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Run/Debug Configurations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;+&lt;/tt&gt; ボタン&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Templates から &lt;tt class="docutils literal"&gt;tox&lt;/tt&gt; を選ぶ&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;必要事項を記入して &lt;tt class="docutils literal"&gt;Apply&lt;/tt&gt; =&amp;gt; &lt;tt class="docutils literal"&gt;OK&lt;/tt&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Name: 好きな名前&lt;/li&gt;
&lt;li&gt;Argument: tox に渡す引数&lt;ul&gt;
&lt;li&gt;例) &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--&lt;/span&gt; &lt;span class="pre"&gt;--reuse-db&lt;/span&gt; &lt;span class="pre"&gt;tests/test_views/test_entries.py::TestEntries::test_it&lt;/span&gt; &lt;span class="pre"&gt;-x&lt;/span&gt; &lt;span class="pre"&gt;-vv&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run only environment: 実行したい環境&lt;ul&gt;
&lt;li&gt;例) py37, flake8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python interpreter: Project Innterpreter を選択&lt;ul&gt;
&lt;li&gt;例) &lt;tt class="docutils literal"&gt;Remote Python 3.7.3 Docker Compose (app at &lt;span class="pre"&gt;[/Users/fumi23/docker-work/fufufu/docker-compose.yml])&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Workinng directory: なしでもローカルpathでもリモートpathでも動いた&lt;/li&gt;
&lt;li&gt;Path mapping: 設定してもしなくても動いた =&amp;gt; 設定したほうが良さそう&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/pycharm/tox-support/RunDebugConfigTox.png" src="https://32imuf.com/images/pycharm/tox-support/RunDebugConfigTox.png"&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id8"&gt;良いところ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;各テストケースのログにパッとアクセスできる&lt;ul&gt;
&lt;li&gt;テストメソッド名を押すと、横にそのテストケースだけのログが出る&lt;/li&gt;
&lt;li&gt;たくさんスクロールしなくて良い&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;失敗したテストケースだけサクッと再実行できる&lt;ul&gt;
&lt;li&gt;左側の▶︎丸びっくりボタンを押すだけ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;/p&gt;&lt;div class="figure"&gt;
&lt;img alt="/images/pycharm/tox-support/Run.png" src="https://32imuf.com/images/pycharm/tox-support/Run.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id9"&gt;イマイチなところ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;BreakPoint で止まらない (いろいろ試したけれど解消できなかった)&lt;/li&gt;
&lt;li&gt;ほかにもできないひとがいるみたい? &lt;a class="reference external" href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000140764-Pycharm-debugger-doesn-t-stop-at-any-breakpoint"&gt;https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000140764-Pycharm-debugger-doesn-t-stop-at-any-breakpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;たぶん、本来はできるんだと思う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="pytest"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/pycharm/tox-support/#id10"&gt;注意: pytest のバージョンは以下なら動く&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;pytest 5.0.1 (2019-07-04)&lt;ul&gt;
&lt;li&gt;これより新しいバージョンは動かなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;PyCharm 2019.2.3 (Professional Edition)
Build #PY-192.6817.19, built on September 25, 2019&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>pycharm</category><guid>https://32imuf.com/pycharm/tox-support/</guid><pubDate>Sun, 13 Oct 2019 15:00:00 GMT</pubDate></item><item><title>SQL アンチパターンまとめ</title><link>https://32imuf.com/sql/sql-antipatterns/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;書籍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.oreilly.co.jp/books/9784873115894/"&gt;SQL アンチパターン SQL Antipatterns (2013年, オライリー・ジャパン)&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bill Karwin 著&lt;/li&gt;
&lt;li&gt;和田 卓人, 和田 省二 監訳&lt;/li&gt;
&lt;li&gt;小島 修 訳&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="i"&gt;
&lt;h2&gt;I部 データベース論理設計のアンチパターン&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;1章 ジェイウォーク (信号無視)&lt;/h3&gt;
&lt;p&gt;１つの製品に複数ユーザーを連絡先として登録できるようにしたい&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;複数の値を持つ属性を格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;カンマ区切りフォーマットのリストを格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;交差テーブルを作成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;ひとつひとつの値は個別の行と列に格納しましょう&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;多対多は交差テーブルだな&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;2章 ナイーブツリー (素朴な木)&lt;/h3&gt;
&lt;p&gt;スレッド形式のコメント欄&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;階層構造を格納し、クエリを実行する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;常に親のみに依存する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;代替ツリーモデルを使用する (各設計の比較はP.30を見よ)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;経路列挙 (Path Enumeration)&lt;/li&gt;
&lt;li&gt;入れ子集合 (Nested Set)&lt;/li&gt;
&lt;li&gt;閉包テーブル (Closure Table)&lt;/li&gt;
&lt;li&gt;再帰クエリ ※&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;階層構造はエントリと関連 (リレーションシップ) から成り立ちます。これを念頭に、行う作業に合わせて最適な設計手法を選択しましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;再帰クエリめちゃくちゃ便利だな&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- ※ 再帰クエリの例&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="nf"&gt;CommentTree&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="no"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-7"&gt;&lt;/a&gt;  &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;MySQL 8.0 ~ , PostgreSQL 8.4 ~ ... はサポートしている&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id-id"&gt;
&lt;h3&gt;3章 ID リクワイアド (とりあえずID)&lt;/h3&gt;
&lt;p&gt;「行の重複を避けるにはどうすればよいか」と質問された&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;主キーの規約を確立する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;すべてのテーブルに「id」列を用いる&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;状況に応じて適切に調整する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;わかりやすい列名にしよう&lt;/li&gt;
&lt;li&gt;規約に縛られない&lt;/li&gt;
&lt;li&gt;自然キーと複合キーの活用&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;規約は、役立つと思える場合のみ従いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;ずっと気になっていたので腹落ち&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;4章 キーレスエントリー (外部キー嫌い)&lt;/h3&gt;
&lt;p&gt;研究所の設備がダブルブッキングされた&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;データベースのアーキテクチャを単純化する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;外部キー制約を使用しない&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;外部キー制約を宣言する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;複数テーブルの変更をサポートする (カスケード更新)&lt;/li&gt;
&lt;li&gt;オーバーヘッド、……にはなりません&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;データベースでのミスの発生を未然に防ぐために、外部キー制約を用いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;やっぱりつけたほうが良かったんだな!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="eav"&gt;
&lt;h3&gt;5章 EAV (エンティティ・アトリビュート・バリュー)&lt;/h3&gt;
&lt;p&gt;Issue と Bug と FeatureRequest (機能要望) のはなし&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;可変属性をサポートする&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;汎用的な属性テーブルを使用する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;サブタイプのモデリングを行う&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;シングルテーブル継承 (Single Table Inheritance)&lt;ul&gt;
&lt;li&gt;Bug と FeatureRequest を同じテーブル (Issues) に入れる&lt;/li&gt;
&lt;li&gt;issue_type 列を持つ&lt;/li&gt;
&lt;li&gt;Bug のみが使う列/FeatureRequest のみが使う列、がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;具象テーブル継承 (Concrete Table Inheritance)&lt;ul&gt;
&lt;li&gt;Bugs テーブルと FeatureRequests テーブルを作る (サブタイプごとにテーブル作成)&lt;/li&gt;
&lt;li&gt;issue_type 列不要&lt;/li&gt;
&lt;li&gt;サブタイプに存在しない属性列を格納せずにすむ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クラステーブル継承 (Class Table Inheritance)&lt;ul&gt;
&lt;li&gt;サブタイプに共通する属性を含む基底型のテーブル (Issues) を１つ作る&lt;/li&gt;
&lt;li&gt;サブタイプごとに追加のテーブルを作る (Bugs/FeatureRequests)&lt;ul&gt;
&lt;li&gt;Issues.id を外部キーに持つ&lt;/li&gt;
&lt;li&gt;それぞれに固有の属性のみを持つ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;半構造化データ (シリアライズLOB: Serialized LOB)&lt;ul&gt;
&lt;li&gt;issue_type 列を持つ&lt;/li&gt;
&lt;li&gt;サブタイプに固有の属性は LOB列に持つ&lt;/li&gt;
&lt;li&gt;サブタイプの数が多い、頻繁に新しい属性を追加しなければならない、場合など&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;メタデータは、メタデータのために用いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;ありそう。ある。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;6章 ポリモーフィック関連&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ユーザーがバグについてのコメントを書き込める =&amp;gt; Bugs と Comments が １対多&lt;/li&gt;
&lt;li&gt;ユーザーが機能要望についてのコメントを書き込める =&amp;gt; FeatureRequests と Comments が １対多&lt;/li&gt;
&lt;li&gt;バグについてのコメントも、機能要望についてのコメントも、同じ Comments テーブルに格納したい&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;複数の親テーブルを参照する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;二重目的の外部キーを使用する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;関連 (リレーションシップ) を単純化する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;参照を逆にする&lt;/li&gt;
&lt;li&gt;交差テーブルの作成 (Bugs/FeatureRequests が具象テーブル継承)&lt;/li&gt;
&lt;li&gt;共通の親テーブルの作成 (Bugs/FeatureRequests がクラステーブル継承)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;テーブル間の関連 (リレーションシップ) には、参照元テーブルと参照先テーブルが常にそれぞれ１つしかないことを忘れないようにしましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;5章と関連してる。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;7章 マルチカラムアトリビュート (複数列属性)&lt;/h3&gt;
&lt;p&gt;バグデータベースに、バグを分類するための「タグ付機能」を追加したい&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;複数の値を持つ属性を格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;複数の列を定義する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;従属テーブル (Tags テーブル) を作成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;同じ意味を持つ値は、１つの列に格納するようにしましょう。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;すんなり。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>sql</category><guid>https://32imuf.com/sql/sql-antipatterns/</guid><pubDate>Sat, 05 Oct 2019 15:00:00 GMT</pubDate></item><item><title>wheel</title><link>https://32imuf.com/python/wheel/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#wheel" id="id5"&gt;wheel&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id2" id="id6"&gt;インストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id3" id="id7"&gt;wheel の作り方&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#pypi-sdist-wheel" id="id8"&gt;PyPI で sdist で配布されているパッケージを wheel 形式のパッケージに変換してローカルに保存する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#setuptools-wheel" id="id9"&gt;setuptools ベースのプロジェクトから wheel を作成する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/wheel/#id4" id="id10"&gt;ガイド/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="wheel"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id5"&gt;wheel&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;wheel: ビルド済みの C 拡張や Python パッケージのみを含み、ファイルを展開するだけでインストールが完了する&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Python の公式バイナリパッケージは wheel 形式 (PEP491)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;pip コマンドは、 wheel 形式を優先して利用する&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;pip は、 PyPI にアップロードされている wheel 形式のパッケージを直接インストールできる&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_4815a774339b49ec836fc6c324da3d2e-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install &lt;span class="nv"&gt;django&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.11.15
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://pythonwheels.com/"&gt;https://pythonwheels.com/&lt;/a&gt; : 定番パッケージの wheel 配布状況を確認できる&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;sdist : パッケージのソース、メタデータ、ビルド方法などをアーカイブしたソース配布形式&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;インストールのたびに各環境でアーカイブに同梱される setup スクリプトを読み込み、 C 拡張があればビルドし、必要があれば
Python パッケージを確認して、 site-packages へコピーする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id6"&gt;インストール&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6d907800ef464ddbbed512d95d15a1d8-1"&gt;&lt;/a&gt;$ pip install wheel
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id7"&gt;wheel の作り方&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="pypi-sdist-wheel"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id8"&gt;PyPI で sdist で配布されているパッケージを wheel 形式のパッケージに変換してローカルに保存する&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_30775429739347a38308d0ef4f025e86-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# wheelhouse ディレクトリに wheel 形式パッケージを作成する&lt;/span&gt;
&lt;a name="rest_code_30775429739347a38308d0ef4f025e86-2"&gt;&lt;/a&gt;$ pip wheel markupsafe -w wheelhouse
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;wheelhouse&lt;/tt&gt; ディレクトリがなくても、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-w&lt;/span&gt; wheelhouse&lt;/tt&gt; を指定すると勝手に作ってくれる&lt;/li&gt;
&lt;li&gt;wheel 形式のパッケージの保存ディレクトリ名は何でもよいが、慣習的に &lt;tt class="docutils literal"&gt;wheelhouse&lt;/tt&gt; という名前を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="setuptools-wheel"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id9"&gt;setuptools ベースのプロジェクトから wheel を作成する&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_088998204ebf49579ca022e9af76d067-1"&gt;&lt;/a&gt;$ python setup.py bdist_wheel
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Python のパッケージングには setup スクリプトが必要 (PyPro3 P.66)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;setup.py というファイル名で用意する (Python の仕様で決められている)&lt;/li&gt;
&lt;li&gt;setup.py には Python パッケージ情報 (メタデータ: パッケージ名やバージョン, 依存パッケージなど) を書く&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;setuptools は pip が使える環境には必ずインストールされているライブラリ&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;一般的には setuptools が提供する機能拡張された setup 関数を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 詳しくは PyPro P.70 を見よ&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;setuptools&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"hey"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'1.2.3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;packages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;find_packages&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;include_package_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;install_requires&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Django&amp;gt;=2.1'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_0cdfb41a0985445abe4e8be53ae16cf5-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/wheel/#id10"&gt;ガイド/リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python プロフェッショナルプログラミング 第3版 P.66, P.70&lt;/li&gt;
&lt;li&gt;Python プロフェッショナルプログラミング 第3版 P.256 - P.259&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://wheel.readthedocs.io/en/latest/user_guide.html"&gt;https://wheel.readthedocs.io/en/latest/user_guide.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://setuptools.readthedocs.io/en/latest/"&gt;https://setuptools.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://32imuf.com/python/wheel/</guid><pubDate>Sat, 05 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Django: django-admin.py, manage.py</title><link>https://32imuf.com/django/manage/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id2" id="id11"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-manage-py" id="id12"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-py-django-admin" id="id13"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#manage-py" id="id14"&gt;manage.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id3" id="id15"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id4" id="id16"&gt;プロジェクト作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id5" id="id17"&gt;アプリケーション作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id6" id="id18"&gt;マイグレーション&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id7" id="id19"&gt;くろのて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id8" id="id20"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#runserver" id="id21"&gt;runserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id9" id="id22"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id10" id="id23"&gt;使用例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-dbdb" id="id24"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#system-check-framework-django" id="id25"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#python2" id="id26"&gt;使用例 (python2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id11"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/"&gt;Django documentation &amp;gt; django-admin と manage.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-admin-manage-py"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id12"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;通常、単体の Django プロジェクトを用いる場合、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; よりも &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; の方が簡単に利用できる&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; django&lt;/tt&gt; はすべて同じことができる ( &lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; 後は)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="django-admin-py-django-admin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id13"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;インストールすると使えるようになる&lt;/li&gt;
&lt;li&gt;基本的にどこからでも利用できる&lt;/li&gt;
&lt;li&gt;Django を &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; ユーティリティを通じてインストールした場合は &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; スクリプトはシステムのパスが通っている場所に配置されます。もしパスが通った箇所に存在しなければ、Python インストール先の &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;site-packages/django/bin&lt;/span&gt;&lt;/tt&gt; 内で見つける事ができます。そのスクリプトに対して、 &lt;tt class="docutils literal"&gt;/usr/local/bin&lt;/tt&gt; 等のパスが通っている場所からシンボリックリンクを張ることを検討してください。&lt;/li&gt;
&lt;li&gt;新しく Django プロジェクトを作成するときに利用する&lt;/li&gt;
&lt;li&gt;Django プロジェクトを作成してしまったら &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; が使えるようになるので出番がなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="manage-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id14"&gt;manage.py&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; でプロジェクトを作成すると自動で作成される&lt;/li&gt;
&lt;li&gt;Django が提供する便利な管理コマンドが使えるほか...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id15"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id16"&gt;プロジェクト作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_aad893d0142d49c08bb542f9ce61a77f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_aad893d0142d49c08bb542f9ce61a77f-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_aad893d0142d49c08bb542f9ce61a77f-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django-admin.py startproject &amp;lt;設定ディレクトリ名&amp;gt; &amp;lt;つくる場所&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_aad893d0142d49c08bb542f9ce61a77f-4"&gt;&lt;/a&gt;$ django-admin.py startproject config .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id17"&gt;アプリケーション作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_807996b4b9974336aab983ec2baf641b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_807996b4b9974336aab983ec2baf641b-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_807996b4b9974336aab983ec2baf641b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py startapp &amp;lt;アプリケーション名&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_807996b4b9974336aab983ec2baf641b-4"&gt;&lt;/a&gt;$ python manage.py startapp account
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;作成後、 settings.py &amp;gt; &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt; に手動でアプリケーションを追加する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id18"&gt;マイグレーション&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションファイルを作成する&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py makemigrations [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-3"&gt;&lt;/a&gt;$ python manage.py makemigrations account
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 作成される予定のマイグレーションを表示する。実際のマイグレーションファイルは作成されない。&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-6"&gt;&lt;/a&gt;$ python manage.py makemigrations --dry-run
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションを実行する&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py migrate [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-10"&gt;&lt;/a&gt;$ python manage.py migrate account
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレートするデータベースを指定する。デフォルトは default 。&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-13"&gt;&lt;/a&gt;$ python manage.py migrate --database &amp;lt;DATABASE&amp;gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-14"&gt;&lt;/a&gt;$ python manage.py migrate --database hey
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-16"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 適用済みとして django_migrations にレコードは INSERT されるけれど、データベーススキーマを変更するために実際にSQLを実行することはありません。&lt;/span&gt;
&lt;a name="rest_code_529615a02ccd4628874f7c985ac4f08a-17"&gt;&lt;/a&gt;$ python manage.py migrate --fake
&lt;/pre&gt;&lt;div class="section" id="id7"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id19"&gt;くろのて&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://note.crohaco.net/2018/django-migration/"&gt;https://note.crohaco.net/2018/django-migration/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://note.crohaco.net/2018/django-migration-case-study/"&gt;https://note.crohaco.net/2018/django-migration-case-study/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id20"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_231fe4e7754f4564a169204bd202c8df-1"&gt;&lt;/a&gt;$ python manage.py createsuperuser
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="runserver"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id21"&gt;runserver&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d186b5d9b6f7486984b9b1f5e1cad123-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 開発用の Web サーバーを起動する&lt;/span&gt;
&lt;a name="rest_code_d186b5d9b6f7486984b9b1f5e1cad123-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py runserver [&amp;lt;IPアドレス&amp;gt;:&amp;lt;ポート番号&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_d186b5d9b6f7486984b9b1f5e1cad123-3"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;IPアドレスとポート番号を省略すると &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; で起動する&lt;/li&gt;
&lt;li&gt;Docker 上で runserver =&amp;gt; ホストOSのブラウザから &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; に接続できないときは、 &lt;tt class="docutils literal"&gt;0.0.0.0:8000&lt;/tt&gt; で起動してみる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id22"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-2"&gt;&lt;/a&gt;$ python manage.py shell
&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-4"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings._ python manage.py shell
&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こう&lt;/span&gt;
&lt;a name="rest_code_1ed7df47b2f24bb5b8299986b7598f0d-6"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;/pre&gt;&lt;div class="section" id="id10"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id23"&gt;使用例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-1"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;20120313&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"copyright"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"credits"&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"license"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InteractiveConsole&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myapp.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target_entry_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;target_entry_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__isnull&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0008ed6c680848568e4b9bea443538e8-12"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-dbdb"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id24"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_7a05ce4c9c014ccfa0e2987723c57f52-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="system-check-framework-django"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id25"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/#check"&gt;Django documentation &amp;gt; django-admin と manage.py &amp;gt; Available commands &amp;gt; check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/checks/#system-check-framework"&gt;Django documentation &amp;gt; System check framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="python2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id26"&gt;使用例 (python2)&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_01201451849a49da99beaf6612f342b1-1"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings.local python -Wd manage.py check
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w"&gt;https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Python 2.7 から、 DeprecationWarning とその子クラスはデフォルトで無視されます。 -Wd オプションを指定して有効にすることができます。
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/manage/</guid><pubDate>Fri, 04 Oct 2019 15:00:00 GMT</pubDate></item><item><title>pip</title><link>https://32imuf.com/python/pip/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;&lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip" id="id5"&gt;pip&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id2" id="id6"&gt;pip のリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip-install-r" id="id7"&gt;pip install -r&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id3" id="id8"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pip-install-u" id="id9"&gt;pip install -U&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#id4" id="id10"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/python/pip/#pipdeptree" id="id11"&gt;pipdeptree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="pip"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id5"&gt;pip&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id6"&gt;pip のリファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pip.pypa.io/en/stable/reference/"&gt;https://pip.pypa.io/en/stable/reference/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pip-install-r"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id7"&gt;pip install -r&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;requirements.txt に指定したライブラリをインストールする&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_aa11ab0942bf4a9cbb11998fba9cd68d-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install -r requirements.txt
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;すでにインストール済みのものはスキップしてくれる&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;requirements.txt にインストールオプションを書いておくことができる&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_94e72cf091c643408ad6698a4226ec78-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;--no-index           # PyPI に問い合わせない (Index サーバーを使わない)&lt;/span&gt;
&lt;a name="rest_code_94e72cf091c643408ad6698a4226ec78-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;-f wheelhouse        # ライブラリの取得元を wheelhouse に限定する&lt;/span&gt;
&lt;a name="rest_code_94e72cf091c643408ad6698a4226ec78-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;-r run-requires.txt  # インストールしたいライブラリはこっちに書いたから見てね&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-f(--find-links)&lt;/span&gt; &amp;lt;url&amp;gt;&lt;/tt&gt; : 参照したいパッケージがあるページのリンクを指定する。&lt;ul&gt;
&lt;li&gt;url に存在するパッケージは、 Index サーバーよりも優先的に使用される&lt;/li&gt;
&lt;li&gt;url に見つからないパッケージは、 Index サーバーからインストールする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id8"&gt;参考&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.272 - P.274, P.255&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pip-install-u"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id9"&gt;pip install -U&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;最新のバージョンに更新する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_b9275ca700754afca2191a78b5477e04-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install -U requests
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;pip は、指定されたパッケージがすでにインストール済みの場合、新しいバージョンが公開されていても自動的に最新版に更新したりしない&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id10"&gt;参考&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Python プロフェッショナルプログラミング 第3版 P.63&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pipdeptree"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/python/pip/#id11"&gt;pipdeptree&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;ライブラリの依存関係を調べられる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/naiquevin/pipdeptree"&gt;https://github.com/naiquevin/pipdeptree&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_4039a6fc47cc415589a09b2f95d3017d-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pip install pipdeptree
&lt;a name="rest_code_4039a6fc47cc415589a09b2f95d3017d-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pipdeptree -p django
&lt;a name="rest_code_4039a6fc47cc415589a09b2f95d3017d-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;Django==1.11.15&lt;/span&gt;
&lt;a name="rest_code_4039a6fc47cc415589a09b2f95d3017d-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - pytz [required: Any, installed: 2018.3]&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code console"&gt;&lt;a name="rest_code_0b6f8659ddb54e9db206a1ac6cd9bb01-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; pipdeptree -r -p django
&lt;a name="rest_code_0b6f8659ddb54e9db206a1ac6cd9bb01-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;django==1.11.15&lt;/span&gt;
&lt;a name="rest_code_0b6f8659ddb54e9db206a1ac6cd9bb01-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - dj-inmemorystorage==1.4.1 [requires: Django&amp;gt;=1.4]&lt;/span&gt;
&lt;a name="rest_code_0b6f8659ddb54e9db206a1ac6cd9bb01-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;  - model-mommy==1.5.1 [requires: django&amp;gt;=1.8.0]&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;オプションの意味&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_e399930b499542db83e102d260611c3d-1"&gt;&lt;/a&gt;&lt;span class="go"&gt;-r, --reverse         Shows the dependency tree in the reverse fashion ie.&lt;/span&gt;
&lt;a name="rest_code_e399930b499542db83e102d260611c3d-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      the sub-dependencies are listed with the list of&lt;/span&gt;
&lt;a name="rest_code_e399930b499542db83e102d260611c3d-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      packages that need them under them.&lt;/span&gt;
&lt;a name="rest_code_e399930b499542db83e102d260611c3d-4"&gt;&lt;/a&gt;&lt;span class="go"&gt;-p PACKAGES, --packages PACKAGES&lt;/span&gt;
&lt;a name="rest_code_e399930b499542db83e102d260611c3d-5"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      Comma separated list of select packages to show in the&lt;/span&gt;
&lt;a name="rest_code_e399930b499542db83e102d260611c3d-6"&gt;&lt;/a&gt;&lt;span class="go"&gt;                      output. If set, --all will be ignored.&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://32imuf.com/python/pip/</guid><pubDate>Fri, 04 Oct 2019 15:00:00 GMT</pubDate></item><item><title>Django REST framework のメモ</title><link>https://32imuf.com/django-rest-framework/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id2" id="id8"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializers" id="id9"&gt;Serializers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id3" id="id10"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializer-fields-required" id="id11"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#deserialize" id="id12"&gt;deserialize 時&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serialize" id="id13"&gt;serialize 時&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#modelserializer" id="id14"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id4" id="id15"&gt;ちょっと動かしたい&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id5" id="id16"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api" id="id17"&gt;Browsable API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api-html-form" id="id18"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id6" id="id19"&gt;便利なライブラリ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-rest-framework-json-camelcase" id="id20"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-cors-headers" id="id21"&gt;django-cors-headers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#cors" id="id22"&gt;CORS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#requests-responses" id="id23"&gt;Requests/Responses&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-request" id="id24"&gt;DRF の Request&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-response" id="id25"&gt;DRF の Response&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#routers" id="id26"&gt;Routers&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#router" id="id27"&gt;Router&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#views" id="id28"&gt;Views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#api" id="id29"&gt;API ビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#apiview" id="id30"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id8"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-view/"&gt;くろのて &amp;gt; [Django REST Framework] View の使い方をまとめてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-serializer/"&gt;くろのて &amp;gt; [Django REST Framework] Serializer の 使い方 をまとめてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8"&gt;Django REST Frameworkを使って爆速でAPIを実装する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id9"&gt;Serializers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id10"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;デシリアライズ (入って来るほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_30c2a62a5f8441f5b29ff027ae32d08d-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_30c2a62a5f8441f5b29ff027ae32d08d-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;シリアライズ (出て行くほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_629ebedc236646678695c0396fa2a6e0-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_629ebedc236646678695c0396fa2a6e0-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializer-fields-required"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id11"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/api-guide/fields/#required"&gt;https://www.django-rest-framework.org/api-guide/fields/#required&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;デフォルトは &lt;tt class="docutils literal"&gt;required=True&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="deserialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id12"&gt;deserialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;required=True&lt;/tt&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;キーなしは当然エラー&lt;/li&gt;
&lt;li&gt;キーがないとだめ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;required=False&lt;/tt&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;キーなしは OK&lt;/li&gt;
&lt;li&gt;キーあると、 &lt;tt class="docutils literal"&gt;None&lt;/tt&gt; はエラー (必須エラー)&lt;/li&gt;
&lt;li&gt;キーある、かつ、 Datetime フィールドとか int フィールドだと &lt;tt class="docutils literal"&gt;''&lt;/tt&gt; はエラー (たぶん型違いエラー)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id13"&gt;serialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;required=False&lt;/tt&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;シリアライザに項目は渡すが中身が &lt;tt class="docutils literal"&gt;None&lt;/tt&gt; (or &lt;tt class="docutils literal"&gt;''&lt;/tt&gt; とか) の場合 =&amp;gt; キーはあるが中身は &lt;tt class="docutils literal"&gt;None&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f5dd5e7f42dc4705b579c38d0bfb8c95-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'updatedAt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt = None で渡した&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;シリアライザに項目ごと渡さない場合 =&amp;gt; キーが消える&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_59ee106700ef46ecb275cc4de51c4da4-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt を渡さなかったので、キーがない&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modelserializer"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id14"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntrySerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""エントリー"""&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-5"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 除外したいフィールド&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 読み取り専用指定 https://www.django-rest-framework.org/api-guide/serializers/#specifying-read-only-fields&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# AutoField はデフォルトで読み取り専用&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;read_only_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-12"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-13"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-14"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-15"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;extra_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-18"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# モデル上は必須フィールドだけれど、シリアライザでは Not必須にしたい場合は、required を上書きする&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-19"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'display_order'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_f3b6b8df44d4414bbdb3538dc9cf82a2-20"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id15"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id16"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# curl の場合&lt;/span&gt;
&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-2"&gt;&lt;/a&gt;$ curl -H &lt;span class="s1"&gt;'Accept: application/json; indent=4'&lt;/span&gt; -u &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:xxxx/users/
&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# HTTPie の場合&lt;/span&gt;
&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# https://httpie.org/doc&lt;/span&gt;
&lt;a name="rest_code_1124db33ad294052887a35c4ba8abee3-6"&gt;&lt;/a&gt;$ http -a &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:8989/users/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="browsable-api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id17"&gt;Browsable API&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;rest_framework.response.Response を返すと Browsable API で見られるようだ!&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browsable-api-html-form"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id18"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-auto docutils"&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="stub"&gt;viewsets.ModelViewSet&lt;/th&gt;
&lt;td&gt;継承するだけで出る&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;APIView&lt;/th&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/tt&gt; を指定すると出る&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;Generic view&lt;/th&gt;
&lt;td&gt;&lt;p class="first"&gt;&lt;tt class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/tt&gt; を指定すると出る&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;というか、指定しないとどの serializer と対応してるかわからないからどのみち指定することになる&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;see: &lt;a class="reference external" href="https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api"&gt;https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id19"&gt;便利なライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="django-rest-framework-json-camelcase"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id20"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/djangorestframework-camel-case/"&gt;https://pypi.org/project/djangorestframework-camel-case/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Camel case JSON support for Django REST framework.&lt;/li&gt;
&lt;li&gt;render と parser があって、キャメルケース &amp;lt;=&amp;gt; スネークケース 変換してくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-cors-headers"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id21"&gt;django-cors-headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/django-cors-headers/"&gt;https://pypi.org/project/django-cors-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ottoyiu/django-cors-headers"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Django App that adds Cross-Origin Resource Sharing (CORS) headers to responses. This allows in-browser requests to your Django application from other origins.&lt;/li&gt;
&lt;li&gt;レスポンスヘッダーに CORS に必要なヘッダーを足してくれる&lt;ul&gt;
&lt;li&gt;allow の origin からのアクセスだったら、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/tt&gt;  ヘッダーには origin が設定されて返る&lt;/li&gt;
&lt;li&gt;allow じゃない origin からのアクセスだったら &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/tt&gt; ヘッダー自体が返らない&lt;/li&gt;
&lt;li&gt;そういう実装になっている&lt;/li&gt;
&lt;li&gt;理由は、「これは OK だよ」と教えちゃうと、悪いひとが偽装したりするから (きっと)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="cors"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id22"&gt;CORS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;オリジン間リソース共有 (Cross-Origin Resource Sharing)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;くわしくはここを見よ&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/adamchainz/django-cors-headers#about-cors"&gt;https://github.com/adamchainz/django-cors-headers#about-cors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2019/http-cors-preflight/"&gt;くろのて &amp;gt; CORS とか Preflight とかよくわかんないよな&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="requests-responses"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id23"&gt;Requests/Responses&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="drf-request"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id24"&gt;DRF の Request&lt;/a&gt;&lt;/h3&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;request.POST:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;Only handles form data. Only works for 'POST' method.&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;request.data:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;Handles arbitrary data. Works for 'POST', 'PUT' and 'PATCH' methods.&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;json request をはじめとして他の形式も処理できる&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="drf-response"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id25"&gt;DRF の Response&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-auto docutils"&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="stub"&gt;return Response(data)&lt;/th&gt;
&lt;td&gt;&lt;p class="first"&gt;Renders to content type as requested by the client.&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;RESTフレームワークがレスポンスを正しいコンテンツタイプに変換してくれる&lt;/li&gt;
&lt;li&gt;レスポンスが単一のコンテンツタイプに固定されていない&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="routers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id26"&gt;Routers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="router"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id27"&gt;Router&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Router で登録できるのは ViewSet だけ&lt;/li&gt;
&lt;li&gt;DefaultRouter: Router のルート画面にアクセスしたときに API のリンク一覧を見せてくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id28"&gt;Views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id29"&gt;API ビュー&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RESTフレームワークには、APIビューを書くために使用できる2つのラッパーがあります。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;@api_view&lt;/tt&gt;: 関数ベースのビューを扱うためのデコレータ。&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;APIView&lt;/tt&gt;: クラスベースのビューを操作するためのクラス。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apiview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id30"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;特定のモデルに紐付かないような処理は クラスベースで記述するのがおすすめと言えるでしょう。 (くろのて)&lt;ul&gt;
&lt;li&gt;クエリが複雑すぎて queryset じゃ処理しきれないとかで SQLAlchemy で処理した結果を返したい という場合などに APIView を使っています。 (くろのて)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django-rest-framework</category><guid>https://32imuf.com/django-rest-framework/</guid><pubDate>Mon, 15 Jul 2019 15:00:00 GMT</pubDate></item><item><title>Django: Form</title><link>https://32imuf.com/django/form/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id2" id="id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id3" id="id13"&gt;役割&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id4" id="id14"&gt;入力フィールド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id5" id="id15"&gt;バリデーション&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id6" id="id16"&gt;実行される順番&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#clean" id="id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id7" id="id18"&gt;clean()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#view" id="id19"&gt;View からの利用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#template" id="id20"&gt;Template からの利用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#csrf" id="id21"&gt;CSRF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform" id="id22"&gt;ModelForm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id8" id="id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-field" id="id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-p-94" id="id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id9" id="id26"&gt;View からの利用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id10" id="id27"&gt;こんなのある&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id11" id="id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/api/"&gt;Django documentation &amp;gt; フォーム API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id13"&gt;役割&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;入力データの保持&lt;/li&gt;
&lt;li&gt;バリデーション&lt;ul&gt;
&lt;li&gt;OK の場合: &lt;tt class="docutils literal"&gt;cleaned_data&lt;/tt&gt; (辞書) に入る&lt;ul&gt;
&lt;li&gt;ユーザー入力データを Python 型へ変換してくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NG の場合: エラーメッセージ (list)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id14"&gt;入力フィールド&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# この変数名が画面の入力フィールドの name 属性になる&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="c1"&gt;# django.forms.fields.Field クラスのサブクラスを指定&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget でどんな部品で画面に表示するか指定できる。 Field ごとにデフォルトもある。&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;render_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# そのほかにも、いろいろ指定できる。指定できるものは Field により異なる。&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id15"&gt;バリデーション&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id16"&gt;実行される順番&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.is_valid()&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.フィールド&lt;/tt&gt; に定義されたバリデーション&lt;ul&gt;
&lt;li&gt;文字種チェックなど&lt;/li&gt;
&lt;li&gt;フォームクラスに定義した順に実行される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Form.clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;単項目。フィールド単体のバリデーション。&lt;/li&gt;
&lt;li&gt;妥当性チェック&lt;/li&gt;
&lt;li&gt;フォームクラスに定義した順に実行される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.clean()&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;複数項目&lt;/li&gt;
&lt;li&gt;相関チェック&lt;/li&gt;
&lt;li&gt;データベースとの整合性チェック&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バリデーション OK の場合、 &lt;tt class="docutils literal"&gt;Form.cleaned_data&lt;/tt&gt; に検証済みデータがセットされる&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;is_valid()&lt;/tt&gt; 未実行の場合は &lt;tt class="docutils literal"&gt;cleaned_data&lt;/tt&gt; 属性自体が存在しない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="clean"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UsernameField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ``clean_&amp;lt;フィールド名&amp;gt;`` というメソッド名にする&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_username&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-11"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-14"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# バリデーション NG の場合&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-15"&gt;&lt;/a&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-16"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError を raise すると Form 内部の変数にエラーメッセージを追加できる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-17"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError には↓のように、メッセージを設定できる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-18"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(min_length)s&lt;/span&gt;&lt;span class="s1"&gt; 文字以上で入力してください'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'min_length'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-19"&gt;&lt;/a&gt;            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-20"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーションOK の場合は、 検証済み値を return することで cleaned_data に値を再セットできる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ``return 値`` しないと cleaned_data から値が消えてしまう!!&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id18"&gt;clean()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;ObjectDoesNotExist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーション NG の場合 `ValidationError` を raise することで&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# エラーメッセージを Form 内部の変数に追加できる&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-11"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"正しいユーザー名を入力してください"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-13"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# バリデーションOK の場合、 検証済み値を return する必要はない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id19"&gt;View からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;リクエストオブジェクトから入力データを取得して型変換&lt;/li&gt;
&lt;li&gt;入力データをバリデーション&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Form に request.POST をあげる&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# request から入力データを取り出して =&amp;gt; 型変換して =&amp;gt; バリデーションをする&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-7"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# ヴァリデーションNGの場合、遷移元画面のテンプレートにフォームオブジェクトを 'form' という名前で渡している&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-8"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'account/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id20"&gt;Template からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;テンプレート内でフォームの入力データやエラーメッセージを表示する&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# これだけで入力データがセットされた入力フィールドを全て出力できる&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * フィールドの出力順は、フォームクラスにフィールドを定義した順&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * 順番を変更したい =&amp;gt; Form に `field_order`&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# form オブジェクトをイテレートすると form に定義した fields が順番に取り出せるよ! #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-5"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-6"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# field に関連する error messages は errors 属性にリスト形式で入っている #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-8"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-9"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# 全体エラーメッセージ #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# Form.clean() で追加したエラーメッセージは、 form オブジェクトの non_field_errors 属性にリストで入っている #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-15"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ui red message"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-16"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"list"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-17"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-18"&gt;&lt;/a&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-19"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-20"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-21"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="csrf"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id21"&gt;CSRF&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;シーサーフ、クロスサイトリクエストフォージェリーと呼ばれるセキュリティ攻撃の一種&lt;/li&gt;
&lt;li&gt;POST リクエストに CSRF 対策のトークン &lt;tt class="docutils literal"&gt;csrfmiddlewaretoken&lt;/tt&gt; を加えられる&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_72c9ba65e0f24508af46c2f7d22ddc31-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# template の form 内にこれを書くよ&lt;/span&gt;
&lt;a name="rest_code_72c9ba65e0f24508af46c2f7d22ddc31-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id22"&gt;ModelForm&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;モデルに定義したフィールドのうちのいくつかが画面の入力フィールドと合致する&lt;/li&gt;
&lt;li&gt;モデルの登録や変更を伴う&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django.forms.models.ModelForm を継承する&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-6"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルクラスを指定&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルのフィールドを指定&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform-field"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;ModelForm は、モデルの django.db.models.fields.Field のサブクラスを自動判別してそれに対応するフォームの django.forms.fields.Field のサブクラスに変換してくれる&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;対応表は P.92&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;変換されたフォームの Field をそのまま使えない場合は、いろいろカスタマイズできる。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget を TextInput から PasswordInput に変更&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-9"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-12"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# User モデルにはない「確認用パスワード」フィールドを追加&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-18"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-21"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-22"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-23"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-24"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# email に必須を設定&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-25"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-26"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-27"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'メールアドレス'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="modelform-p-94"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;フィールドのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;文字種などの形式チェック&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;フォームのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;値の妥当性チェック&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/tt&gt; =&amp;gt; &lt;tt class="docutils literal"&gt;clean()&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルのバリデーション&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;ユニーク制約などのデータベースとの整合性チェック&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルの各フィールドに定義された &lt;tt class="docutils literal"&gt;unique=True&lt;/tt&gt; の制約にしたがって、レコードがユニークになっているか否かチェックしてくれる! ので、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルの登録変更を伴うフォームでは、親クラスの &lt;tt class="docutils literal"&gt;clean()&lt;/tt&gt; を明示的に呼び出すとよい&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 明示的に親クラスの clean() を呼び出すことで、&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Form を `_validate_unique = True` に更新する&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# そうすると、 validate_unique() が実行されるようになる&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password2'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;password2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"パスワードと確認用パスワードが合致しません"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id26"&gt;View からの利用&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;登録の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# GET や POST オブジェクトをあげる&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 対象のモデルをデータベースに保存&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;request からもらったものだけでは足りない場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_944f911db6924788954dc251a850d85c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# モデルにセットするけれど、データベースには登録していない&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 補完してあげる&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_password&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# データベースに登録する&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;更新の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新したい model オブジェクトを DB から取得&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# `instance` キーワード引数にあげる&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProfileForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新前のデータをベースにして request で上書きしてくれる&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id27"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使い方はよくわかっていない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets"&gt;https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory"&gt;https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/form/</guid><pubDate>Sat, 13 Jul 2019 15:00:00 GMT</pubDate></item><item><title>Django なんでもメモ</title><link>https://32imuf.com/django/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#time-zones" id="id11"&gt;Time zones&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id2" id="id12"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id3" id="id13"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-aware" id="id14"&gt;naive と aware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#django" id="id15"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id4" id="id16"&gt;現在日時の取得&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id5" id="id17"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-django" id="id18"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#s3" id="id19"&gt;S3 アップロード&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id6" id="id20"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id7" id="id21"&gt;こんなのある&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#multivaluedict" id="id22"&gt;MultiValueDict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#querydict" id="id23"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id9" id="id24"&gt;便利さん&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id10" id="id25"&gt;django に便利コマンド追加してくれるさん&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="time-zones"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id11"&gt;Time zones&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id12"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/"&gt;https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/utils/#module-django.utils.timezone"&gt;https://docs.djangoproject.com/ja/2.2/ref/utils/#module-django.utils.timezone&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id13"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; で設定する&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;USE_TZ = True&lt;/tt&gt;: タイムゾーンサポートが有効&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;USE_TZ = False&lt;/tt&gt;: タイムゾーンサポートが無効 (default)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt; startproject&lt;/tt&gt; によって生成されるデフォルトの &lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; ファイル は、 &lt;tt class="docutils literal"&gt;USE_TZ = True&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;タイムゾーンのサポートは &lt;tt class="docutils literal"&gt;pytz&lt;/tt&gt; を使用する。Django をインストールしたときに一緒にインストールされている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-aware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id14"&gt;naive と aware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;aware: タイムゾーンあり&lt;ul&gt;
&lt;li&gt;Python の &lt;tt class="docutils literal"&gt;datetime.datetime&lt;/tt&gt; のオブジェクトには、タイムゾーン情報を保持するために使える tzinfo 属性があり、これは &lt;tt class="docutils literal"&gt;datetime.tzinfo&lt;/tt&gt; のサブクラスのインスタンスで表されます。&lt;/li&gt;
&lt;li&gt;この属性がセットされオフセットを示すとき、datetime オブジェクトは aware となります。それ以外の場合は naive となります。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;naive: タイムゾーンなし&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id15"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/h3&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;データベース:&lt;/th&gt;&lt;td class="field-body"&gt;内部的に aware なタイムゾーンオブジェクトを使用して、 UTC で保持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;フォーム:&lt;/th&gt;&lt;td class="field-body"&gt;入力された日時をカレントタイムゾーンで変換し、 cleaned_data 内で aware な datetime オブジェクトを返す&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;テンプレート:&lt;/th&gt;&lt;td class="field-body"&gt;レンダリングする際に aware な datetime オブジェクトをカレントタイムゾーンに変換する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id16"&gt;現在日時の取得&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;タイムゾーンサポートが有効&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# USE_TZ = True&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# TIME_ZONE = 'Asia/Tokyo'&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytz&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;903697&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UTC&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;152275&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-14"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_aware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;39144&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-17"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-18"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;36991&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-20"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_599ec290f5e347cebb429d2d30b48a51-21"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;258210&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;タイムゾーンサポートが無効&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# USE_TZ = False&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;147660&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-11"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;569008&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-13"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_aware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-14"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;973598&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-16"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-18"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;console&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-19"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/var/www/usonar/.tox/py37/lib/python3.7/site-packages/django/utils/timezone.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;207&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;localtime&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"localtime() cannot be applied to a naive datetime"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-21"&gt;&lt;/a&gt;&lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;localtime&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;cannot&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;applied&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;naive&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-22"&gt;&lt;/a&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-23"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tz&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;pytz&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_1627ad9cd7d943b4916904bfdfb05f20-24"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;566142&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tzinfo&lt;/span&gt;&lt;span class="o"&gt;=&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;DstTzInfo&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Tokyo'&lt;/span&gt; &lt;span class="n"&gt;JST&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;STD&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id17"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;デフォルトタイムゾーン: &lt;tt class="docutils literal"&gt;settings.TIME_ZONE&lt;/tt&gt; に定義されたタイムゾーン&lt;/li&gt;
&lt;li&gt;カレントタイムゾーン: レンダリングに使われるタイムゾーン&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-django"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id18"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ba21fecac8f64d489e124383f11e8c08-1"&gt;&lt;/a&gt;&lt;span class="ne"&gt;RuntimeWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateTimeField&lt;/span&gt; &lt;span class="n"&gt;ModelName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;naive&lt;/span&gt;
&lt;a name="rest_code_ba21fecac8f64d489e124383f11e8c08-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;zone&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="s3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id19"&gt;S3 アップロード&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;体感だけど、パターン1 のほうが速いような感じがした&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f6fc5b7f9cd545cc8f968eebdfaca9f5-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# settings.py&lt;/span&gt;
&lt;a name="rest_code_f6fc5b7f9cd545cc8f968eebdfaca9f5-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;DEFAULT_FILE_STORAGE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'storages.backends.s3boto3.S3Boto3Storage'&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# upload.py&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.files.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ContentFile&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.files.storage&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パターン1&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ContentFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パターン2&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;default_storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'w'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_cd0c3010cfe24f328f4e3aef6abd4eff-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;file_size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;file_data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html"&gt;https://django-storages.readthedocs.io/en/latest/backends/amazon-S3.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/ref/files/storage/#the-storage-class"&gt;https://docs.djangoproject.com/en/2.2/ref/files/storage/#the-storage-class&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/files/#storage-objects"&gt;https://docs.djangoproject.com/en/2.2/topics/files/#storage-objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id20"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;DjangoのDBシェルでローカルDBにつなぐ&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_3ebae78add714e06aad4d722b980ec39-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;django_migrations テーブルから該当アプリのレコードを削除する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_994909e869a143778a678aafb03042db-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="s1"&gt;'%{application_name}%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_994909e869a143778a678aafb03042db-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;{該当の&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;該当テーブルやカラムも DROP する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_3b64e8e1f3d544a69ea14faa15edb0cb-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_3b64e8e1f3d544a69ea14faa15edb0cb-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;該当のマイグレーションファイルも削除しておく&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;もう一回最初からマイグレーションする&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_3fbbda6c03434acea1ff2938cef0f520-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py makemigrations &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;a name="rest_code_3fbbda6c03434acea1ff2938cef0f520-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py migrate &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id21"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="multivaluedict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id22"&gt;MultiValueDict&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;なにがうれしいのかさっぱりわからない =&amp;gt; &lt;cite&gt;MultiValueDict を継承してる QueryDict とか見るとユースケースはなんとなく想像つくと思います&lt;/cite&gt; と教えて頂いた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/"&gt;https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
A subclass of dictionary customized to handle multiple values for the same key.
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;よく見たら、こういうところが便利だと思った ↓&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.datastructures&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;
&lt;a name="rest_code_6c0266257c6c42fc927aaac9dd6ffb94-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="querydict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id23"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict&lt;/cite&gt; だそうです。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/request-response/#querydict-objects"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &amp;lt;select multiple&amp;gt;, pass multiple values for the same key.
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id24"&gt;便利さん&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id25"&gt;django に便利コマンド追加してくれるさん&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://django-extensions.readthedocs.io/en/latest/"&gt;django-extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/note/</guid><pubDate>Mon, 17 Jun 2019 15:00:00 GMT</pubDate></item><item><title>Linux いろいろメモ</title><link>https://32imuf.com/linux/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id2" id="id10"&gt;ユーザー/ユーザーグループを確認したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id3" id="id11"&gt;ディスク容量/使用量を確認したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id4" id="id12"&gt;圧縮・展開&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id5" id="id13"&gt;転送&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#scp" id="id14"&gt;SCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#sftp" id="id15"&gt;SFTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id6" id="id16"&gt;サービスの起動/停止とか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#ls-l" id="id17"&gt;ls -l&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#su" id="id18"&gt;su&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#sudo" id="id19"&gt;sudo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id7" id="id20"&gt;最初に叩くコマンドまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#dev-devel" id="id21"&gt;dev と devel の違い&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#debconf-utils" id="id22"&gt;debconf-utils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#selinux" id="id23"&gt;SELinux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id8" id="id24"&gt;メールのログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id9" id="id25"&gt;未整理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id10"&gt;ユーザー/ユーザーグループを確認したい&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーの一覧&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-2"&gt;&lt;/a&gt;$ cat /etc/passwd
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザー名:暗号化されたパスワード:ユーザーID:グループID:コメント:ホームディレクトリー:ログインシェル（ログインした際、最初に起動するシェル）&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-4"&gt;&lt;/a&gt;fumi23:x:1061:1001::/home/fumi23:/bin/bash
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーグループの一覧&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-7"&gt;&lt;/a&gt;$ cat /etc/group
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# グループ名:暗号化されたパスワード:グループID:サブグループとして所属しているユーザーアカウントのリスト&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-9"&gt;&lt;/a&gt;dev:x:1001:
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id11"&gt;ディスク容量/使用量を確認したい&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ファイルシステムの使用領域と空き領域を表示する&lt;/span&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-2"&gt;&lt;/a&gt;$ df -h
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 指定したディレクトリのディスク使用量を表示する&lt;/span&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-5"&gt;&lt;/a&gt;$ du -sh /path/to/husky
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id12"&gt;圧縮・展開&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 圧縮: 前のはなくなる&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-2"&gt;&lt;/a&gt;$ gzip husky-dump.sql
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 展開: 前のはなくなる&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-4"&gt;&lt;/a&gt;$ gzip -d husky-dump.sql.gz
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# アーカイブと圧縮: 前のはなくならない&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-7"&gt;&lt;/a&gt;$ tar -cf husky.tar husky
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-8"&gt;&lt;/a&gt;$ gzip husky.tar
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 展開: 前のはなくならない&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-10"&gt;&lt;/a&gt;$ tar -zxvf husky.tar.gz
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# zip 圧縮&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-13"&gt;&lt;/a&gt;$ zip -r /path/to/husky.zip /path/to/husky
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-14"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# zip 展開&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-15"&gt;&lt;/a&gt;$ unzip /path/to/husky.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id13"&gt;転送&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="scp"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id14"&gt;SCP&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# サーバー =&amp;gt; ローカル (踏み台サーバーを経由)&lt;/span&gt;
&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-2"&gt;&lt;/a&gt;$ scp -r -o &lt;span class="s2"&gt;"ProxyCommand ssh &amp;lt;ユーザー名&amp;gt;@&amp;lt;踏み台サーバー名&amp;gt; -W %h:%p"&lt;/span&gt; &amp;lt;ユーザー名&amp;gt;@&amp;lt;サーバー名&amp;gt;:&amp;lt;転送元: サーバー上のファイルパス&amp;gt; &amp;lt;転送先: ローカルのパス&amp;gt;
&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-3"&gt;&lt;/a&gt;$ scp -r -o &lt;span class="s2"&gt;"ProxyCommand ssh fumi23@fumidai-server -W %h:%p"&lt;/span&gt; fumi23@remote-server:/path/to/fumi23 ~/fumi23
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="sftp"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id15"&gt;SFTP&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-1"&gt;&lt;/a&gt;$ sftp &amp;lt;ユーザー名&amp;gt;@&amp;lt;サーバー名&amp;gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ローカル =&amp;gt; サーバー&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-3"&gt;&lt;/a&gt;sftp&amp;gt; put husky.tar.gz
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# サーバー =&amp;gt; ローカル&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-5"&gt;&lt;/a&gt;sftp&amp;gt; get husky.tar.gz
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# sftp をおしまいにする&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-7"&gt;&lt;/a&gt;sftp&amp;gt; quit
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id16"&gt;サービスの起動/停止とか&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-2"&gt;&lt;/a&gt;$ sudo systemctl start mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 停止&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-4"&gt;&lt;/a&gt;$ sudo systemctl stop mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 再起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-6"&gt;&lt;/a&gt;$ sudo systemctl restart mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ステータス表示&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-8"&gt;&lt;/a&gt;$ systemctl status mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-10"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-11"&gt;&lt;/a&gt;$ sudo service nginx start
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ステータス表示&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-13"&gt;&lt;/a&gt;$ sudo service nginx status
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ls-l"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id17"&gt;ls -l&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# . から始まるファイルも全部表示する&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-2"&gt;&lt;/a&gt;$ ls -la
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ファイルのパーミッション、所有ユーザ、所有グループ、ファイルサイズ、タイムスタンプ、ファイル名&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-4"&gt;&lt;/a&gt;-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; fumi23 dev   &lt;span class="m"&gt;1047&lt;/span&gt;  5月 &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:20 .viminfo
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-5"&gt;&lt;/a&gt;-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root   root &lt;span class="m"&gt;35359&lt;/span&gt;  5月 &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;:15 shiba.dog
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-6"&gt;&lt;/a&gt;drwxrwxr-x  &lt;span class="m"&gt;2&lt;/span&gt; fumi23 dev   &lt;span class="m"&gt;4096&lt;/span&gt;  4月 &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;:38 husky
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新日の新しい順&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-9"&gt;&lt;/a&gt;$ ls -lt
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新日の古い順&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-12"&gt;&lt;/a&gt;$ ls -ltr
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="su"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id18"&gt;su&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーを指定しないと root に切り替わる&lt;/span&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-2"&gt;&lt;/a&gt;$ sudo su -
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーを  www-data に切り替える&lt;/span&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-5"&gt;&lt;/a&gt;$ su -l -s /bin/bash www-data
&lt;/pre&gt;&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--login&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;切り替え後のユーザーの設定を使用する&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt; なし:&lt;/th&gt;&lt;td class="field-body"&gt;カレントディレクトリも環境変数も、切り替え前ユーザーのものを引き継ぐ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt; あり:&lt;/th&gt;&lt;td class="field-body"&gt;カレントディレクトリも環境変数も、切り替え後のユーザーのデフォルトを使用する、切り替え前ユーザーのものは引き継がない&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;-s:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;切り替え後のユーザーが使用するシェルを指定できる&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="sudo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id19"&gt;sudo&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_7c7b6916c0c64f49800431854098ffaf-1"&gt;&lt;/a&gt;$ sudo -iH
&lt;/pre&gt;&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-H&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;環境変数「HOME」をrootユーザーのホームディレクトリに変更してコマンドを実行する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-i&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;rootユーザーのデフォルトのシェルをログインシェルとして実行する。コマンドを指定しなかった場合は対話シェルとなる。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-u&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;コマンドを実行するユーザーを指定する (指定しないと root)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sudoを実行するには、あらかじめ /etc/sudoers ファイルに権限を与えられるユーザーとコマンドを設定しておく必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id20"&gt;最初に叩くコマンドまとめ&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# メモリーの使用状況をMバイト単位で表示する&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-2"&gt;&lt;/a&gt;$ free -m
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ディストリビューションのバージョンを確認する&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-4"&gt;&lt;/a&gt;$ cat /etc/redhat-release
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-5"&gt;&lt;/a&gt;$ ls
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-6"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-7"&gt;&lt;/a&gt;$ ls /home
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-8"&gt;&lt;/a&gt;$ df -h
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パッケージキャッシュの削除&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-10"&gt;&lt;/a&gt;$ yum clean all
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パッケージの更新&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-12"&gt;&lt;/a&gt;$ yum -y update
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;これがわかりやすかった:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://linuxfan.info/yum"&gt;「yum」を使ったパッケージ管理まとめ【Red Hat Enterprise Linux・CentOS】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://uxmilk.jp/13610"&gt;CentOS、UbuntuなどLinux OSのバージョン確認をするコマンド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="dev-devel"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id21"&gt;dev と devel の違い&lt;/a&gt;&lt;/h2&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;python-devel:&lt;/th&gt;&lt;td class="field-body"&gt;RedHat (CentOS) 系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;python-dev:&lt;/th&gt;&lt;td class="field-body"&gt;Debian (Ubuntu) 系&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="debconf-utils"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id22"&gt;debconf-utils&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;パッケージインストール中の設定に関する質問への返答を、あらかじめ設定しておける&lt;ul&gt;
&lt;li&gt;インストール中に質問されなくなる&lt;/li&gt;
&lt;li&gt;設定しておいた返答が使用される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;インストールを自動化するときに便利&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="selinux"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id23"&gt;SELinux&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 有効になっている&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-2"&gt;&lt;/a&gt;$ sudo getenforce
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-3"&gt;&lt;/a&gt;Enforcing
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 無効にする&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-6"&gt;&lt;/a&gt;$ sudo setenforce &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 無効になっている&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-9"&gt;&lt;/a&gt;$ sudo getenforce
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-10"&gt;&lt;/a&gt;Permissive
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;SELinux で拒否されたときのログは &lt;tt class="docutils literal"&gt;/var/log/audit/audit.log&lt;/tt&gt; にある&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://qiita.com/rikudai/items/884b203f4a72cfb62c02"&gt;https://qiita.com/rikudai/items/884b203f4a72cfb62c02&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id24"&gt;メールのログ&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;一般的にメールのログは &lt;tt class="docutils literal"&gt;/var/log/mail.log&lt;/tt&gt; にある&lt;ul&gt;
&lt;li&gt;検証用にローカルVMにpostfixを建てるなどした場合は、localhostの &lt;tt class="docutils literal"&gt;/var/log/mail.log&lt;/tt&gt; にログがある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;なにかしらのサーバーログを見たい場合はとりあえず ( &lt;tt class="docutils literal"&gt;sudo journalctl&lt;/tt&gt; ) あたりでみる ( &lt;tt class="docutils literal"&gt;/var/log/syslog&lt;/tt&gt; でもok)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id25"&gt;未整理&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;source って同じシェル内でコマンド実行するんですけど、 sudo って別のシェルになるんで、 source した結果が引き継がれないんですよね&lt;/li&gt;
&lt;li&gt;top: display Linux tasks&lt;/li&gt;
&lt;li&gt;これはものすごく便利... (ありがとうございました) : &lt;a class="reference external" href="https://explainshell.com/"&gt;https://explainshell.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>linux</category><guid>https://32imuf.com/linux/note/</guid><pubDate>Sat, 15 Jun 2019 15:00:00 GMT</pubDate></item></channel></rss>