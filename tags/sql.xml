<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて (sqlについての文書)</title><link>https://32imuf.com/</link><description></description><atom:link href="https://32imuf.com/tags/sql.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Sun, 06 Oct 2019 13:41:15 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>SQL アンチパターンまとめ</title><link>https://32imuf.com/sql/sql-antipatterns/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;書籍&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.oreilly.co.jp/books/9784873115894/"&gt;SQL アンチパターン SQL Antipatterns (2013年, オライリー・ジャパン)&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Bill Karwin 著&lt;/li&gt;
&lt;li&gt;和田 卓人, 和田 省二 監訳&lt;/li&gt;
&lt;li&gt;小島 修 訳&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="i"&gt;
&lt;h2&gt;I部 データベース論理設計のアンチパターン&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;1章 ジェイウォーク (信号無視)&lt;/h3&gt;
&lt;p&gt;１つの製品に複数ユーザーを連絡先として登録できるようにしたい&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;複数の値を持つ属性を格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;カンマ区切りフォーマットのリストを格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;交差テーブルを作成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;ひとつひとつの値は個別の行と列に格納しましょう&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;多対多は交差テーブルだな&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;2章 ナイーブツリー (素朴な木)&lt;/h3&gt;
&lt;p&gt;スレッド形式のコメント欄&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;階層構造を格納し、クエリを実行する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;常に親のみに依存する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;代替ツリーモデルを使用する (各設計の比較はP.30を見よ)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;経路列挙 (Path Enumeration)&lt;/li&gt;
&lt;li&gt;入れ子集合 (Nested Set)&lt;/li&gt;
&lt;li&gt;閉包テーブル (Closure Table)&lt;/li&gt;
&lt;li&gt;再帰クエリ ※&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;階層構造はエントリと関連 (リレーションシップ) から成り立ちます。これを念頭に、行う作業に合わせて最適な設計手法を選択しましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;再帰クエリめちゃくちゃ便利だな&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class="code mysql"&gt;&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;-- ※ 再帰クエリの例&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="nf"&gt;CommentTree&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-3"&gt;&lt;/a&gt;  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="no"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-7"&gt;&lt;/a&gt;  &lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;depth&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;depth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;Comments&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;ct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comment_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d14568d185574bcd8f423f395bf0ad93-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;CommentTree&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;bug_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;MySQL 8.0 ~ , PostgreSQL 8.4 ~ ... はサポートしている&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id-id"&gt;
&lt;h3&gt;3章 ID リクワイアド (とりあえずID)&lt;/h3&gt;
&lt;p&gt;「行の重複を避けるにはどうすればよいか」と質問された&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;主キーの規約を確立する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;すべてのテーブルに「id」列を用いる&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;状況に応じて適切に調整する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;わかりやすい列名にしよう&lt;/li&gt;
&lt;li&gt;規約に縛られない&lt;/li&gt;
&lt;li&gt;自然キーと複合キーの活用&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;規約は、役立つと思える場合のみ従いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;ずっと気になっていたので腹落ち&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;4章 キーレスエントリー (外部キー嫌い)&lt;/h3&gt;
&lt;p&gt;研究所の設備がダブルブッキングされた&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;データベースのアーキテクチャを単純化する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;外部キー制約を使用しない&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;外部キー制約を宣言する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;複数テーブルの変更をサポートする (カスケード更新)&lt;/li&gt;
&lt;li&gt;オーバーヘッド、……にはなりません&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;データベースでのミスの発生を未然に防ぐために、外部キー制約を用いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;やっぱりつけたほうが良かったんだな!&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="eav"&gt;
&lt;h3&gt;5章 EAV (エンティティ・アトリビュート・バリュー)&lt;/h3&gt;
&lt;p&gt;Issue と Bug と FeatureRequest (機能要望) のはなし&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;可変属性をサポートする&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;汎用的な属性テーブルを使用する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;サブタイプのモデリングを行う&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;シングルテーブル継承 (Single Table Inheritance)&lt;ul&gt;
&lt;li&gt;Bug と FeatureRequest を同じテーブル (Issues) に入れる&lt;/li&gt;
&lt;li&gt;issue_type 列を持つ&lt;/li&gt;
&lt;li&gt;Bug のみが使う列/FeatureRequest のみが使う列、がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;具象テーブル継承 (Concrete Table Inheritance)&lt;ul&gt;
&lt;li&gt;Bugs テーブルと FeatureRequests テーブルを作る (サブタイプごとにテーブル作成)&lt;/li&gt;
&lt;li&gt;issue_type 列不要&lt;/li&gt;
&lt;li&gt;サブタイプに存在しない属性列を格納せずにすむ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;クラステーブル継承 (Class Table Inheritance)&lt;ul&gt;
&lt;li&gt;サブタイプに共通する属性を含む基底型のテーブル (Issues) を１つ作る&lt;/li&gt;
&lt;li&gt;サブタイプごとに追加のテーブルを作る (Bugs/FeatureRequests)&lt;ul&gt;
&lt;li&gt;Issues.id を外部キーに持つ&lt;/li&gt;
&lt;li&gt;それぞれに固有の属性のみを持つ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;半構造化データ (シリアライズLOB: Serialized LOB)&lt;ul&gt;
&lt;li&gt;issue_type 列を持つ&lt;/li&gt;
&lt;li&gt;サブタイプに固有の属性は LOB列に持つ&lt;/li&gt;
&lt;li&gt;サブタイプの数が多い、頻繁に新しい属性を追加しなければならない、場合など&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;メタデータは、メタデータのために用いましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;ありそう。ある。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;6章 ポリモーフィック関連&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ユーザーがバグについてのコメントを書き込める =&amp;gt; Bugs と Comments が １対多&lt;/li&gt;
&lt;li&gt;ユーザーが機能要望についてのコメントを書き込める =&amp;gt; FeatureRequests と Comments が １対多&lt;/li&gt;
&lt;li&gt;バグについてのコメントも、機能要望についてのコメントも、同じ Comments テーブルに格納したい&lt;/li&gt;
&lt;/ul&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;複数の親テーブルを参照する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;二重目的の外部キーを使用する&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;関連 (リレーションシップ) を単純化する&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;参照を逆にする&lt;/li&gt;
&lt;li&gt;交差テーブルの作成 (Bugs/FeatureRequests が具象テーブル継承)&lt;/li&gt;
&lt;li&gt;共通の親テーブルの作成 (Bugs/FeatureRequests がクラステーブル継承)&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;テーブル間の関連 (リレーションシップ) には、参照元テーブルと参照先テーブルが常にそれぞれ１つしかないことを忘れないようにしましょう。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;5章と関連してる。&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;7章 マルチカラムアトリビュート (複数列属性)&lt;/h3&gt;
&lt;p&gt;バグデータベースに、バグを分類するための「タグ付機能」を追加したい&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;目的:&lt;/th&gt;&lt;td class="field-body"&gt;複数の値を持つ属性を格納する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;アンチパターン:&lt;/th&gt;&lt;td class="field-body"&gt;複数の列を定義する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;解決策:&lt;/th&gt;&lt;td class="field-body"&gt;従属テーブル (Tags テーブル) を作成する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;まとめ:&lt;/th&gt;&lt;td class="field-body"&gt;同じ意味を持つ値は、１つの列に格納するようにしましょう。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;わたしの感想:&lt;/th&gt;&lt;td class="field-body"&gt;すんなり。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>sql</category><guid>https://32imuf.com/sql/sql-antipatterns/</guid><pubDate>Sat, 05 Oct 2019 15:00:00 GMT</pubDate></item><item><title>SQL のメモ</title><link>https://32imuf.com/sql/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="case-null"&gt;
&lt;h2&gt;検索 CASE 式でしか NULL の判定はできない&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;検索 CASE 式: NULL 判定できる&lt;/p&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;CASE&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;CASE&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-4"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'husky'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'risa'&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-5"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'shiba'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'natsu'&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-6"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'border collie'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'chon'&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-7"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'labrador retriever'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'robo'&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-8"&gt;&lt;/a&gt;      &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;END&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-10"&gt;&lt;/a&gt;  &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_6d08a5127feb44a4813411837bcf59e9-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;END&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;簡易 CASE 式: NULL 判定できない&lt;/p&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;CASE&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;CASE&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-4"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'husky'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'risa'&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-5"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'shiba'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'natsu'&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-6"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'border collie'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'chon'&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-7"&gt;&lt;/a&gt;      &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="s1"&gt;'labrador retriever'&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="s1"&gt;'robo'&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-8"&gt;&lt;/a&gt;      &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-9"&gt;&lt;/a&gt;    &lt;span class="k"&gt;END&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-10"&gt;&lt;/a&gt;  &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_cf7d4747d81b4058adaa02916d95871d-11"&gt;&lt;/a&gt;&lt;span class="k"&gt;END&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;d.name&lt;/tt&gt; が NULL の場合は、 &lt;tt class="docutils literal"&gt;FALSE&lt;/tt&gt; と評価されてしまう ( &lt;tt class="docutils literal"&gt;ELSE&lt;/tt&gt; 句に入ってしまう)&lt;/li&gt;
&lt;li&gt;使いようによっては、&lt;tt class="docutils literal"&gt;FALSE&lt;/tt&gt; と評価されてしまうことを逆に利用できるかも....&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="count-distinct-case-when"&gt;
&lt;h2&gt;COUNT(DISTINCT CASE WHEN ...)&lt;/h2&gt;
&lt;p&gt;こういう書き方ができる&lt;/p&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-2"&gt;&lt;/a&gt;  &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="k"&gt;CASE&lt;/span&gt;
&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;WHEN&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;THEN&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_id&lt;/span&gt;
&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;ELSE&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;
&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-5"&gt;&lt;/a&gt;  &lt;span class="k"&gt;END&lt;/span&gt;
&lt;a name="rest_code_269862bf7ae04dd4b26d549a40635706-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;num_unique_users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="select"&gt;
&lt;h2&gt;SELECT文の評価順序&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;これがわかりやすい (いつも見せていただいています、ありがとうございます)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/suzukito/items/edcd00e680186f2930a8"&gt;https://qiita.com/suzukito/items/edcd00e680186f2930a8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>sql</category><guid>https://32imuf.com/sql/note/</guid><pubDate>Mon, 05 Nov 2018 15:00:00 GMT</pubDate></item></channel></rss>