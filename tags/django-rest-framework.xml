<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて (Posts about django-rest-framework)</title><link>https://32imuf.com/</link><description></description><atom:link href="https://32imuf.com/tags/django-rest-framework.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Sat, 11 Jul 2020 14:58:37 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Django REST framework のメモ</title><link>https://32imuf.com/django-rest-framework/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id1" id="id7"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializers" id="id8"&gt;Serializers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id2" id="id9"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializer-fields-required" id="id10"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#deserialize" id="id11"&gt;deserialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serialize" id="id12"&gt;serialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#modelserializer" id="id13"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id3" id="id14"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id4" id="id15"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api" id="id16"&gt;Browsable API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api-html-form" id="id17"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id5" id="id18"&gt;便利なライブラリ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-rest-framework-json-camelcase" id="id19"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-cors-headers" id="id20"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#cors" id="id21"&gt;CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#requests-responses" id="id22"&gt;Requests/Responses&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-request" id="id23"&gt;DRF の Request&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-response" id="id24"&gt;DRF の Response&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#routers" id="id25"&gt;Routers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#router" id="id26"&gt;Router&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#views" id="id27"&gt;Views&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#api" id="id28"&gt;API ビュー&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#apiview" id="id29"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id7"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-view/"&gt;くろのて &amp;gt; [Django REST Framework] View の使い方をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-serializer/"&gt;くろのて &amp;gt; [Django REST Framework] Serializer の 使い方 をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8"&gt;Django REST Frameworkを使って爆速でAPIを実装する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id8"&gt;Serializers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id9"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;デシリアライズ (入って来るほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_01da3b0a9ce84b9fa3753b18285de86f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_01da3b0a9ce84b9fa3753b18285de86f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライズ (出て行くほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_845cbbae6c7549c4be81d13be40b14ce-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_845cbbae6c7549c4be81d13be40b14ce-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializer-fields-required"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id10"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/api-guide/fields/#required"&gt;https://www.django-rest-framework.org/api-guide/fields/#required&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;デフォルトは &lt;code class="docutils literal"&gt;required=True&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="deserialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id11"&gt;deserialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=True&lt;/code&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;キーなしは当然エラー&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーがないとだめ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;キーなしは OK&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーあると、 &lt;code class="docutils literal"&gt;None&lt;/code&gt; はエラー (必須エラー)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーある、かつ、 Datetime フィールドとか int フィールドだと &lt;code class="docutils literal"&gt;''&lt;/code&gt; はエラー (たぶん型違いエラー)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id12"&gt;serialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目は渡すが中身が &lt;code class="docutils literal"&gt;None&lt;/code&gt; (or &lt;code class="docutils literal"&gt;''&lt;/code&gt; とか) の場合 =&amp;gt; キーはあるが中身は &lt;code class="docutils literal"&gt;None&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_de45a6e0818946e293e954f6b7fb4f0d-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'updatedAt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt = None で渡した&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目ごと渡さない場合 =&amp;gt; キーが消える&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9724549da7c24af0b95d75cf28d07fd8-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'entries'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[]}&lt;/span&gt;  &lt;span class="c1"&gt;# updatedAt を渡さなかったので、キーがない&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modelserializer"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id13"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntrySerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""エントリー"""&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-5"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 除外したいフィールド&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 読み取り専用指定 https://www.django-rest-framework.org/api-guide/serializers/#specifying-read-only-fields&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# AutoField はデフォルトで読み取り専用&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;read_only_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-12"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-13"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-14"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-15"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;extra_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-18"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# モデル上は必須フィールドだけれど、シリアライザでは Not必須にしたい場合は、required を上書きする&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-19"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'display_order'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_1bf96adfc7e64338bee9943c6d882dc9-20"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id14"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id15"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# curl の場合&lt;/span&gt;
&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-2"&gt;&lt;/a&gt;$ curl -H &lt;span class="s1"&gt;'Accept: application/json; indent=4'&lt;/span&gt; -u &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:xxxx/users/
&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# HTTPie の場合&lt;/span&gt;
&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# https://httpie.org/doc&lt;/span&gt;
&lt;a name="rest_code_7d7f8012a8fc4221b78fddfb690ba33c-6"&gt;&lt;/a&gt;$ http -a &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:8989/users/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="browsable-api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id16"&gt;Browsable API&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;rest_framework.response.Response を返すと Browsable API で見られるようだ!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browsable-api-html-form"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id17"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;viewsets.ModelViewSet&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;継承するだけで出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;APIView&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;Generic view&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;というか、指定しないとどの serializer と対応してるかわからないからどのみち指定することになる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;see: &lt;a class="reference external" href="https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api"&gt;https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id18"&gt;便利なライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="django-rest-framework-json-camelcase"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id19"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/djangorestframework-camel-case/"&gt;https://pypi.org/project/djangorestframework-camel-case/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Camel case JSON support for Django REST framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;render と parser があって、キャメルケース &amp;lt;=&amp;gt; スネークケース 変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-cors-headers"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id20"&gt;django-cors-headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/django-cors-headers/"&gt;https://pypi.org/project/django-cors-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ottoyiu/django-cors-headers"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;A Django App that adds Cross-Origin Resource Sharing (CORS) headers to responses. This allows in-browser requests to your Django application from other origins.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスヘッダーに CORS に必要なヘッダーを足してくれる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;allow の origin からのアクセスだったら、 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt;  ヘッダーには origin が設定されて返る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow じゃない origin からのアクセスだったら &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt; ヘッダー自体が返らない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;そういう実装になっている&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;理由は、「これは OK だよ」と教えちゃうと、悪いひとが偽装したりするから (きっと)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="cors"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id21"&gt;CORS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;オリジン間リソース共有 (Cross-Origin Resource Sharing)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;くわしくはここを見よ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/adamchainz/django-cors-headers#about-cors"&gt;https://github.com/adamchainz/django-cors-headers#about-cors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2019/http-cors-preflight/"&gt;くろのて &amp;gt; CORS とか Preflight とかよくわかんないよな&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="requests-responses"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id22"&gt;Requests/Responses&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="drf-request"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id23"&gt;DRF の Request&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;request.POST&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Only handles form data. Only works for 'POST' method.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;request.data&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Handles arbitrary data. Works for 'POST', 'PUT' and 'PATCH' methods.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;json request をはじめとして他の形式も処理できる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="drf-response"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id24"&gt;DRF の Response&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;return Response(data)&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;Renders to content type as requested by the client.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;RESTフレームワークがレスポンスを正しいコンテンツタイプに変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスが単一のコンテンツタイプに固定されていない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="routers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id25"&gt;Routers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="router"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id26"&gt;Router&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Router で登録できるのは ViewSet だけ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DefaultRouter: Router のルート画面にアクセスしたときに API のリンク一覧を見せてくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id27"&gt;Views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id28"&gt;API ビュー&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RESTフレームワークには、APIビューを書くために使用できる2つのラッパーがあります。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;@api_view&lt;/code&gt;: 関数ベースのビューを扱うためのデコレータ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;APIView&lt;/code&gt;: クラスベースのビューを操作するためのクラス。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apiview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id29"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;特定のモデルに紐付かないような処理は クラスベースで記述するのがおすすめと言えるでしょう。 (くろのて)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;クエリが複雑すぎて queryset じゃ処理しきれないとかで SQLAlchemy で処理した結果を返したい という場合などに APIView を使っています。 (くろのて)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django-rest-framework</category><guid>https://32imuf.com/django-rest-framework/</guid><pubDate>Mon, 15 Jul 2019 15:00:00 GMT</pubDate></item></channel></rss>