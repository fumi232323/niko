<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて (Posts about django-rest-framework)</title><link>https://32imuf.com/</link><description></description><atom:link href="https://32imuf.com/tags/django-rest-framework.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2021 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Sun, 07 Feb 2021 11:51:51 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>OpenAPI Document の自動生成</title><link>https://32imuf.com/django-rest-framework/generating-openapi-document/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;以前案件で Django REST framework のアプリケーションコードから OpenAPI document を自動生成する調査をしたので、自分用にここにもメモ。&lt;/p&gt;
&lt;p&gt;2020年9月時点の情報。&lt;/p&gt;
&lt;/div&gt;
&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id1" id="id7"&gt;調査対象とした自動生成ライブラリ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id2" id="id8"&gt;挙動まとめ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id3" id="id9"&gt;生成方法&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#api-schemas-drf" id="id10"&gt;API schemas (DRF 標準)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id4" id="id11"&gt;参考にしたページ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#drf-yasg-third-party-package" id="id12"&gt;drf-yasg (Third party package)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id5" id="id13"&gt;参考にしたページ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#openapi-document" id="id14"&gt;OpenAPI document があるとうれしいこと&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id6" id="id15"&gt;OpenAPI document を自動生成できるとうれしいこと&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id7"&gt;調査対象とした自動生成ライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;以下のふたつ。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;API schemas (DRF 標準): &lt;a class="reference external" href="https://www.django-rest-framework.org/coreapi/schemas/"&gt;https://www.django-rest-framework.org/coreapi/schemas/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;drf-yasg (Third party package): &lt;a class="reference external" href="https://github.com/axnsan12/drf-yasg"&gt;https://github.com/axnsan12/drf-yasg&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/marcgibbons/django-rest-swagger"&gt;https://github.com/marcgibbons/django-rest-swagger&lt;/a&gt; の後継&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;現在は、 &lt;a class="reference external" href="https://github.com/tfranzel/drf-spectacular"&gt;https://github.com/tfranzel/drf-spectacular&lt;/a&gt; で OpenAPI 3.0 ベースの OpenAPI document が生成できるもよう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[理由]&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;DRF の公式リファレンス &lt;a class="reference external" href="https://www.django-rest-framework.org/topics/documenting-your-api/#documenting-your-api"&gt;Documenting your API&lt;/a&gt; でオススメされているのはこの2つ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web で検索してみると (現在有効なものだと) このふたつの情報がほとんど&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id8"&gt;挙動まとめ&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;自分たちのアプリケーションコードに自動生成用のコードを追加する (※1) ことで生成結果をカスタマイズできる (より事実に近い状態の OpenAPI document を自動生成できる) もようだが、
以下はコード追加せずデフォルト状態で生成した (※2)&lt;/p&gt;
&lt;table class="colwidths-given"&gt;
&lt;colgroup&gt;
&lt;col style="width: 20%"&gt;
&lt;col style="width: 40%"&gt;
&lt;col style="width: 40%"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th class="head stub"&gt;&lt;p&gt;項目&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;API schemas (DRF 標準)&lt;/p&gt;&lt;/th&gt;
&lt;th class="head"&gt;&lt;p&gt;drf-yasg&lt;/p&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;OpenAPI version&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;openapi: 3.0.2&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;swagger: 2.0&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;output format&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;yaml, json&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;yaml, json&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;UI&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;Swagger UI, ReDoc&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;Swagger UI, ReDoc&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;path&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;コード通り生成される&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;urls.py から生成しているもよう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;method&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;コード通り生成される&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;urls.py =&amp;gt; viewクラス/関数を見て生成しているもよう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;operationId&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;実際のコードと相違がある&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;path + method に応じて機械的につけているもよう&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左 (命名法則には違いがある)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;description&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;コード通り生成される&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;viewクラス/view関数のDocString が転記される&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;ステータスコード&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;実際のコードと相違がある&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;method に応じて機械的につけているもよう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GET: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PUT: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PATCH: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;POST: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DELETE: 204&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;実際のコードと相違がある&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;method に応じて機械的につけているもよう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;GET: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PUT: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PATCH: 200&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;POST: 201&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DELETE: 204&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;parameters (path)&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;コード通り生成される&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ただし、ID などDRF としては int 型で受け取るものも一律 &lt;code class="docutils literal"&gt;type: string&lt;/code&gt; として出力される&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;requestBody&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;一部コード通り?生成される&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Generic views を継承している view の場合は serializer_class に指定されたserializer から生成されるもよう&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;APIView を継承した view は生成されない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;responses&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;同上&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;ただし、ClassView の場合は、すべての method に同じ response がついてしまう (例えば実際は何も返さない post にも出力されてしまう)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;td&gt;&lt;p&gt;同左&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;tags&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;つかない&lt;/p&gt;&lt;/td&gt;
&lt;td&gt;&lt;p&gt;つく&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;起点 (ROOT_CONF or app/urls) で付き方は変わる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;※1 drf-yasg の場合。(試してないけど) View にデコレータをつけて、シリアライザやレスポンスコードなどを指定するようなイメージ。DRF 標準のほうでもできるのかは未確認。&lt;/p&gt;
&lt;p&gt;※2 drf-yasg のほうがチェックが甘く、多少ヘンテコなコードでも出力してくれた&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id9"&gt;生成方法&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="api-schemas-drf"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id10"&gt;API schemas (DRF 標準)&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;pyyaml, uritemplate を install&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;settings.DEFAULT_SCHEMA_CLASS&lt;/code&gt; が指定されていたら、 default の &lt;code class="docutils literal"&gt;rest_framework.schemas.openapi.AutoSchema&lt;/code&gt; に戻しておく&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;以下のコマンドを実行する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_f15746ed00604c548b53e102a1acfa30-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py generateschema --title&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fumi23API"&lt;/span&gt; --description&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[DFR標準] OpenAPI document 自動生成をテスト"&lt;/span&gt; --urlconf&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23.urls'&lt;/span&gt; &amp;gt; openapi-schema.yaml
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;もしくは URLconf に以下を追記して、 runserver =&amp;gt;  &lt;a class="reference external" href="http://localhost:8000/openapi-schema/"&gt;http://localhost:8000/openapi-schema/&lt;/a&gt; にアクセス&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# urls.py (今回は ROOT_CONF に記載)&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.schemas&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_schema_view&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;permissions&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework.renderers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OpenAPIRenderer&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-5"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-8"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# yaml file download&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'openapi-schema/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;get_schema_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fumi23 API"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[DFR標準] OpenAPI document 自動生成をテスト"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;public&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;urlconf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23.urls'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;renderer_classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;OpenAPIRenderer&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;permission_classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permissions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AllowAny&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-17"&gt;&lt;/a&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'openapi-schema'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-18"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Swagger UI view&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-19"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ここ https://www.django-rest-framework.org/topics/documenting-your-api/#a-minimal-example-with-swagger-ui に記載の template も用意する&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'docs/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-21"&gt;&lt;/a&gt;        &lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'swagger-ui.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;extra_context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'schema_url'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'openapi-schema'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-23"&gt;&lt;/a&gt;    &lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'swagger-ui'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_fb06e0db03e342af87957ad3e968eeb2-24"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="id4"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id11"&gt;参考にしたページ&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/coreapi/schemas/"&gt;https://www.django-rest-framework.org/coreapi/schemas/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/community/3.10-announcement/"&gt;https://www.django-rest-framework.org/community/3.10-announcement/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://dev.to/errietta/documenting-a-django-api-with-openapi-and-dataclasses-1p6h"&gt;https://dev.to/errietta/documenting-a-django-api-with-openapi-and-dataclasses-1p6h&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="drf-yasg-third-party-package"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id12"&gt;drf-yasg (Third party package)&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p&gt;drf-yasg を install&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;settings.INSTALLED_APPS に &lt;code class="docutils literal"&gt;drf_yasg&lt;/code&gt; を追記&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;URLconf に以下を追記して runserver =&amp;gt; &lt;a class="reference external" href="http://localhost:8000/swagger/"&gt;http://localhost:8000/swagger/&lt;/a&gt; にアクセス&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;re_path&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;permissions&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;drf_yasg.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_schema_view&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;drf_yasg&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;openapi&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;schema_view&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_schema_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;openapi&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"fumi23 API"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;default_version&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'v3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[drf-yasg] OpenAPI document 自動生成をテスト"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'http://localhost:8000'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;urlconf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23.urls'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;public&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;permission_classes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;permissions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AllowAny&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-16"&gt;&lt;/a&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-17"&gt;&lt;/a&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-18"&gt;&lt;/a&gt;    &lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# yaml or json file download&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;re_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'^swagger(?P&amp;lt;format&amp;gt;\.json|\.yaml)$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema_view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;without_ui&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cache_timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'schema-json'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# Swagger UI view&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-22"&gt;&lt;/a&gt;        &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'swagger/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema_view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;with_ui&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'swagger'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cache_timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'schema-swagger-ui'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-23"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ReDoc view&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-24"&gt;&lt;/a&gt;        &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'redoc/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;schema_view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;with_ui&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'redoc'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cache_timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'schema-redoc'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_9cac7835989445d5a2467a5f7453897d-25"&gt;&lt;/a&gt;    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="section" id="id5"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id13"&gt;参考にしたページ&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/axnsan12/drf-yasg"&gt;https://github.com/axnsan12/drf-yasg&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/jnuank/items/be163ffb2a0c41a130be"&gt;https://qiita.com/jnuank/items/be163ffb2a0c41a130be&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/T0000N/items/c982fd9586763747fb11"&gt;https://qiita.com/T0000N/items/c982fd9586763747fb11&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="openapi-document"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id14"&gt;OpenAPI document があるとうれしいこと&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;コードを読んだり実際にアプリケーションを動かしてみなくても、API の I/F が一目瞭然&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;運用・保守していく立場からするととても助かる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;フロントエンド の TypeScript の型ファイル? を自動生成できるもよう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;人間が手でやると、書き間違えたり、誤認・誤解したりする&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ちなみに、 Go など型がある言語だとどこも自動生成するものらしい&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;バックエンドの モックサーバーをたてられるもよう&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/zalando/connexion"&gt;https://github.com/zalando/connexion&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/encode/apistar"&gt;https://github.com/encode/apistar&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同じ起点 (OpenAPI Document) から実装 =&amp;gt; テストしていけば、例えばバックエンドとフロントエンドの担当者が違っても、認識齟齬によるバグと悲しい気持ちを生まない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/generating-openapi-document/#id15"&gt;OpenAPI document を自動生成できるとうれしいこと&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;OAS に準拠した書き方を習得するのにちょっとだけ学習コストがかかるのと、&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;書くのおっくうになっても、コード書けば勝手に yaml にしてくれたらうれしいかも&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django-rest-framework</category><guid>https://32imuf.com/django-rest-framework/generating-openapi-document/</guid><pubDate>Fri, 01 Jan 2021 15:00:00 GMT</pubDate></item><item><title>Django REST framework のメモ</title><link>https://32imuf.com/django-rest-framework/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id1" id="id7"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializers" id="id8"&gt;Serializers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id2" id="id9"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializer-fields-required" id="id10"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#deserialize" id="id11"&gt;deserialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serialize" id="id12"&gt;serialize 時&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#modelserializer" id="id13"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#serializer" id="id14"&gt;Serializer の分け方の考え方&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#requests-responses" id="id15"&gt;Requests/Responses&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-request" id="id16"&gt;DRF の Request&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#drf-response" id="id17"&gt;DRF の Response&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#response" id="id18"&gt;Response&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#views" id="id19"&gt;Views&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#api" id="id20"&gt;API ビュー&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#apiview" id="id21"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id3" id="id22"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id4" id="id23"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api" id="id24"&gt;Browsable API&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#browsable-api-html-form" id="id25"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#id5" id="id26"&gt;便利なライブラリ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-rest-framework-json-camelcase" id="id27"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#django-cors-headers" id="id28"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#cors" id="id29"&gt;CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#routers" id="id30"&gt;Routers&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference internal" href="https://32imuf.com/django-rest-framework/#router" id="id31"&gt;Router&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id7"&gt;ガイド/リファレンスなど&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/"&gt;Django REST framework&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-view/"&gt;くろのて &amp;gt; [Django REST Framework] View の使い方をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/django-rest-framework-serializer/"&gt;くろのて &amp;gt; [Django REST Framework] Serializer の 使い方 をまとめてみた&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://qiita.com/kimihiro_n/items/86e0a9e619720e57ecd8"&gt;Django REST Frameworkを使って爆速でAPIを実装する&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id8"&gt;Serializers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id9"&gt;シリアライズとデシリアライズ&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;デシリアライズ deserialize (入って来るほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5945649d0fa1416bb952285321d56cfd-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5945649d0fa1416bb952285321d56cfd-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライズ serialize (出て行くほう)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_894a0b8d39754869aa3061c9d67bd668-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CommentSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_894a0b8d39754869aa3061c9d67bd668-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serializer-fields-required"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id10"&gt;Serializer fields の required 挙動まとめ&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.django-rest-framework.org/api-guide/fields/#required"&gt;https://www.django-rest-framework.org/api-guide/fields/#required&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;rest_framework&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Serializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-4"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""こういう Serializer があるとすると"""&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# default は required=True&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;allow_null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2f97c8ca8cac4a3e9217abfabb5a2d7a-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;total_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="deserialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id11"&gt;deserialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=True&lt;/code&gt; (default):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;キーなしは当然エラー&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a084d397ea884836958e8f758cb36420-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;a name="rest_code_a084d397ea884836958e8f758cb36420-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_a084d397ea884836958e8f758cb36420-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_a084d397ea884836958e8f758cb36420-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;キーなしは OK、 &lt;code class="docutils literal"&gt;serializer.validated_data&lt;/code&gt; にキーは現れない&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;a name="rest_code_970ea96c948d4f5d9e8d5a6d379800e8-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;キーありは &lt;code class="docutils literal"&gt;None&lt;/code&gt; はエラー、値が検証される&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# name は、 None を許容しないよ&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-5"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-7"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ErrorDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'この項目はnullにできません。'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'null'&lt;/span&gt;&lt;span class="p"&gt;)]}&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# name は、 blank を許容しないよ&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-12"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-13"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-14"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-15"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ErrorDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'この項目は空にできません。'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'blank'&lt;/span&gt;&lt;span class="p"&gt;)]}&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-17"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# price は、 整数フィールド&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-18"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-19"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-20"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-21"&gt;&lt;/a&gt;&lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-22"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;
&lt;a name="rest_code_5194b7571468431ca43858f92854e0ec-23"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ErrorDetail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'有効な整数を入力してください。'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'invalid'&lt;/span&gt;&lt;span class="p"&gt;)]}&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;allow_null=True&lt;/code&gt; であれば None は OK、 &lt;code class="docutils literal"&gt;serializer.validated_data&lt;/code&gt; にキーは現れる&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;a name="rest_code_6bea8d7fe89e48f5aeb1e7f9af4606d6-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;allow_blank=True&lt;/code&gt; であれば &lt;code class="docutils literal"&gt;''&lt;/code&gt; (空文字) は OK、 &lt;code class="docutils literal"&gt;serializer.validated_data&lt;/code&gt; にキーは現れる&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-4"&gt;&lt;/a&gt;&lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;validated_data&lt;/span&gt;
&lt;a name="rest_code_b8559898f0eb47b3819cfe5a9cae4c9e-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="serialize"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id12"&gt;serialize 時&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=True&lt;/code&gt; (default):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;キーなしは当然エラー&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-5"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/usr/local/lib/python3.7/site-packages/rest_framework/fields.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;454&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_attribute&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;get_attribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source_attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-7"&gt;&lt;/a&gt;  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/usr/local/lib/python3.7/site-packages/rest_framework/fields.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;92&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get_attribute&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_4f77de788bdc4fe7918e4d291239bcfb-9"&gt;&lt;/a&gt;&lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'id'&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code class="docutils literal"&gt;required=False&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目ごと渡さない場合 =&amp;gt; キーは現れない&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# description は allow_null なので、キー + None が現れる&lt;/span&gt;
&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# total_pages は default 値が設定されているので、 キー + default 値が現れる&lt;/span&gt;
&lt;a name="rest_code_b18171eeb17040e7a89b49c38f2b0527-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'total_pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;シリアライザに項目は渡すが中身が &lt;code class="docutils literal"&gt;None&lt;/code&gt; や空 (&lt;code class="docutils literal"&gt;''&lt;/code&gt;) の場合 =&amp;gt; キーは現れる + 中身は &lt;code class="docutils literal"&gt;None&lt;/code&gt; や 空 (&lt;code class="docutils literal"&gt;''&lt;/code&gt;)&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# name は、項目としては required=False なので中身が None もまあいいかということなんだろう&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'total_pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# name は、項目としては required=False なので中身が空もまあいいかということなんだろう&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BookSerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;serializer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;a name="rest_code_bb71bf4080254287aa49c1751eb73f0d-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;123&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'total_pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="modelserializer"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id13"&gt;ModelSerializer メモ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EntrySerializer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;serializers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelSerializer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""エントリー"""&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-4"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-5"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 除外したいフィールド&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;exclude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 読み取り専用指定 https://www.django-rest-framework.org/api-guide/serializers/#specifying-read-only-fields&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# AutoField はデフォルトで読み取り専用&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;read_only_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-12"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'created_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-13"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_at'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-14"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-15"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'updated_by_id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-16"&gt;&lt;/a&gt;        &lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;extra_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-18"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# モデル上は必須フィールドだけれど、シリアライザでは Not必須にしたい場合は、required を上書きする&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-19"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'display_order'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'required'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_e6b54f9bc8304e3aa36c7bb1d0a0f7d8-20"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="serializer"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id14"&gt;Serializer の分け方の考え方&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Serializer も Form も使いまわそう (違う API 間で同じ Serializer や Form を共用する) とするとつらくなりがち&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同じ API でも取得系と更新系で分けるほうが、 read_only とかで頑張ってぐちゃぐちゃになるよりマシな場合もある。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同じような項目を受け取るのでも、目的の数だけあって良い。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;共通化できるように考えるより、目的ごとに切り出したほうが、結果バグ入れ込む隙は減る。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同じ Validator を複数 Serializer でコピペするようになりそうなら、親Serializer を作れば良い。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(ae35 さんありがとうございました)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="requests-responses"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id15"&gt;Requests/Responses&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="drf-request"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id16"&gt;DRF の Request&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="field-list simple"&gt;
&lt;dt&gt;request.data&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Handles arbitrary data. Works for 'POST', 'PUT' and 'PATCH' methods.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;json request をはじめとして他の形式も処理できる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;request.query_params&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;request.GET と同じ。こっちを使うほうがおすすめ (by DRF) 。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;GET じゃなくてもクエリストリングはつけられるので&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;request.POST&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;Only handles form data. Only works for 'POST' method.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt&gt;request.GET&lt;/dt&gt;
&lt;dd&gt;&lt;p&gt;request.query_params と同じ&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="drf-response"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id17"&gt;DRF の Response&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;return Response(data)&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;Renders to content type as requested by the client.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;RESTフレームワークがレスポンスを正しいコンテンツタイプに変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスが単一のコンテンツタイプに固定されていない&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="response"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id18"&gt;Response&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/kazuho/status/1356204483412258816"&gt;https://twitter.com/kazuho/status/1356204483412258816&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://httpwg.org/http-extensions/draft-ietf-httpbis-bcp56bis.html#section-4.6"&gt;https://httpwg.org/http-extensions/draft-ietf-httpbis-bcp56bis.html#section-4.6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(shimizukawa さんありがとうございました)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;TODO: 整理する&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id19"&gt;Views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id20"&gt;API ビュー&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;RESTフレームワークには、APIビューを書くために使用できる2つのラッパーがあります。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;@api_view&lt;/code&gt;: 関数ベースのビューを扱うためのデコレータ。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;APIView&lt;/code&gt;: クラスベースのビューを操作するためのクラス。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="apiview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id21"&gt;クラスベース (APIView) で記述するのがおすすめ&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;特定のモデルに紐付かないような処理は クラスベースで記述するのがおすすめと言えるでしょう。 (くろのて)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;クエリが複雑すぎて queryset じゃ処理しきれないとかで SQLAlchemy で処理した結果を返したい という場合などに APIView を使っています。 (くろのて)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id22"&gt;ちょっと動かしたい&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id23"&gt;コマンドでアクセスする場合&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# curl の場合&lt;/span&gt;
&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-2"&gt;&lt;/a&gt;$ curl -H &lt;span class="s1"&gt;'Accept: application/json; indent=4'&lt;/span&gt; -u &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:xxxx/users/
&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# HTTPie の場合&lt;/span&gt;
&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# https://httpie.org/doc&lt;/span&gt;
&lt;a name="rest_code_ea9ee766a720450cba082e52a4990a77-6"&gt;&lt;/a&gt;$ http -a &amp;lt;username&amp;gt;:&amp;lt;password&amp;gt; http://127.0.0.1:8989/users/
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="browsable-api"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id24"&gt;Browsable API&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;rest_framework.response.Response を返すと Browsable API で見られるようだ!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="browsable-api-html-form"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id25"&gt;Browsable API で HTML form タブが出せる&lt;/a&gt;&lt;/h3&gt;
&lt;table class="colwidths-auto"&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;viewsets.ModelViewSet&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;継承するだけで出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;APIView&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;&lt;p&gt;Generic view&lt;/p&gt;&lt;/th&gt;
&lt;td&gt;&lt;p&gt;&lt;code class="docutils literal"&gt;serializer_class = SnippetSerializer&lt;/code&gt; を指定すると出る&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;というか、指定しないとどの serializer と対応してるかわからないからどのみち指定することになる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;see: &lt;a class="reference external" href="https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api"&gt;https://stackoverflow.com/questions/14616489/django-rest-framework-autogenerate-form-in-browsable-api&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id26"&gt;便利なライブラリ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="django-rest-framework-json-camelcase"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id27"&gt;Django REST Framework JSON CamelCase&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/djangorestframework-camel-case/"&gt;https://pypi.org/project/djangorestframework-camel-case/&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Camel case JSON support for Django REST framework.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;render と parser があって、キャメルケース &amp;lt;=&amp;gt; スネークケース 変換してくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-cors-headers"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id28"&gt;django-cors-headers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://pypi.org/project/django-cors-headers/"&gt;https://pypi.org/project/django-cors-headers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/ottoyiu/django-cors-headers"&gt;django-cors-headers&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;A Django App that adds Cross-Origin Resource Sharing (CORS) headers to responses. This allows in-browser requests to your Django application from other origins.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;レスポンスヘッダーに CORS に必要なヘッダーを足してくれる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;allow の origin からのアクセスだったら、 &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt;  ヘッダーには origin が設定されて返る&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;allow じゃない origin からのアクセスだったら &lt;code class="docutils literal"&gt;&lt;span class="pre"&gt;Access-Control-Allow-Origin&lt;/span&gt;&lt;/code&gt; ヘッダー自体が返らない&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;そういう実装になっている&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;理由は、「これは OK だよ」と教えちゃうと、悪いひとが偽装したりするから (きっと)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="cors"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id29"&gt;CORS&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;オリジン間リソース共有 (Cross-Origin Resource Sharing)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;くわしくはここを見よ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://github.com/adamchainz/django-cors-headers#about-cors"&gt;https://github.com/adamchainz/django-cors-headers#about-cors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a class="reference external" href="http://note.crohaco.net/2019/http-cors-preflight/"&gt;くろのて &amp;gt; CORS とか Preflight とかよくわかんないよな&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="routers"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id30"&gt;Routers&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="router"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django-rest-framework/#id31"&gt;Router&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;p&gt;Router で登録できるのは ViewSet だけ&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DefaultRouter: Router のルート画面にアクセスしたときに API のリンク一覧を見せてくれる&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django-rest-framework</category><guid>https://32imuf.com/django-rest-framework/</guid><pubDate>Mon, 15 Jul 2019 15:00:00 GMT</pubDate></item></channel></rss>