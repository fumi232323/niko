<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ふみのて</title><link>https://32imuf.com/</link><description>のてのて</description><atom:link href="https://32imuf.com/atom.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2019 &lt;a href="mailto:fumi232323fumi2016@gmail.com"&gt;fumi23&lt;/a&gt; </copyright><lastBuildDate>Mon, 15 Jul 2019 14:03:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Django: Form</title><link>https://32imuf.com/django/form/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id2" id="id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id3" id="id13"&gt;役割&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id4" id="id14"&gt;入力フィールド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id5" id="id15"&gt;バリデーション&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id6" id="id16"&gt;実行される順番&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#clean" id="id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id7" id="id18"&gt;clean()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#view" id="id19"&gt;View からの利用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#template" id="id20"&gt;Template からの利用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#csrf" id="id21"&gt;CSRF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform" id="id22"&gt;ModelForm&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id8" id="id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-field" id="id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#modelform-p-94" id="id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id9" id="id26"&gt;View からの利用&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id10" id="id27"&gt;こんなのある&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/form/#id11" id="id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id12"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/api/"&gt;Django documentation &amp;gt; フォーム API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://booth.pm/ja/items/1059917"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id13"&gt;役割&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;入力データの保持&lt;/li&gt;
&lt;li&gt;バリデーション&lt;ul&gt;
&lt;li&gt;OK の場合: &lt;tt class="docutils literal"&gt;cleaned_data&lt;/tt&gt; (辞書) に入る&lt;ul&gt;
&lt;li&gt;ユーザー入力データを Python 型へ変換してくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NG の場合: エラーメッセージ (list)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id14"&gt;入力フィールド&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# この変数名が画面の入力フィールドの name 属性になる&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="c1"&gt;# django.forms.fields.Field クラスのサブクラスを指定&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget でどんな部品で画面に表示するか指定できる。 Field ごとにデフォルトもある。&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;render_value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# そのほかにも、いろいろ指定できる。指定できるものは Field により異なる。&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_fd7465f33c8f4d0ea9c45bed1f0f1ac2-11"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id15"&gt;バリデーション&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id16"&gt;実行される順番&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.is_valid()&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.フィールド&lt;/tt&gt; に定義されたバリデーション&lt;ul&gt;
&lt;li&gt;文字種チェックなど&lt;/li&gt;
&lt;li&gt;フォームクラスに定義した順に実行される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;Form.clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;単項目。フィールド単体のバリデーション。&lt;/li&gt;
&lt;li&gt;妥当性チェック&lt;/li&gt;
&lt;li&gt;フォームクラスに定義した順に実行される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Form.clean()&lt;/tt&gt;&lt;ul&gt;
&lt;li&gt;複数項目&lt;/li&gt;
&lt;li&gt;相関チェック&lt;/li&gt;
&lt;li&gt;データベースとの整合性チェック&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;バリデーション OK の場合、 &lt;tt class="docutils literal"&gt;Form.cleaned_data&lt;/tt&gt; に検証済みデータがセットされる&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;is_valid()&lt;/tt&gt; 未実行の場合は &lt;tt class="docutils literal"&gt;cleaned_data&lt;/tt&gt; 属性自体が存在しない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="clean"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id17"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UsernameField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# ``clean_&amp;lt;フィールド名&amp;gt;`` というメソッド名にする&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean_username&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-11"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-12"&gt;&lt;/a&gt;        &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-14"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# バリデーション NG の場合&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-15"&gt;&lt;/a&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-16"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError を raise すると Form 内部の変数にエラーメッセージを追加できる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-17"&gt;&lt;/a&gt;                &lt;span class="c1"&gt;# ValidationError には↓のように、メッセージを設定できる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-18"&gt;&lt;/a&gt;                &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%(min_length)s&lt;/span&gt;&lt;span class="s1"&gt; 文字以上で入力してください'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'min_length'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-19"&gt;&lt;/a&gt;            &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-20"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーションOK の場合は、 検証済み値を return することで cleaned_data に値を再セットできる&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ``return 値`` しないと cleaned_data から値が消えてしまう!!&lt;/span&gt;
&lt;a name="rest_code_2a607f832b9e4e1e9d7038fdd22f863d-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id18"&gt;clean()&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 入力値は cleaned_data から取得する&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;ObjectDoesNotExist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーション NG の場合 `ValidationError` を raise することで&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# エラーメッセージを Form 内部の変数に追加できる&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-11"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"正しいユーザー名を入力してください"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_d3ea15adf8074d39bb7dd49830e5d976-13"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# バリデーションOK の場合、 検証済み値を return する必要はない&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="view"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id19"&gt;View からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;リクエストオブジェクトから入力データを取得して型変換&lt;/li&gt;
&lt;li&gt;入力データをバリデーション&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# Form に request.POST をあげる&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# request から入力データを取り出して =&amp;gt; 型変換して =&amp;gt; バリデーションをする&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-7"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# ヴァリデーションNGの場合、遷移元画面のテンプレートにフォームオブジェクトを 'form' という名前で渡している&lt;/span&gt;
&lt;a name="rest_code_aef01dd4c12544d4b38171d311d37469-8"&gt;&lt;/a&gt;  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'account/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="template"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id20"&gt;Template からの利用&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;テンプレート内でフォームの入力データやエラーメッセージを表示する&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# これだけで入力データがセットされた入力フィールドを全て出力できる&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * フィールドの出力順は、フォームクラスにフィールドを定義した順&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# * 順番を変更したい =&amp;gt; Form に `field_order`&lt;/span&gt;
&lt;a name="rest_code_13e0b507971042029ae2b092405d8ed4-4"&gt;&lt;/a&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# form オブジェクトをイテレートすると form に定義した fields が順番に取り出せるよ! #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-3"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"field"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-4"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-5"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-6"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# field に関連する error messages は errors 属性にリスト形式で入っている #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-8"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-9"&gt;&lt;/a&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-10"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# 全体エラーメッセージ #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="c1"&gt;# Form.clean() で追加したエラーメッセージは、 form オブジェクトの non_field_errors 属性にリストで入っている #}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-14"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-15"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"ui red message"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-16"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt; &lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"list"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-17"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;non_field_errors&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-18"&gt;&lt;/a&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;non_field_error&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;li&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-19"&gt;&lt;/a&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endfor&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-20"&gt;&lt;/a&gt;  &lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-21"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d9e6660c81940ff991d169105be313e-22"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;endif&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="csrf"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id21"&gt;CSRF&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;シーサーフ、クロスサイトリクエストフォージェリーと呼ばれるセキュリティ攻撃の一種&lt;/li&gt;
&lt;li&gt;POST リクエストに CSRF 対策のトークン &lt;tt class="docutils literal"&gt;csrfmiddlewaretoken&lt;/tt&gt; を加えられる&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_72c9ba65e0f24508af46c2f7d22ddc31-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# template の form 内にこれを書くよ&lt;/span&gt;
&lt;a name="rest_code_72c9ba65e0f24508af46c2f7d22ddc31-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;csrf_token&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id22"&gt;ModelForm&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id23"&gt;こんなときに利用価値が高い&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;モデルに定義したフィールドのうちのいくつかが画面の入力フィールドと合致する&lt;/li&gt;
&lt;li&gt;モデルの登録や変更を伴う&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django.forms.models.ModelForm を継承する&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-6"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-8"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルクラスを指定&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 利用するモデルのフィールドを指定&lt;/span&gt;
&lt;a name="rest_code_33d24b11f6ba4829bce43919806eb5ca-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="modelform-field"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id24"&gt;ModelForm の Field&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;ModelForm は、モデルの django.db.models.fields.Field のサブクラスを自動判別してそれに対応するフォームの django.forms.fields.Field のサブクラスに変換してくれる&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;対応表は P.92&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;変換されたフォームの Field をそのまま使えない場合は、いろいろカスタマイズできる。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-2"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""ユーザー登録画面用のフォーム"""&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-7"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# widget を TextInput から PasswordInput に変更&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-8"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-9"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-10"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-12"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# User モデルにはない「確認用パスワード」フィールドを追加&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-14"&gt;&lt;/a&gt;        &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-15"&gt;&lt;/a&gt;        &lt;span class="n"&gt;required&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-16"&gt;&lt;/a&gt;        &lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-17"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widgets&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PasswordInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'確認用パスワード'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-18"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-20"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-21"&gt;&lt;/a&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-22"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-23"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'ユーザー名'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-24"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# email に必須を設定&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-25"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;required&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-26"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# プレースホルダーをつける&lt;/span&gt;
&lt;a name="rest_code_bac61d61497a484898afd17114acbf9b-27"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attrs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'placeholder'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'メールアドレス'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="modelform-p-94"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id25"&gt;ModelForm のバリデーションが実行される順番 (P.94 の絵がとてもよい)&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;フィールドのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;文字種などの形式チェック&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;フォームのバリデーション&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;値の妥当性チェック&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;clean_&amp;lt;フィールド名&amp;gt;()&lt;/span&gt;&lt;/tt&gt; =&amp;gt; &lt;tt class="docutils literal"&gt;clean()&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルのバリデーション&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;ユニーク制約などのデータベースとの整合性チェック&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルの各フィールドに定義された &lt;tt class="docutils literal"&gt;unique=True&lt;/tt&gt; の制約にしたがって、レコードがユニークになっているか否かチェックしてくれる! ので、&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;モデルの登録変更を伴うフォームでは、親クラスの &lt;tt class="docutils literal"&gt;clean()&lt;/tt&gt; を明示的に呼び出すとよい&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 明示的に親クラスの clean() を呼び出すことで、&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Form を `_validate_unique = True` に更新する&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# そうすると、 validate_unique() が実行されるようになる&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-5"&gt;&lt;/a&gt;    &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clean&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;password2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;changed_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password2'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;password2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_9dfceee0214144fb9b4515295e334097-9"&gt;&lt;/a&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ValidationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"パスワードと確認用パスワードが合致しません"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id26"&gt;View からの利用&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;登録の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# GET や POST オブジェクトをあげる&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegisterForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 対象のモデルをデータベースに保存&lt;/span&gt;
&lt;a name="rest_code_5c4a9042416b459292223d5a978d900a-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;request からもらったものだけでは足りない場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_944f911db6924788954dc251a850d85c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# モデルにセットするけれど、データベースには登録していない&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;commit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 補完してあげる&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_password&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'password'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# データベースに登録する&lt;/span&gt;
&lt;a name="rest_code_944f911db6924788954dc251a850d85c-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;更新の場合&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新したい model オブジェクトを DB から取得&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# `instance` キーワード引数にあげる&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ProfileForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f4e8130ec3d041c2a67c64d79e6e874b-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新前のデータをベースにして request で上書きしてくれる&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id27"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/form/#id28"&gt;インラインフォームセット&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;使い方はよくわかっていない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets"&gt;https://docs.djangoproject.com/ja/2.2/topics/forms/modelforms/#inline-formsets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory"&gt;https://docs.djangoproject.com/ja/2.2/ref/forms/models/#inlineformset-factory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/form/</guid><pubDate>Sat, 13 Jul 2019 15:00:00 GMT</pubDate></item><item><title>Django なんでもメモ</title><link>https://32imuf.com/django/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#time-zones" id="id11"&gt;Time zones&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id2" id="id12"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id3" id="id13"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-aware" id="id14"&gt;naive と aware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#django" id="id15"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id4" id="id16"&gt;現在日時の取得方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id5" id="id17"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#naive-django" id="id18"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id6" id="id19"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id7" id="id20"&gt;こんなのある&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#multivaluedict" id="id21"&gt;MultiValueDict&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#querydict" id="id22"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id9" id="id23"&gt;便利さん&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/note/#id10" id="id24"&gt;django に便利コマンド追加してくれるさん&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="time-zones"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id11"&gt;Time zones&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id12"&gt;リファレンス&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/"&gt;https://docs.djangoproject.com/ja/2.2/topics/i18n/timezones/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id13"&gt;タイムゾーンサポート&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; で設定する&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;USE_TZ = True&lt;/tt&gt;: タイムゾーンサポートが有効&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;USE_TZ = False&lt;/tt&gt;: タイムゾーンサポートが無効 (default)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt; startproject&lt;/tt&gt; によって生成されるデフォルトの &lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; ファイル は、 &lt;tt class="docutils literal"&gt;USE_TZ = True&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;タイムゾーンのサポートは &lt;tt class="docutils literal"&gt;pytz&lt;/tt&gt; を使用する。Django をインストールしたときに一緒にインストールされている。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-aware"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id14"&gt;naive と aware&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;aware: タイムゾーンあり&lt;ul&gt;
&lt;li&gt;Python の &lt;tt class="docutils literal"&gt;datetime.datetime&lt;/tt&gt; のオブジェクトには、タイムゾーン情報を保持するために使える tzinfo 属性があり、これは &lt;tt class="docutils literal"&gt;datetime.tzinfo&lt;/tt&gt; のサブクラスのインスタンスで表されます。&lt;/li&gt;
&lt;li&gt;この属性がセットされオフセットを示すとき、datetime オブジェクトは aware となります。それ以外の場合は naive となります。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;naive: タイムゾーンなし&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id15"&gt;タイムゾーンサポートが有効なときの Django の日時の取り扱い方&lt;/a&gt;&lt;/h3&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;データベース:&lt;/th&gt;&lt;td class="field-body"&gt;内部的に aware なタイムゾーンオブジェクトを使用して、 UTC で保持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;フォーム:&lt;/th&gt;&lt;td class="field-body"&gt;入力された日時をカレントタイムゾーンで変換し、 cleaned_data 内で aware な datetime オブジェクトを返す&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;テンプレート:&lt;/th&gt;&lt;td class="field-body"&gt;レンダリングする際に aware な datetime オブジェクトをカレントタイムゾーンに変換する&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id16"&gt;現在日時の取得方法&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# タイムゾーンサポートが有効&lt;/span&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# タイムゾーンサポートが無効&lt;/span&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-6"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;a name="rest_code_de9b9b99a089424ca33987538ba11517-7"&gt;&lt;/a&gt;&lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id17"&gt;デフォルトタイムゾーンとカレントタイムゾーン&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;デフォルトタイムゾーン: &lt;tt class="docutils literal"&gt;settings.TIME_ZONE&lt;/tt&gt; に定義されたタイムゾーン&lt;/li&gt;
&lt;li&gt;カレントタイムゾーン: レンダリングに使われるタイムゾーン&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="naive-django"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id18"&gt;naive な日時をデータベースに保存しようとすると、Django は警告を出す&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_eb62c54cac82497780d7aeebcf44eb93-1"&gt;&lt;/a&gt;&lt;span class="ne"&gt;RuntimeWarning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;DateTimeField&lt;/span&gt; &lt;span class="n"&gt;ModelName&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt; &lt;span class="n"&gt;received&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;naive&lt;/span&gt;
&lt;a name="rest_code_eb62c54cac82497780d7aeebcf44eb93-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="n"&gt;zone&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id19"&gt;マイグレーションを間違えたときのリカバリ方法&lt;/a&gt;&lt;/h2&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;DjangoのDBシェルでローカルDBにつなぐ&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_7d97cbebf5314d8382c439866c201abb-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;django_migrations テーブルから該当アプリのレコードを削除する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_b14bbc67b72342a38938e405813e17d1-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="k"&gt;like&lt;/span&gt; &lt;span class="s1"&gt;'%{application_name}%'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_b14bbc67b72342a38938e405813e17d1-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;django_migrations&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;{該当の&lt;/span&gt;&lt;span class="n"&gt;ID&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;該当テーブルやカラムも DROP する&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code sql"&gt;&lt;a name="rest_code_01529d78608f474eac827c7a660fd83e-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;a name="rest_code_01529d78608f474eac827c7a660fd83e-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;該当のマイグレーションファイルも削除しておく&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;もう一回最初からマイグレーションする&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_1ac982f7ec3649308749fb219e8628c7-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py makemigrations &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;a name="rest_code_1ac982f7ec3649308749fb219e8628c7-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py migrate &lt;span class="o"&gt;{&lt;/span&gt;application_name&lt;span class="o"&gt;}&lt;/span&gt; --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id20"&gt;こんなのある&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="multivaluedict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id21"&gt;MultiValueDict&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;なにがうれしいのかさっぱりわからない =&amp;gt; &lt;cite&gt;MultiValueDict を継承してる QueryDict とか見るとユースケースはなんとなく想像つくと思います&lt;/cite&gt; と教えて頂いた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/"&gt;https://docs.djangoproject.com/ja/2.1/_modules/django/utils/datastructures/&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
A subclass of dictionary customized to handle multiple values for the same key.
&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;よく見たら、こういうところが便利だと思った ↓&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.datastructures&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-4"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-5"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MultiValueDict&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Adrian'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Simon'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dd&lt;/span&gt;
&lt;a name="rest_code_b4663b791aa54d9eb9633e351568b73c-9"&gt;&lt;/a&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'position'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Developer'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Momo'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="querydict"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id22"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;cite&gt;In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict&lt;/cite&gt; だそうです。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/request-response/#querydict-objects"&gt;QueryDict オブジェクト&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
In an HttpRequest object, the GET and POST attributes are instances of django.http.QueryDict, a dictionary-like class customized to deal with multiple values for the same key. This is necessary because some HTML form elements, notably &amp;lt;select multiple&amp;gt;, pass multiple values for the same key.
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id23"&gt;便利さん&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/note/#id24"&gt;django に便利コマンド追加してくれるさん&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://django-extensions.readthedocs.io/en/latest/"&gt;django-extensions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/note/</guid><pubDate>Mon, 17 Jun 2019 15:00:00 GMT</pubDate></item><item><title>Linux いろいろメモ</title><link>https://32imuf.com/linux/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id2" id="id10"&gt;ユーザー/ユーザーグループを確認したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id3" id="id11"&gt;ディスク容量/使用量を確認したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id4" id="id12"&gt;圧縮・展開&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id5" id="id13"&gt;転送&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#scp" id="id14"&gt;SCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#sftp" id="id15"&gt;SFTP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id6" id="id16"&gt;サービスの起動/停止とか&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#ls-l" id="id17"&gt;ls -l&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#su" id="id18"&gt;su&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#sudo" id="id19"&gt;sudo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id7" id="id20"&gt;最初に叩くコマンドまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#dev-devel" id="id21"&gt;dev と devel の違い&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#debconf-utils" id="id22"&gt;debconf-utils&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#selinux" id="id23"&gt;SELinux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id8" id="id24"&gt;メールのログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/linux/note/#id9" id="id25"&gt;未整理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id10"&gt;ユーザー/ユーザーグループを確認したい&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーの一覧&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-2"&gt;&lt;/a&gt;$ cat /etc/passwd
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザー名:暗号化されたパスワード:ユーザーID:グループID:コメント:ホームディレクトリー:ログインシェル（ログインした際、最初に起動するシェル）&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-4"&gt;&lt;/a&gt;fumi23:x:1061:1001::/home/fumi23:/bin/bash
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーグループの一覧&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-7"&gt;&lt;/a&gt;$ cat /etc/group
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# グループ名:暗号化されたパスワード:グループID:サブグループとして所属しているユーザーアカウントのリスト&lt;/span&gt;
&lt;a name="rest_code_f963b97168014c1ca2fb86f4087df4a9-9"&gt;&lt;/a&gt;dev:x:1001:
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id11"&gt;ディスク容量/使用量を確認したい&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ファイルシステムの使用領域と空き領域を表示する&lt;/span&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-2"&gt;&lt;/a&gt;$ df -h
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 指定したディレクトリのディスク使用量を表示する&lt;/span&gt;
&lt;a name="rest_code_f3f694c453cb47eb8fe3f0635fd159d1-5"&gt;&lt;/a&gt;$ du -sh /path/to/husky
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id12"&gt;圧縮・展開&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 圧縮: 前のはなくなる&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-2"&gt;&lt;/a&gt;$ gzip husky-dump.sql
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 展開: 前のはなくなる&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-4"&gt;&lt;/a&gt;$ gzip -d husky-dump.sql.gz
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# アーカイブと圧縮: 前のはなくならない&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-7"&gt;&lt;/a&gt;$ tar -cf husky.tar husky
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-8"&gt;&lt;/a&gt;$ gzip husky.tar
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 展開: 前のはなくならない&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-10"&gt;&lt;/a&gt;$ tar -zxvf husky.tar.gz
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# zip 圧縮&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-13"&gt;&lt;/a&gt;$ zip -r /path/to/husky.zip /path/to/husky
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-14"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# zip 展開&lt;/span&gt;
&lt;a name="rest_code_325f1c98e0db455d9ec592f19da9797b-15"&gt;&lt;/a&gt;$ unzip /path/to/husky.zip
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id13"&gt;転送&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="scp"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id14"&gt;SCP&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# サーバー =&amp;gt; ローカル (踏み台サーバーを経由)&lt;/span&gt;
&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-2"&gt;&lt;/a&gt;$ scp -r -o &lt;span class="s2"&gt;"ProxyCommand ssh &amp;lt;ユーザー名&amp;gt;@&amp;lt;踏み台サーバー名&amp;gt; -W %h:%p"&lt;/span&gt; &amp;lt;ユーザー名&amp;gt;@&amp;lt;サーバー名&amp;gt;:&amp;lt;転送元: サーバー上のファイルパス&amp;gt; &amp;lt;転送先: ローカルのパス&amp;gt;
&lt;a name="rest_code_07df93d56b0d42ddba6d557b3433e39c-3"&gt;&lt;/a&gt;$ scp -r -o &lt;span class="s2"&gt;"ProxyCommand ssh fumi23@fumidai-server -W %h:%p"&lt;/span&gt; fumi23@remote-server:/path/to/fumi23 ~/fumi23
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="sftp"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id15"&gt;SFTP&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-1"&gt;&lt;/a&gt;$ sftp &amp;lt;ユーザー名&amp;gt;@&amp;lt;サーバー名&amp;gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ローカル =&amp;gt; サーバー&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-3"&gt;&lt;/a&gt;sftp&amp;gt; put husky.tar.gz
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# サーバー =&amp;gt; ローカル&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-5"&gt;&lt;/a&gt;sftp&amp;gt; get husky.tar.gz
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# sftp をおしまいにする&lt;/span&gt;
&lt;a name="rest_code_a98be25a70854359b491143b6f42999c-7"&gt;&lt;/a&gt;sftp&amp;gt; quit
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id16"&gt;サービスの起動/停止とか&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-2"&gt;&lt;/a&gt;$ sudo systemctl start mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 停止&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-4"&gt;&lt;/a&gt;$ sudo systemctl stop mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 再起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-6"&gt;&lt;/a&gt;$ sudo systemctl restart mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ステータス表示&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-8"&gt;&lt;/a&gt;$ systemctl status mysqld
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-10"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 起動&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-11"&gt;&lt;/a&gt;$ sudo service nginx start
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-12"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ステータス表示&lt;/span&gt;
&lt;a name="rest_code_9ba237e93e5b4e8bbe1cf441950145cb-13"&gt;&lt;/a&gt;$ sudo service nginx status
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="ls-l"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id17"&gt;ls -l&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# . から始まるファイルも全部表示する&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-2"&gt;&lt;/a&gt;$ ls -la
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ファイルのパーミッション、所有ユーザ、所有グループ、ファイルサイズ、タイムスタンプ、ファイル名&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-4"&gt;&lt;/a&gt;-rw-------  &lt;span class="m"&gt;1&lt;/span&gt; fumi23 dev   &lt;span class="m"&gt;1047&lt;/span&gt;  5月 &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;:20 .viminfo
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-5"&gt;&lt;/a&gt;-rwxr-xr-x  &lt;span class="m"&gt;1&lt;/span&gt; root   root &lt;span class="m"&gt;35359&lt;/span&gt;  5月 &lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;:15 shiba.dog
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-6"&gt;&lt;/a&gt;drwxrwxr-x  &lt;span class="m"&gt;2&lt;/span&gt; fumi23 dev   &lt;span class="m"&gt;4096&lt;/span&gt;  4月 &lt;span class="m"&gt;18&lt;/span&gt; &lt;span class="m"&gt;13&lt;/span&gt;:38 husky
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新日の新しい順&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-9"&gt;&lt;/a&gt;$ ls -lt
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 更新日の古い順&lt;/span&gt;
&lt;a name="rest_code_c435345602f548cf8eea65038b65f945-12"&gt;&lt;/a&gt;$ ls -ltr
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="su"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id18"&gt;su&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーを指定しないと root に切り替わる&lt;/span&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-2"&gt;&lt;/a&gt;$ sudo su -
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ユーザーを  www-data に切り替える&lt;/span&gt;
&lt;a name="rest_code_3639751537f849be83a5feecdaaa4747-5"&gt;&lt;/a&gt;$ su -l -s /bin/bash www-data
&lt;/pre&gt;&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--login&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first"&gt;切り替え後のユーザーの設定を使用する&lt;/p&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt; なし:&lt;/th&gt;&lt;td class="field-body"&gt;カレントディレクトリも環境変数も、切り替え前ユーザーのものを引き継ぐ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;-&lt;/tt&gt; あり:&lt;/th&gt;&lt;td class="field-body"&gt;カレントディレクトリも環境変数も、切り替え後のユーザーのデフォルトを使用する、切り替え前ユーザーのものは引き継がない&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;-s:&lt;/th&gt;&lt;td class="field-body"&gt;&lt;p class="first last"&gt;切り替え後のユーザーが使用するシェルを指定できる&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="sudo"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id19"&gt;sudo&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_7c7b6916c0c64f49800431854098ffaf-1"&gt;&lt;/a&gt;$ sudo -iH
&lt;/pre&gt;&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-H&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;環境変数「HOME」をrootユーザーのホームディレクトリに変更してコマンドを実行する&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-i&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;rootユーザーのデフォルトのシェルをログインシェルとして実行する。コマンドを指定しなかった場合は対話シェルとなる。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-u&lt;/span&gt;&lt;/tt&gt;:&lt;/th&gt;&lt;td class="field-body"&gt;コマンドを実行するユーザーを指定する (指定しないと root)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;sudoを実行するには、あらかじめ /etc/sudoers ファイルに権限を与えられるユーザーとコマンドを設定しておく必要がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id20"&gt;最初に叩くコマンドまとめ&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# メモリーの使用状況をMバイト単位で表示する&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-2"&gt;&lt;/a&gt;$ free -m
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ディストリビューションのバージョンを確認する&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-4"&gt;&lt;/a&gt;$ cat /etc/redhat-release
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-5"&gt;&lt;/a&gt;$ ls
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-6"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-7"&gt;&lt;/a&gt;$ ls /home
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-8"&gt;&lt;/a&gt;$ df -h
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-9"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パッケージキャッシュの削除&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-10"&gt;&lt;/a&gt;$ yum clean all
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# パッケージの更新&lt;/span&gt;
&lt;a name="rest_code_65f7941647914b21999a04c8ae18f7d7-12"&gt;&lt;/a&gt;$ yum -y update
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;これがわかりやすかった:&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://linuxfan.info/yum"&gt;「yum」を使ったパッケージ管理まとめ【Red Hat Enterprise Linux・CentOS】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://uxmilk.jp/13610"&gt;CentOS、UbuntuなどLinux OSのバージョン確認をするコマンド&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="dev-devel"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id21"&gt;dev と devel の違い&lt;/a&gt;&lt;/h2&gt;
&lt;table class="docutils field-list" frame="void" rules="none"&gt;
&lt;col class="field-name"&gt;
&lt;col class="field-body"&gt;
&lt;tbody valign="top"&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;python-devel:&lt;/th&gt;&lt;td class="field-body"&gt;RedHat (CentOS) 系&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class="field"&gt;&lt;th class="field-name"&gt;python-dev:&lt;/th&gt;&lt;td class="field-body"&gt;Debian (Ubuntu) 系&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="debconf-utils"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id22"&gt;debconf-utils&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;パッケージインストール中の設定に関する質問への返答を、あらかじめ設定しておける&lt;ul&gt;
&lt;li&gt;インストール中に質問されなくなる&lt;/li&gt;
&lt;li&gt;設定しておいた返答が使用される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;インストールを自動化するときに便利&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="selinux"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id23"&gt;SELinux&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 有効になっている&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-2"&gt;&lt;/a&gt;$ sudo getenforce
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-3"&gt;&lt;/a&gt;Enforcing
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 無効にする&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-6"&gt;&lt;/a&gt;$ sudo setenforce &lt;span class="m"&gt;0&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 無効になっている&lt;/span&gt;
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-9"&gt;&lt;/a&gt;$ sudo getenforce
&lt;a name="rest_code_d4fa77b73f2e46dcbd097ef3f22d0e8f-10"&gt;&lt;/a&gt;Permissive
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;SELinux で拒否されたときのログは &lt;tt class="docutils literal"&gt;/var/log/audit/audit.log&lt;/tt&gt; にある&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://qiita.com/rikudai/items/884b203f4a72cfb62c02"&gt;https://qiita.com/rikudai/items/884b203f4a72cfb62c02&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id24"&gt;メールのログ&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;一般的にメールのログは &lt;tt class="docutils literal"&gt;/var/log/mail.log&lt;/tt&gt; にある&lt;ul&gt;
&lt;li&gt;検証用にローカルVMにpostfixを建てるなどした場合は、localhostの &lt;tt class="docutils literal"&gt;/var/log/mail.log&lt;/tt&gt; にログがある&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;なにかしらのサーバーログを見たい場合はとりあえず ( &lt;tt class="docutils literal"&gt;sudo journalctl&lt;/tt&gt; ) あたりでみる ( &lt;tt class="docutils literal"&gt;/var/log/syslog&lt;/tt&gt; でもok)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/linux/note/#id25"&gt;未整理&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;source って同じシェル内でコマンド実行するんですけど、 sudo って別のシェルになるんで、 source した結果が引き継がれないんですよね&lt;/li&gt;
&lt;li&gt;top: display Linux tasks&lt;/li&gt;
&lt;li&gt;これはものすごく便利... (ありがとうございました) : &lt;a class="reference external" href="https://explainshell.com/"&gt;https://explainshell.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>linux</category><guid>https://32imuf.com/linux/note/</guid><pubDate>Sat, 15 Jun 2019 15:00:00 GMT</pubDate></item><item><title>Nikola の使い方メモ</title><link>https://32imuf.com/nikola/note/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;div class="section" id="id1"&gt;
&lt;h2&gt;リファレンス・ガイド&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/handbook.html"&gt;The Nikola Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/getting-started.html"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/template-variables.html"&gt;Template variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/handbook.html#deploying-to-github"&gt;Deploying to GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com/extending.html"&gt;Extending Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://plugins.getnikola.com/"&gt;Plugins for Nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pygments.org/docs/lexers/"&gt;Pygments: Available lexers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2018/start-nikola/"&gt;くろのて: Nikola を始める話&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;コマンド&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Automatic rebuilds&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0557343b017e45df938837cca7aa5eba-1"&gt;&lt;/a&gt;$ nikola auto --browser
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Deploying to GitHub&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_61c18d9e4bd24403b0ba793cb84ae98c-1"&gt;&lt;/a&gt;$ nikola github_deploy
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Delete the now orphaned files&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_6ceef1d610b94b40845d514e723f0ea9-1"&gt;&lt;/a&gt;$ nikola check --clean-files
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>nikola</category><guid>https://32imuf.com/nikola/note/</guid><pubDate>Mon, 10 Jun 2019 15:00:00 GMT</pubDate></item><item><title>Django: Test</title><link>https://32imuf.com/django/test/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/test/#requestfactory" id="id2"&gt;RequestFactory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="requestfactory"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/test/#id2"&gt;RequestFactory&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/testing/advanced/#django.test.RequestFactory"&gt;Django documentation &amp;gt; Advanced testing topics &amp;gt; RequestFactory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/test/</guid><pubDate>Mon, 20 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: django-admin.py, manage.py</title><link>https://32imuf.com/django/manage/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id2" id="id10"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-manage-py" id="id11"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-admin-py-django-admin" id="id12"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#manage-py" id="id13"&gt;manage.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id3" id="id14"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id4" id="id15"&gt;プロジェクト作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id5" id="id16"&gt;アプリケーション作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id6" id="id17"&gt;マイグレーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id7" id="id18"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#runserver" id="id19"&gt;runserver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id8" id="id20"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#id9" id="id21"&gt;使用例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#django-dbdb" id="id22"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#system-check-framework-django" id="id23"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/manage/#python2" id="id24"&gt;使用例 (python2)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id10"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/"&gt;Django documentation &amp;gt; django-admin と manage.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="django-admin-manage-py"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id11"&gt;django-admin と manage.py の違い&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;通常、単体の Django プロジェクトを用いる場合、 &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; よりも &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; の方が簡単に利用できる&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;python &lt;span class="pre"&gt;-m&lt;/span&gt; django&lt;/tt&gt; はすべて同じことができる ( &lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; 後は)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="django-admin-py-django-admin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id12"&gt;django-admin.py, django-admin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;インストールすると使えるようになる&lt;/li&gt;
&lt;li&gt;基本的にどこからでも利用できる&lt;/li&gt;
&lt;li&gt;Django を &lt;tt class="docutils literal"&gt;setup.py&lt;/tt&gt; ユーティリティを通じてインストールした場合は &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;django-admin&lt;/span&gt;&lt;/tt&gt; スクリプトはシステムのパスが通っている場所に配置されます。もしパスが通った箇所に存在しなければ、Python インストール先の &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;site-packages/django/bin&lt;/span&gt;&lt;/tt&gt; 内で見つける事ができます。そのスクリプトに対して、 &lt;tt class="docutils literal"&gt;/usr/local/bin&lt;/tt&gt; 等のパスが通っている場所からシンボリックリンクを張ることを検討してください。&lt;/li&gt;
&lt;li&gt;新しく Django プロジェクトを作成するときに利用する&lt;/li&gt;
&lt;li&gt;Django プロジェクトを作成してしまったら &lt;tt class="docutils literal"&gt;manage.py&lt;/tt&gt; が使えるようになるので出番がなくなる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="manage-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id13"&gt;manage.py&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;startproject&lt;/tt&gt; でプロジェクトを作成すると自動で作成される&lt;/li&gt;
&lt;li&gt;Django が提供する便利な管理コマンドが使えるほか...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id14"&gt;よく使う Django 管理コマンド&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id15"&gt;プロジェクト作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9b638bcdddfb436ab5a516f6fc537ce9-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_9b638bcdddfb436ab5a516f6fc537ce9-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_9b638bcdddfb436ab5a516f6fc537ce9-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# django-admin.py startproject &amp;lt;設定ディレクトリ名&amp;gt; &amp;lt;つくる場所&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_9b638bcdddfb436ab5a516f6fc537ce9-4"&gt;&lt;/a&gt;$ django-admin.py startproject config .
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id16"&gt;アプリケーション作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_2d2e12e33e4542b99d7ccaad70e6d518-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# プロジェクトのディレクトリに移動する&lt;/span&gt;
&lt;a name="rest_code_2d2e12e33e4542b99d7ccaad70e6d518-2"&gt;&lt;/a&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; project_dir
&lt;a name="rest_code_2d2e12e33e4542b99d7ccaad70e6d518-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py startapp &amp;lt;アプリケーション名&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_2d2e12e33e4542b99d7ccaad70e6d518-4"&gt;&lt;/a&gt;$ python manage.py startapp account
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;作成後、 settings.py &amp;gt; &lt;tt class="docutils literal"&gt;INSTALLED_APPS&lt;/tt&gt; に手動でアプリケーションを追加する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id17"&gt;マイグレーション&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションファイルを作成する&lt;/span&gt;
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py makemigrations [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-3"&gt;&lt;/a&gt;$ python manage.py makemigrations account
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# マイグレーションを実行する&lt;/span&gt;
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py migrate [&amp;lt;アプリケーション名&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_d8f97f965ac04bca8109bcfd29ba6fa6-7"&gt;&lt;/a&gt;$ python manage.py migrate account
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id18"&gt;スーバーユーザー作成&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_9db2ea2d8d67439aa016f2b60dd8584f-1"&gt;&lt;/a&gt;$ python manage.py createsuperuser
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="runserver"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id19"&gt;runserver&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_a3adc276f80a4015a4b710b7f2265e19-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 開発用の Web サーバーを起動する&lt;/span&gt;
&lt;a name="rest_code_a3adc276f80a4015a4b710b7f2265e19-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# python manage.py runserver [&amp;lt;IPアドレス&amp;gt;:&amp;lt;ポート番号&amp;gt;]&lt;/span&gt;
&lt;a name="rest_code_a3adc276f80a4015a4b710b7f2265e19-3"&gt;&lt;/a&gt;$ python manage.py runserver &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8000
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;IPアドレスとポート番号を省略すると &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; で起動する&lt;/li&gt;
&lt;li&gt;Docker 上で runserver =&amp;gt; ホストOSのブラウザから &lt;tt class="docutils literal"&gt;127.0.0.1:8000&lt;/tt&gt; に接続できないときは、 &lt;tt class="docutils literal"&gt;0.0.0.0:8000&lt;/tt&gt; で起動してみる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id20"&gt;インタラクティブモードで実行する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-2"&gt;&lt;/a&gt;$ python manage.py shell
&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こうとか&lt;/span&gt;
&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-4"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings._ python manage.py shell
&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# こう&lt;/span&gt;
&lt;a name="rest_code_0a94a9994f4d4328a439a9ee372b0cbd-6"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;/pre&gt;&lt;div class="section" id="id9"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id21"&gt;使用例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-1"&gt;&lt;/a&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;shell&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Python&lt;/span&gt; &lt;span class="mf"&gt;2.7&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Dec&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt; &lt;span class="mi"&gt;2017&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;38&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;GCC&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="mi"&gt;20120313&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Red&lt;/span&gt; &lt;span class="n"&gt;Hat&lt;/span&gt; &lt;span class="mf"&gt;4.4&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;linux2&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Type&lt;/span&gt; &lt;span class="s2"&gt;"help"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"copyright"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"credits"&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;"license"&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;more&lt;/span&gt; &lt;span class="n"&gt;information&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;InteractiveConsole&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-6"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;myapp.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-7"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-8"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;target_entry_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-9"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-10"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;target_entry_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-11"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expiration_year_month__isnull&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8e0ff8459edf4164ac907efb81888cb8-12"&gt;&lt;/a&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-dbdb"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id22"&gt;Django の DBシェルでローカルDBにつなぐ&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_84d01efbf748473ba5d3d16923263fb2-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python manage.py dbshell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings.local
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="system-check-framework-django"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id23"&gt;System check framework を使って、Django プロジェクトの一般的な問題を検査する&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/django-admin/#check"&gt;Django documentation &amp;gt; django-admin と manage.py &amp;gt; Available commands &amp;gt; check&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/checks/#system-check-framework"&gt;Django documentation &amp;gt; System check framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="python2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/manage/#id24"&gt;使用例 (python2)&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_8e7005e5cc1c4279a0ecbd370a2224ec-1"&gt;&lt;/a&gt;$ &lt;span class="nv"&gt;DJANGO_SETTINGS_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;settings.local python -Wd manage.py check
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w"&gt;https://docs.python.org/ja/2.7/using/cmdline.html#cmdoption-w&lt;/a&gt;&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Python 2.7 から、 DeprecationWarning とその子クラスはデフォルトで無視されます。 -Wd オプションを指定して有効にすることができます。
&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/manage/</guid><pubDate>Sun, 05 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: Template</title><link>https://32imuf.com/django/template/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id2" id="id22"&gt;リファレンス/書籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id4" id="id23"&gt;なるほどめも&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id5" id="id24"&gt;変数表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id6" id="id25"&gt;フィルタ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id7" id="id26"&gt;デフォルト表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id8" id="id27"&gt;文字列長を表示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id9" id="id28"&gt;エスケープの無効化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id10" id="id29"&gt;日時フォーマット&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id11" id="id30"&gt;改行タグの変換&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id12" id="id31"&gt;リンク変換&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id13" id="id32"&gt;文字の切り詰め&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id14" id="id33"&gt;テンプレートタグ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#if" id="id34"&gt;if&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#for" id="id35"&gt;for&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id15" id="id36"&gt;テンプレートの継承&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id16" id="id37"&gt;外部テンプレートの読み込み&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#url" id="id38"&gt;静的ファイルの配信 URL 取得&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id17" id="id39"&gt;url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id18" id="id40"&gt;自動エスケープ制御&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id19" id="id41"&gt;ベーステンプレートを用意しよう&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/template/#id20" id="id42"&gt;独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id22"&gt;リファレンス/書籍&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/templates/"&gt;Django documentation &amp;gt; テンプレート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/templates/builtins/"&gt;Django documentation &amp;gt; 組み込みタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id23"&gt;なるほどめも&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;変数定義できない&lt;/li&gt;
&lt;li&gt;Python モジュールを直接 import して使うことはできない&lt;ul&gt;
&lt;li&gt;独自の関数を使うにはテンプレートタグやフィルタを自作する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;フィルター: 変数の内容を表示する際の表示形式を変更する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id24"&gt;変数表示&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# __str__() の結果を表示してくれる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-4"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# このように書くと #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;comment&lt;/span&gt; &lt;span class="s2"&gt;"以下の順番に値を取得しようとして、一番先に取得できた値を表示してくれる"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-7"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user['username']  # 1. 辞書としての照合&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-8"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user.username     # 2. 属性値の照合&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-9"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user.username()   # 3. メソッド呼び出し&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-10"&gt;&lt;/a&gt;&lt;span class="x"&gt;  user[username]    # 4. リストやタプルの添字指定&lt;/span&gt;
&lt;a name="rest_code_3eb4ca0e78334c718450456ed3907ccc-11"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endcomment&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;テンプレートには「コンテキスト」と呼ばれる変数と値がマッピングされたオブジェクトが渡される&lt;ul&gt;
&lt;li&gt;コンテキストに含まれるもの&lt;ul&gt;
&lt;li&gt;ビューから渡された変数&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;settings.py&lt;/tt&gt; の &lt;tt class="docutils literal"&gt;TEMPLATES.OPTIONS.context_processors&lt;/tt&gt; に定義された関数でセットされた変数&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;request&lt;/tt&gt;: リクエストオブジェクト&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;user&lt;/tt&gt;: ユーザー&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;perms&lt;/tt&gt;: ユーザーのパーミッション&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;messages&lt;/tt&gt;: フラッシュメッセージ&lt;/li&gt;
&lt;li&gt;e.t.c...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;何もしなくも XSS 対策として &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;'&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;"&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;amp;&lt;/tt&gt; を自動でエスケープしてくれる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id25"&gt;フィルタ&lt;/a&gt;&lt;/h2&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# 変数名の直後に ``|`` (パイプ) を使って繋げる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-4"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタによっては引数もとれる、 ``:`` で繋げる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-7"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタは ``|`` で連結できる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_14ee2b22f0e3498e9f6202b20e87c223-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;変数名&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt;&lt;span class="err"&gt;|&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="err"&gt;フィルタ名&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;:"&amp;lt;引数&amp;gt;"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id26"&gt;デフォルト表示&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_43e7c5ddf62640ccace02c317a69db02-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.first_name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt;&lt;span class="s2"&gt;:""&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.first_name&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;default&lt;/span&gt;&lt;span class="s2"&gt;:""&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;変数が存在しない場合、あるいは変数の値が &lt;tt class="docutils literal"&gt;None&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;''&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;0&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;False&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;[]&lt;/tt&gt; などの場合に指定した文字列を表示する&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id27"&gt;文字列長を表示&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_25cb42ef481741c79ff74fc12ca0ff18-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id28"&gt;エスケープの無効化&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_91d0b9e118974d2091c662ee24a253e1-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;safe&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;XSS 対策として自動でエスケープしてくれる &lt;tt class="docutils literal"&gt;&amp;lt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;gt;&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;'&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;"&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;&amp;amp;&lt;/tt&gt; をエスケープしない&lt;/li&gt;
&lt;li&gt;変数の内容が安全だとわかっている場合のみ利用すること&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id10"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id29"&gt;日時フォーマット&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_0e717e621ce9449a8c4dc9260ef1e65a-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;user.last_login&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;date&lt;/span&gt;&lt;span class="s2"&gt;:"Y-m-d H:i:s"&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id30"&gt;改行タグの変換&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_d5dc67d12a0c46e8a4d3737f72f68dcb-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;linebreaksbr&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;\n&lt;/tt&gt; を &lt;tt class="docutils literal"&gt;&amp;lt;br&amp;gt;&lt;/tt&gt; に変換してくれる&lt;/li&gt;
&lt;li&gt;便利だな...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id31"&gt;リンク変換&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_36ee3e7dc7c7459c93b43062c94ac7bb-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;urlize&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;URL と メールアドレスの部分だけをアンカータグで囲んでクリック可能なリンクに変換してくれる&lt;/li&gt;
&lt;li&gt;しゅごいな...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id32"&gt;文字の切り詰め&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_56f058479baa4a87a5becd7ccad5364f-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.description&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;truncatechars_html&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;指定した文字数まで切り詰めて &lt;tt class="docutils literal"&gt;...&lt;/tt&gt; をくっつけてくれる&lt;/li&gt;
&lt;li&gt;HTML タグを考慮して省略後の文字にきちんと閉じタグをつけてくれる&lt;/li&gt;
&lt;li&gt;うええ...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id14"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id33"&gt;テンプレートタグ&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="if"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id34"&gt;if&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.is_superuser&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  システム管理者です。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nv"&gt;user.is_staff&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-4"&gt;&lt;/a&gt;&lt;span class="x"&gt;  スタッフです。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-6"&gt;&lt;/a&gt;&lt;span class="x"&gt;  一般ユーザーだよ。&lt;/span&gt;
&lt;a name="rest_code_460ecefafe674918893a251d0b3048ab-7"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code django"&gt;&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# フィルタと組み合わせることもできる #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;user.username&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-3"&gt;&lt;/a&gt;&lt;span class="x"&gt;  ユーザー名が短かすぎます。&lt;/span&gt;
&lt;a name="rest_code_f22d5e3b03b94926a578b73d4a2c6cba-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="for"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id35"&gt;for&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;book&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;book_list&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;book.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-4"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# for ループ内で使える変数 #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-5"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.counter&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;     &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ番号 ( 1 から順にカウント ) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-6"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.counter0&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ番号 ( 0 から順にカウント ) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-7"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.revcounter&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ値 ( 1 から順に、末尾からカウント) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-8"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.revcounter0&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="c"&gt;{# 現在のループカウンタ値 ( 0 から順に、末尾からカウント) #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-9"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.first&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;       &lt;/span&gt;&lt;span class="c"&gt;{# 最初のループであれば True #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-10"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.last&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;        &lt;/span&gt;&lt;span class="c"&gt;{# 最後のループであれば True #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-11"&gt;&lt;/a&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nb"&gt;forloop&lt;/span&gt;&lt;span class="nv"&gt;.parentloop&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;  &lt;/span&gt;&lt;span class="c"&gt;{# 入れ子のループであるとき、現在のループを囲んでいる 1 つ上のループを表します。 #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-13"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;empty&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-14"&gt;&lt;/a&gt;&lt;span class="x"&gt;  本ない&lt;/span&gt;
&lt;a name="rest_code_5b868718fc9e4cf6984817d71448b89e-15"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt;  &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id15"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id36"&gt;テンプレートの継承&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;親テンプレート &lt;tt class="docutils literal"&gt;parent.html&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_bdb0e588b24d45e3b67c6c46c69f52e0-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;sample&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;Hello &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endblock&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;子テンプレート &lt;tt class="docutils literal"&gt;child.html&lt;/tt&gt;&lt;/p&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;"parent.html"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt; &lt;span class="nv"&gt;sample&lt;/span&gt; &lt;span class="cp"&gt;%}{{&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="nv"&gt;.super&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;World&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt; &lt;span class="o"&gt;{%&lt;/span&gt; &lt;span class="nv"&gt;endblock&lt;/span&gt; &lt;span class="o"&gt;%}&lt;/span&gt;
&lt;a name="rest_code_8604addb468541aeb9f2bf74d0f07440-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="nv"&gt;.super&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;親テンプレートのブロック内部の値をそのまま保持した変数&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id16"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id37"&gt;外部テンプレートの読み込み&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_7b35e834391f4749b1de9b925d08216e-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="s2"&gt;"_message.html"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;ヘッダーフッターなど部品化したテンプレートを別のテンプレートから読み込む場合など&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="url"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id38"&gt;静的ファイルの配信 URL 取得&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# 利用する前に機能をロードしておく #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;load&lt;/span&gt; &lt;span class="nv"&gt;static&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="s2"&gt;"images/logo.png"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_1efd3b73cd0246f592ca2540ae7066fc-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="s2"&gt;"shop/images/no-image.png"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;静的ファイルの配信 URL を取得するためのタグ&lt;/li&gt;
&lt;li&gt;Django デフォルトで使える組み込みタグではないのでロードが必要&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;extends&lt;/tt&gt; している場合、継承元で &lt;tt class="docutils literal"&gt;load&lt;/tt&gt; していても自身のテンプレートでは有効にならないので、
つど &lt;tt class="docutils literal"&gt;load&lt;/tt&gt; する必要がある&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id17"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id39"&gt;url&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-1"&gt;&lt;/a&gt;&lt;span class="c"&gt;{# URL 逆引き #}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-2"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"index"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"accounts:login"&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"shop:detail"&lt;/span&gt; &lt;span class="nv"&gt;book.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_0a633e8467c4439f8c1647bb4730137d-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;url&lt;/span&gt; &lt;span class="s2"&gt;"shop:detail"&lt;/span&gt; &lt;span class="nv"&gt;book_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;book.id&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id18"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id40"&gt;自動エスケープ制御&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code django"&gt;&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;autoescape&lt;/span&gt; &lt;span class="nv"&gt;off&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-2"&gt;&lt;/a&gt;&lt;span class="x"&gt;  自動エスケープがオフになる範囲&lt;/span&gt;
&lt;a name="rest_code_b16634702c3c4b50afb7c24f831b7d04-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endautoescape&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id19"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id41"&gt;ベーステンプレートを用意しよう&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;現場で使える Django の教科書《基礎編》 P.79 参照のこと&lt;ul&gt;
&lt;li&gt;どのテンプレートにも書くような共通の内容は base.html テンプレートする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id20"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/template/#id42"&gt;独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;カスタムタグやカスタムフィルタをつくることができる。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/howto/custom-template-tags/"&gt;Django documentation &amp;gt; 独自のテンプレートタグとフィルタ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/template/</guid><pubDate>Sun, 05 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: Model, Django ORM</title><link>https://32imuf.com/django/model/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id2" id="id14"&gt;リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#model" id="id15"&gt;Model&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id3" id="id16"&gt;リレーションまとめ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id4" id="id17"&gt;Model の実装例&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#on-delete" id="id18"&gt;on_delete&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#usermanager" id="id19"&gt;UserManager&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#django-orm" id="id20"&gt;Django ORM&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id5" id="id21"&gt;1件だけ取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id6" id="id22"&gt;全件取得する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id7" id="id23"&gt;検索条件をつけて取得する&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#filter" id="id24"&gt;filter をつなげる例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#and" id="id25"&gt;AND 条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#or" id="id26"&gt;OR 条件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id8" id="id27"&gt;&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#in" id="id28"&gt;IN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#like" id="id29"&gt;LIKE&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#exists" id="id30"&gt;EXISTS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#order-by" id="id31"&gt;ORDER BY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#q-object" id="id32"&gt;Q Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id9" id="id33"&gt;リレーション先のモデルを使った条件検索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#set" id="id34"&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values-values-list" id="id35"&gt;values() と values_list()&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values" id="id36"&gt;values()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#values-list" id="id37"&gt;values_list()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#aggregate-annotate" id="id38"&gt;aggregate と annotate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#left-outer-join" id="id39"&gt;LEFT OUTER JOIN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#select-related-prefetch-related" id="id40"&gt;select_related, prefetch_related&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id11" id="id41"&gt;遅延評価&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id12" id="id42"&gt;トランザクション&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#user" id="id43"&gt;User モデルを拡張したい&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/model/#id13" id="id44"&gt;発行されるクエリを見たい&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id14"&gt;リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/fields/"&gt;Django documentation &amp;gt; モデルフィールドリファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/querysets/"&gt;Django documentation &amp;gt; QuerySet API reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="model"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id15"&gt;Model&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;複合キーは主キーにできない&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id16"&gt;リレーションまとめ&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-auto docutils"&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head stub"&gt;リレーション&lt;/th&gt;
&lt;th class="head"&gt;使うフィールド&lt;/th&gt;
&lt;th class="head"&gt;使い方&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;th class="stub"&gt;一対一&lt;/th&gt;
&lt;td&gt;OneToOneField&lt;/td&gt;
&lt;td&gt;どちらか一方のモデルに OneToOneField をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;多対一&lt;/th&gt;
&lt;td&gt;ForeignKey&lt;/td&gt;
&lt;td&gt;多側に ForeignKey をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th class="stub"&gt;多対多&lt;/th&gt;
&lt;td&gt;ManyToManyField&lt;/td&gt;
&lt;td&gt;どちらか一方のモデルに ManyToManyField をくっつける&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id17"&gt;Model の実装例&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""出版社モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'publisher'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-9"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版社名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-12"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-15"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-16"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""著者モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-18"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'author'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-20"&gt;&lt;/a&gt;    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'著者名'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-21"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-22"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-23"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-26"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-27"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""本モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-28"&gt;&lt;/a&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-29"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-30"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        対応するテーブルや、複数カラムに対するインデックスやユニーク制約などの&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-31"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        モデル全体に対する付加情報を記述する&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-32"&gt;&lt;/a&gt;&lt;span class="sd"&gt;        """&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-33"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テーブル名を定義&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-34"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 定義しないと、 `アプリケーション名_モデルのクラス名をスネークケースにした文字列` がテーブル名になる&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-35"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_table&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'book'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-36"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-37"&gt;&lt;/a&gt;    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-38"&gt;&lt;/a&gt;        &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'タイトル'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# フィールド名&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-39"&gt;&lt;/a&gt;        &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# 文字列の最大文字数&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-40"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# choices: フォーム利用時にセレクトボックスに表示する選択肢&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-41"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# validators: 文字種チェックなどのバリデーションを指定&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-42"&gt;&lt;/a&gt;        &lt;span class="n"&gt;error_messages&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'invalid'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'title ちがうよー'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="c1"&gt;# バリデーションNGの場合のエラーメッセージ&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-43"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-44"&gt;&lt;/a&gt;    &lt;span class="n"&gt;publisher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-45"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 多対一のリレーション: 多側に ForeignKey をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-46"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Publisher&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版社'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-47"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ForeignKey と OneToOneField には on_delete をつける癖をつけよう&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-48"&gt;&lt;/a&gt;        &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PROTECT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# 自身のレコードは削除されない&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-49"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-50"&gt;&lt;/a&gt;    &lt;span class="n"&gt;authors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ManyToManyField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-51"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 多対多のリレーション: 一方のモデルに ManyToManyField をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-52"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * マイグレーション実行すると Django が自動的に中間テーブルを作成してくれる&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-53"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'著者'&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-54"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-55"&gt;&lt;/a&gt;    &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-56"&gt;&lt;/a&gt;        &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'価格'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-57"&gt;&lt;/a&gt;        &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="c1"&gt;# NULL制約&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-58"&gt;&lt;/a&gt;        &lt;span class="n"&gt;unique&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="c1"&gt;# ユニーク制約&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-59"&gt;&lt;/a&gt;        &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;      &lt;span class="c1"&gt;# フォーム利用時に入力必須にするかどうか&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-60"&gt;&lt;/a&gt;        &lt;span class="n"&gt;db_index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# DB のインデックスを設定するかどうか&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-61"&gt;&lt;/a&gt;        &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;       &lt;span class="c1"&gt;# レコード登録時に値が指定されなかったときのデフォルト値&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-62"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-63"&gt;&lt;/a&gt;    &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'概要'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-64"&gt;&lt;/a&gt;    &lt;span class="n"&gt;publisher_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'出版日'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-65"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-66"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-67"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 管理サイトに表示されるよ&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-68"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-69"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-70"&gt;&lt;/a&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-71"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookStock&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-72"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""本の在庫モデル"""&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-73"&gt;&lt;/a&gt;    &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OneToOneField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-74"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# 一対一のリレーション: どちらか一方のテーブルに OneToOneField をくっつける&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-75"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'本'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-76"&gt;&lt;/a&gt;        &lt;span class="n"&gt;on_delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CASCADE&lt;/span&gt;  &lt;span class="c1"&gt;# 自身のレコードも削除される&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-77"&gt;&lt;/a&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_2a8fde090a764b068e94d04ce13bba53-78"&gt;&lt;/a&gt;    &lt;span class="n"&gt;quantity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'在庫数'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="on-delete"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id18"&gt;on_delete&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/models/fields/#django.db.models.ForeignKey.on_delete"&gt;ForeignKey.on_delete&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;6種類くらいあって、用途に応じて選べる&lt;/li&gt;
&lt;li&gt;Django 2.0 から、必須の引数となる&lt;/li&gt;
&lt;li&gt;それ以前のバージョンでは、デフォルトで &lt;tt class="docutils literal"&gt;CASCADE&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="usermanager"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id19"&gt;UserManager&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/contrib/auth/#manager-methods"&gt;Django documentation &amp;gt; django.contrib.auth &amp;gt; マネージャメソッド&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/auth/customizing/#a-full-example"&gt;Django documentation &amp;gt; Django の認証方法のカスタマイズ &amp;gt; 完全な具体例&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://github.com/django/django/blob/master/django/contrib/auth/models.py#L131"&gt;https://github.com/django/django/blob/master/django/contrib/auth/models.py#L131&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;こうすると登録できる&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9a92d65f52b84a99b470b0b5df7d1db3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyUserManager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;TODO: これは Model のところじゃなくて、認証のところかもしれない。いったんここに置いておく。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="django-orm"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id20"&gt;Django ORM&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;単体のオブジェクトを保存・更新するような行レベルのクエリ操作: モデルオブジェクトのメソッドを利用する&lt;/li&gt;
&lt;li&gt;データベースのテーブルレベルのクエリ操作: モデルの「モデルマネージャー」 ( &lt;tt class="docutils literal"&gt;objects&lt;/tt&gt; ) を経由してクエリセットAPI のメソッドを利用する&lt;ul&gt;
&lt;li&gt;モデルマネージャーは通常、モデルクラスに &lt;tt class="docutils literal"&gt;objects&lt;/tt&gt; という名前で保存されている&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id5"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id21"&gt;1件だけ取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7d60fe2674c440f1bc66e90c55fa2321-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c1"&gt;# この `objects` がモデルマネージャー&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;モデルが返る&lt;/li&gt;
&lt;li&gt;1件も見つからないと &lt;tt class="docutils literal"&gt;DoesNotExist&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;2件以上見つかると &lt;tt class="docutils literal"&gt;MultipleObjectsReturn&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id6"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id22"&gt;全件取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_043ed9623ca74854b5fe3166daf206f1-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;即座にデータベースにはアクセスせず、クエリセットオブジェクトを返す&lt;/li&gt;
&lt;li&gt;しかるべきタイミングでデータベースアクセスする = 遅延評価&lt;/li&gt;
&lt;li&gt;1件も見つからなくても例外発生しない、空のリストを返す&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id23"&gt;検索条件をつけて取得する&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_34267efbacba4787b0de7c7ddf6dee42-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is_active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;即座にデータベースにはアクセスせず、クエリセットオブジェクトを返す&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt; を何度も繋げて書ける&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="filter"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id24"&gt;filter をつなげる例&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;keyword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'keyword'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;keyword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-6"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ここでクエリが発行される (print すると発行される)&lt;/span&gt;
&lt;a name="rest_code_f546b7a2a3664a1d9342041c06c4971a-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;queryset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;この例の場合、発行されるクエリの総数は1本&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="and"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id25"&gt;AND 条件&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5d64d4ab53b54b9d9b616886f2369b2a-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django Book'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;検索条件を列挙すれば AND 条件&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="or"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id26"&gt;OR 条件&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_4cbd2d18519948aabf856707ed0e25ea-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;
&lt;a name="rest_code_4cbd2d18519948aabf856707ed0e25ea-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django Book'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Q&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;Q&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;|&lt;/tt&gt; (パイプ) を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id27"&gt;&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;gt;1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__lt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;gt;=1000&lt;/span&gt;
&lt;a name="rest_code_352f1029202b46798b8e4485364a0053-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__lte&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;lt;=1000&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;gt&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lt&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;gte&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;lte&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="in"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id28"&gt;IN&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6930d2c1b0034f359f1e233f07a78d47-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;900&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# IN(900, 1000)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;in&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;li&gt;IN 句の中身はリストで書く&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="like"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id29"&gt;LIKE&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f784625f330049eda9e05e5b2630a8f5-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# ILIKE '%Django%'&lt;/span&gt;
&lt;a name="rest_code_f784625f330049eda9e05e5b2630a8f5-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__contains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# LIKE '%Django%'&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;__&lt;/tt&gt; (アンダーバー2つ) でフィールド名とキーワード (&lt;tt class="docutils literal"&gt;icontains&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;contains&lt;/tt&gt;) をつなぐ&lt;/li&gt;
&lt;li&gt;大文字と小文字を区別しない: &lt;tt class="docutils literal"&gt;icontains&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;大文字と小文字を区別する: &lt;tt class="docutils literal"&gt;contains&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="exists"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id30"&gt;EXISTS&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;exists: レコードが存在するか否か True/False で返す&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7760e8112b6644a59c7d1e11faba628f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7760e8112b6644a59c7d1e11faba628f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="order-by"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id31"&gt;ORDER BY&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;order_by:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 降順はフィールド名の前に ``-`` つける&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-price'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 複数フィールドでソートするときはカンマ区切り&lt;/span&gt;
&lt;a name="rest_code_8caebfe43b3747a6bff6ec1d9a7c1159-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'publish_date'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="q-object"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id32"&gt;Q Object&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/db/queries/#complex-lookups-with-q"&gt;Q オブジェクトを用いた複雑な検索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id9"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id33"&gt;リレーション先のモデルを使った条件検索&lt;/a&gt;&lt;/h3&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a5b7425693ac4f9e98e66e2934da2cea-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;publisher__name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'自費出版社'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;OneToOneField&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ForeignKey&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;ManyToManyField&lt;/tt&gt; でリレーションしていると、
&lt;tt class="docutils literal"&gt;リレーションつけたフィールド名__リレーション先モデルのフィールド名&lt;/tt&gt; で JOIN できる&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="set"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id34"&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/1.11/ref/models/relations/"&gt;Related objects reference&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; というのは子テーブルのデータを参照する django の機能&lt;/li&gt;
&lt;li&gt;モデルクラス名を全部小文字にしたのに &lt;tt class="docutils literal"&gt;_set&lt;/tt&gt; がつく&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="values-values-list"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id35"&gt;values() と values_list()&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="values"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id36"&gt;values()&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;辞書のクエリセットで取得できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values"&gt;https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_77f3e76f91a04211be4ac8e7f17d43b9-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name__startswith&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Beatles'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_77f3e76f91a04211be4ac8e7f17d43b9-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'Beatles Blog'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tagline'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'All the latest Beatles news.'&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="values-list"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id37"&gt;values_list()&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;タプルのリストのクエリセットで取得できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values-list"&gt;https://docs.djangoproject.com/ja/2.1/ref/models/querysets/#values-list&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d472a69691854066b8a92cff69c656d0-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'headline'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d472a69691854066b8a92cff69c656d0-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'First entry'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;1カラムしか取得しない場合は、 &lt;tt class="docutils literal"&gt;flat=True&lt;/tt&gt; をつけると、リストのクエリセットで取得できる。&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f1e9f9c8fb50453f9ac40139496de0ac-1"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flat&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;order_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_f1e9f9c8fb50453f9ac40139496de0ac-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;QuerySet&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="aggregate-annotate"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id38"&gt;aggregate と annotate&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;tt class="docutils literal"&gt;aggregate&lt;/tt&gt; と &lt;tt class="docutils literal"&gt;annotate&lt;/tt&gt; の違いがわかりやすい&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2014/django-aggregate/"&gt;Djangoの集計について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="left-outer-join"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id39"&gt;LEFT OUTER JOIN&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Django のクエリセットは LEFT OUTER JOIN を表現できない&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;SQLAlchemy でやろう&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="select-related-prefetch-related"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id40"&gt;select_related, prefetch_related&lt;/a&gt;&lt;/h3&gt;
&lt;table border="1" class="colwidths-given docutils"&gt;
&lt;colgroup&gt;
&lt;col width="50%"&gt;
&lt;col width="50%"&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;select_related&lt;/th&gt;
&lt;th class="head"&gt;prefetch_related&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;tt class="docutils literal"&gt;一&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; 側から &lt;tt class="docutils literal"&gt;一&lt;/tt&gt; のリレーションのモデルオブジェクトをJOINで取得&lt;/td&gt;
&lt;td&gt;&lt;tt class="docutils literal"&gt;一&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; 側から &lt;tt class="docutils literal"&gt;多&lt;/tt&gt; のリレーションのモデルオブジェクトを取得してキャッシュに保持&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;リレーション先のオブジェクトを取得するために JOIN を使ったクエリを発行できる&lt;/td&gt;
&lt;td&gt;取得したオブジェクト群をオブジェクト内部のキャッシュに保持し、それを使い回すことで同じクエリが何度も発行されないようにする&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;div class="first last"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_a33425a96fe54426b10da16493072376-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_related&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'publisher'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;td&gt;&lt;div class="first last"&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_bbb0a5a77859471d819b372095dbdfa5-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prefetch_related&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'authors'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;クエリの本数を減らそう!&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;N+1問題&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;特にリレーションを持ったモデルの検索結果 (クエリセットオブジェクト) をループ処理する場合に起こりがち&lt;/li&gt;
&lt;li&gt;後続の処理で何度もアクセスされそうなオブジェクトに対して前もって処理を施しておくことでクエリの本数を減らそう&lt;/li&gt;
&lt;li&gt;その他参考: &lt;a class="reference external" href="http://tokibito.hatenablog.com/entry/20140718/1405691738"&gt;偏った言語信者の垂れ流し &amp;gt; Djangoでprefetch_relatedを使ってクエリ数を減らす&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id11"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id41"&gt;遅延評価&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;クエリセットを返す &lt;tt class="docutils literal"&gt;all()&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;filter()&lt;/tt&gt; がクエリを発行するタイミング (データベースアクセスするタイミング) はこれら&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;for&lt;/tt&gt; ループなどイテレーションが開始されたタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;[]&lt;/tt&gt; を使ってスライスしたタイミング&lt;ul&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;[0:5]&lt;/tt&gt; のように範囲指定するとクエリは即時発行されない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;オブジェクトを直列化したタイミング&lt;/li&gt;
&lt;li&gt;オブジェクトを &lt;tt class="docutils literal"&gt;REPL&lt;/tt&gt; や &lt;tt class="docutils literal"&gt;print()&lt;/tt&gt; で表示したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;len()&lt;/tt&gt; でサイズを取得したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;list()&lt;/tt&gt; で強制的にリストに変換したタイミング&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;bool()&lt;/tt&gt; で強制的に &lt;tt class="docutils literal"&gt;Boolean&lt;/tt&gt; に変換したタイミング&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id12"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id42"&gt;トランザクション&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;デフォルト設定では、オブジェクトの保存・更新・削除は即時反映 (実行した時点でデータベースに反映される)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;トランザクションの範囲指定する場合は、&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;transaction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;atomic&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_387b2a91c5df41eba9543680a5d76bf6-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'fumi23'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;トランザクションのデフォルト設定を変更できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;settings.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-2"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-3"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リクエストの開始から終了までに設定&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-4"&gt;&lt;/a&gt;        &lt;span class="s1"&gt;'ATOMIC_REQUESTS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-5"&gt;&lt;/a&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_00b84c57a54247eba96513f87799c883-6"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="user"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id43"&gt;User モデルを拡張したい&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;現場で使える Django の教科書《基礎編》 P.63 参照のこと&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id13"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/model/#id44"&gt;発行されるクエリを見たい&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;Django シェル&lt;/p&gt;
&lt;pre class="code shell"&gt;&lt;a name="rest_code_e17e5dd86a804d4d8ee2c79ea7227348-1"&gt;&lt;/a&gt;$ python manage.py shell --settings&lt;span class="o"&gt;=&lt;/span&gt;settings._
&lt;a name="rest_code_e17e5dd86a804d4d8ee2c79ea7227348-2"&gt;&lt;/a&gt;&amp;gt;&amp;gt;&amp;gt; print&lt;span class="o"&gt;(&lt;/span&gt;Book.objects.filter&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;title__icontains&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'Django'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.query&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;ロギング&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;django-debug-toolbar&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/model/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: URL ディスパッチャ, URLconf</title><link>https://32imuf.com/django/urlconf/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#id2" id="id4"&gt;書籍/リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#url" id="id5"&gt;URL ディスパッチャ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#urlconf" id="id6"&gt;URLconf&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/urlconf/#id3" id="id7"&gt;書き方&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id4"&gt;書籍/リファレンス&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/en/2.2/topics/http/urls/"&gt;Django documentation &amp;gt; URL ディスパッチャ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="url"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id5"&gt;URL ディスパッチャ&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;例外のハンドリングもしてくれる&lt;ul&gt;
&lt;li&gt;マッチするURLが見つからなかった場合は &lt;tt class="docutils literal"&gt;handler404&lt;/tt&gt; -&amp;gt; &lt;tt class="docutils literal"&gt;404.html&lt;/tt&gt; を返してくれたりする&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="urlconf"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id6"&gt;URLconf&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;urlpatterns&lt;/tt&gt; にリストで書く&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="id3"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/urlconf/#id7"&gt;書き方&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;config/urls.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-2"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Django2.0 から path になった&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-3"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 後ろには / つける、前にはつけないのが慣習&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-4"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'admin/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;site&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urls&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# アプリケーションディレクトリごとに１つずつ urls.py を配置するのがベストプラクティス&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'accounts/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'accounts.urls'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;  &lt;span class="c1"&gt;# /accounts/ で始まるURLパターンは accounts.urls 見てね&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop.urls'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;          &lt;span class="c1"&gt;# /shop/ で始まるURLパターンは shop.urls 見てね&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# GenericView: 短いので、URLconf に直接書くこともある&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'^$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# TemplateView&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s1"&gt;'^$'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;RedirectView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;template_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index.html'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="c1"&gt;# RedirectView&lt;/span&gt;
&lt;a name="rest_code_ebee91acaefc429ba7fc37f0cb46f4cd-12"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;shop/urls.py&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# app_name:&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-2"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# * 必ず設定する、アプリケーション名と同じにする&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-3"&gt;&lt;/a&gt;  &lt;span class="c1"&gt;# * reverse メソッドや url タグから `名前空間名.名前空間内の name&amp;gt;` で逆引きできるようにするため&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;app_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'shop'&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-7"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# パスコンバーター:&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-8"&gt;&lt;/a&gt;      &lt;span class="c1"&gt;# * ビュー関数を呼び出すときのキーワード引数として使われる&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-9"&gt;&lt;/a&gt;      &lt;span class="c1"&gt;# * int, str, path, slug, uuid の 5種類がある、自作も可&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;int:book_id&amp;gt;/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'detail'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_0f08a1fba8db4394b679e66b5e8d3946-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/urlconf/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item><item><title>Django: View</title><link>https://32imuf.com/django/view/</link><dc:creator>fumi23</dc:creator><description>&lt;div&gt;&lt;details&gt;
  &lt;summary&gt;目次&lt;/summary&gt;&lt;div class="contents topic" id="id1"&gt;
&lt;p class="topic-title first"&gt;目次&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id2" id="id7"&gt;リファレンス/書籍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id4" id="id8"&gt;関数ベースのビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#class-based-views" id="id9"&gt;クラスベースのビュー (Class-based views)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#as-view" id="id10"&gt;as_view&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#base-views" id="id11"&gt;Base views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#view" id="id12"&gt;View&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#templateview" id="id13"&gt;TemplateView&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#get-context-data" id="id14"&gt;get_context_data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#redirectview" id="id15"&gt;RedirectView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#generic-views" id="id16"&gt;いろいろな Generic views&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#listview" id="id17"&gt;ListView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#formview" id="id18"&gt;FormView&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#id5" id="id19"&gt;ログイン・ログアウト&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#loginview-logoutview" id="id20"&gt;LoginView, LogoutView&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://32imuf.com/django/view/#loginrequiredmixin" id="id21"&gt;LoginRequiredMixin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;div class="section" id="id2"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id7"&gt;リファレンス/書籍&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/topics/class-based-views/"&gt;Django documentation &amp;gt; クラスベースビュー&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docs.djangoproject.com/ja/2.2/ref/class-based-views/"&gt;Django documentation &amp;gt; ビルトインのクラスベースビュー API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://note.crohaco.net/2015/django-genericview/"&gt;くろのて &amp;gt; [Django]ジェネリックビューってなんなんだよ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;crohaco さん、 shimizukawa さん、 tell-k さん&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id8"&gt;関数ベースのビュー&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;第一引数に django.http.request.HttpRequest を受け取る&lt;/li&gt;
&lt;li&gt;戻り値に django.http.response.HttpResponse を返す&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;HelloView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""関数ベースのビュー"""&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-8"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# render:&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-11"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * HttpResponse を作ってくれる&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * テンプレートをレンダリングするとき使う&lt;/span&gt;
&lt;a name="rest_code_600fe1d4ebf54a94b11587c3e4f07122-13"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="class-based-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id9"&gt;クラスベースのビュー (Class-based views)&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;関数形式の view はコンテキスト、テンプレート、フォーム、全部変えしてあげないといけなかった。つまり全部関数内に書く必要があった。
必要なものを切り離して属性として定義できるようにしたのが genericview (class based view)。&lt;/li&gt;
&lt;li&gt;akiyoko さんは断然、クラスベースビューをお勧めするとのこと&lt;ul&gt;
&lt;li&gt;汎用ビュー (Generic View) としてさまざまな用途のクラスが提供されているのでその恩恵を受けられる&lt;/li&gt;
&lt;li&gt;すべての基本となる基本汎用ビュー &lt;tt class="docutils literal"&gt;django.views.generic.base.View&lt;/tt&gt; を利用すれば見通しのよいビューが書けるし、応用も効く&lt;/li&gt;
&lt;li&gt;汎用ビューのほかにも便利な Mixin クラスを多重継承してお決まりの処理を再利用できる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# from django.views.generic import View と同義↑&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-6"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;HelloView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-7"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""クラスベースのビュー"""&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-9"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-10"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'message'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"Hello World!"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-11"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-12"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_0228b6f0dd204e07948b12bced91becf-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;HelloView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;login&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;auth_login&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-3"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.urls&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-9"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""GET リクエスト"""&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-10"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-11"&gt;&lt;/a&gt;            &lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-12"&gt;&lt;/a&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-13"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ログイン画面用のテンプレートに値が空のフォームをレンダリング&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-14"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# render: テンプレートをレンダリングするとき使う&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-15"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-17"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-18"&gt;&lt;/a&gt;        &lt;span class="sd"&gt;"""POST リクエスト"""&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-19"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リクエストからフォームを作成&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-20"&gt;&lt;/a&gt;        &lt;span class="n"&gt;form&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-21"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# バリデーション (ユーザーの認証も併せて実施)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-22"&gt;&lt;/a&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-23"&gt;&lt;/a&gt;            &lt;span class="c1"&gt;# バリデーション NG の場合はログイン画面のテンプレートを再表示&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-24"&gt;&lt;/a&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'form'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-25"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-26"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# User オブジェクトをフォームから取得&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-27"&gt;&lt;/a&gt;        &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_user&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-28"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-29"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ログイン処理 (取得した User オブジェクトをセッションに保存 &amp;amp; User データを更新)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-30"&gt;&lt;/a&gt;        &lt;span class="n"&gt;auth_login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-31"&gt;&lt;/a&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-32"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# ショップ画面にリダイレクト&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-33"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# redirect: リダイレクトするとき使う&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-34"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * リダイレクト先のURLは reverse を使って取得する&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-35"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#   * ハードコーディングするなかれ&lt;/span&gt;
&lt;a name="rest_code_d839e3083e144a81922da090ba504ab1-36"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shop:index'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="as-view"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id10"&gt;as_view&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/django/django/blob/master/django/views/generic/base.py#L49"&gt;https://github.com/django/django/blob/master/django/views/generic/base.py#L49&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;クラスベースのビューをビュー関数化してくれるメソッド&lt;ul&gt;
&lt;li&gt;as_view は view 関数を生成して返している&lt;/li&gt;
&lt;li&gt;これをしておくと、URL ディスパッチャだけでなく他のビューからも呼び出せるようになる&lt;/li&gt;
&lt;li&gt;実際の処理は self.dispatch で クラスベースビューに処理を委譲してるんだと思います&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;urls.py で as_view せずに、 views.py で as_view した Class-based view をグローバル変数に代入するとうれしいタイミング&lt;ul&gt;
&lt;li&gt;同じ view を複数の url に設定したい&lt;ul&gt;
&lt;li&gt;モジュールの import が1回しか発生しないのはモジュール毎の話じゃなくプロセス全体 ( Django で言うと &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;runserver...&lt;/span&gt;&lt;/tt&gt; した単位) の話&lt;/li&gt;
&lt;li&gt;url ごとに同じ View を何回も生成するんだったら、同じでよい (シングルトン)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="base-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id11"&gt;Base views&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="view"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id12"&gt;View&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;django.views.generic.base.View&lt;/li&gt;
&lt;li&gt;すべての元となるクラスベースビューです。他の全てのクラスベースビューは、この基本クラスを継承しています。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="templateview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id13"&gt;TemplateView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;テンプレートを表示することに特化した Generic View&lt;/li&gt;
&lt;li&gt;トップ画面やヘルプ画面などの単純なテンプレートを表示するのによく使う&lt;/li&gt;
&lt;li&gt;オーバーライドできる変数やメソッドがいくつか用意されていて、デフォルトの挙動をある程度自由に変更できる&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TemplateView&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TemplateView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'index.html'&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_context_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# get_context_data をオーバーライドした例&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-10"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプレートに渡すコンテキストに任意の変数を追加できる&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-11"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_context_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-12"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# テンプレートに渡すコンテキストに `user_count` という変数を追加&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-13"&gt;&lt;/a&gt;        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'user_count'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;all&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-14"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-15"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-16"&gt;&lt;/a&gt;
&lt;a name="rest_code_33fb056e049e44ad91c2153e61bfff6d-17"&gt;&lt;/a&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;div class="section" id="get-context-data"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id14"&gt;get_context_data&lt;/a&gt;&lt;/h4&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;大抵の場合、ビューというのはレンダリングに必要なコンテキストを組み立てるものなので 大体の処理は &lt;tt class="docutils literal"&gt;get_context_data&lt;/tt&gt; というメソッドに書く。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="redirectview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id15"&gt;RedirectView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;リダイレクトに特化した Generic View&lt;/li&gt;
&lt;li&gt;任意の URL にリダイレクトすることに特化したやつ&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RedirectView&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IndexView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RedirectView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-5"&gt;&lt;/a&gt;    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/accounts/login/'&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# pattern_name = 'accounts:login'  # パターンで URL を指定する場合&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_redirect_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;# リダイレクトする URL を動的に組み立てるためのやつをオーバーライドできる&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-10"&gt;&lt;/a&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-11"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_e0fa5bf2354248dea0e6afcc709b1228-13"&gt;&lt;/a&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;IndexView&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;as_view&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="generic-views"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id16"&gt;いろいろな Generic views&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;これが便利とのこと: &lt;a class="reference external" href="https://ccbv.co.uk/"&gt;https://ccbv.co.uk/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="listview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id17"&gt;ListView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;モデルオブジェクトの一覧を表示するための View&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookListView1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# リストしたいモデルを指定する&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-7"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# これだけで、 `shop/book_list.html` という名前のテンプレートに、&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-8"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# object_list (or book_list) という変数名で、&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# Book モデルの全てのレコードの一覧を渡してくれる&lt;/span&gt;
&lt;a name="rest_code_cfb839f4b074427280e8f7847ead49ee-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;/pre&gt;&lt;pre class="code python"&gt;&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# ほかにもいろいろある...&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-2"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# 利用するテンプレートを指定する&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'husky.html'&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# オブジェクトの一覧を取得するためのクエリセットを指定する&lt;/span&gt;
&lt;a name="rest_code_e9f011f5a17443479d7ec8595611b733-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;queryset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price__gt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="formview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id18"&gt;FormView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;何らかの登録・更新処理で &lt;tt class="docutils literal"&gt;form&lt;/tt&gt; を使ったバリデーションが必要なら 大体 &lt;tt class="docutils literal"&gt;FormView&lt;/tt&gt; を使う&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id19"&gt;ログイン・ログアウト&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.co.jp/dp/B07GK7BWB7/"&gt;現場で使える Django の教科書&lt;/a&gt; P.43 によく書いてあるのでそちらを参照のこと&lt;ul&gt;
&lt;li&gt;request.user:&lt;ul&gt;
&lt;li&gt;ログイン済: User オブジェクト&lt;/li&gt;
&lt;li&gt;未ログイン: AnonymousUser オブジェクト&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ログイン済みか否か: request.user.is_authenticated&lt;/li&gt;
&lt;li&gt;ログアウトすると、&lt;ul&gt;
&lt;li&gt;サーバーのセッションクリア&lt;/li&gt;
&lt;li&gt;request.user に AnonymousUser をセット&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="loginview-logoutview"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id20"&gt;LoginView, LogoutView&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;ログインに特化した View: django.contrib.auth.views.LoginView&lt;/li&gt;
&lt;li&gt;ログアウトに特化した View: django.contrib.auth.views.LogoutView&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.views&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LoginView&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;AuthLoginView&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-4"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;LoginView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AuthLoginView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-5"&gt;&lt;/a&gt;    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-6"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    ログインビューの実装例&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    * 設定値の調整が必要になることもあるよ&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-10"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGIN_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-11"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGIN_REDIRECT_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-12"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      * LOGOUT_REDIRECT_URL&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-13"&gt;&lt;/a&gt;&lt;span class="sd"&gt;    """&lt;/span&gt;
&lt;a name="rest_code_29a648936a244878a69c43ec761fdc69-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;template_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'accounts/login.html'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="loginrequiredmixin"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://32imuf.com/django/view/#id21"&gt;LoginRequiredMixin&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;LoginRequiredMixin: 未ログインのユーザーがアクセスしようとしたときに何らかのペナルティを課すための Mixin&lt;ul&gt;
&lt;li&gt;Django1.9 から導入された&lt;/li&gt;
&lt;li&gt;継承すると、未ログインユーザーがアクセスしたらば LOGIN_URL で定義した URL にリダイレクトしてくれるよ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.mixins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LoginRequiredMixin&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.views.generic&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-4"&gt;&lt;/a&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-7"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookListView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LoginRequiredMixin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ListView&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-8"&gt;&lt;/a&gt;    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Book&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-9"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# 403 エラー画面を表示する場合は次のコメントアウトを外す&lt;/span&gt;
&lt;a name="rest_code_070c0e01f8b344a29ce4c3a8a92a19a6-10"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# raise_exception = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>django</category><guid>https://32imuf.com/django/view/</guid><pubDate>Sat, 04 May 2019 15:00:00 GMT</pubDate></item></channel></rss>